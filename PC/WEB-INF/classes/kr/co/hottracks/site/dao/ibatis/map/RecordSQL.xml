<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="RecordSQL">
    <typeAlias alias="bestRecord" type="kr.co.hottracks.site.model.common.record.BestRecord"/>
    <typeAlias alias="record" type="kr.co.hottracks.site.model.common.record.Record"/>
    <typeAlias alias="recordArtist" type="kr.co.hottracks.site.model.common.record.RecordArtist"/>
    <typeAlias alias="recordLabel" type="kr.co.hottracks.site.model.common.record.RecordLabel"/>
    <typeAlias alias="recordTrack" type="kr.co.hottracks.site.model.common.record.RecordTrack"/>
    <typeAlias alias="recordTrackArtist" type="kr.co.hottracks.site.model.common.record.RecordTrackArtist"/>
    <typeAlias alias="recordReadyNotification" type="kr.co.hottracks.site.model.common.record.RecordReadyNotification"/>
    <typeAlias alias="recordSupplier" type="kr.co.hottracks.site.model.common.record.RecordSupplier"/>
    <typeAlias alias="productCriteria" type="kr.co.hottracks.site.model.backoffice.product.ProductCriteria"/>
    <typeAlias alias="recordProduct" type="kr.co.hottracks.site.model.common.record.RecordProduct"/>
    <typeAlias alias="recordProductExt" type="kr.co.hottracks.site.model.common.record.RecordProductExt"/>
    <typeAlias alias="recordProductCriteria" type="kr.co.hottracks.site.model.common.record.RecordProductCriteria"/>
    <typeAlias alias="trackMapExt" type="kr.co.hottracks.site.model.common.record.TrackMapExt"/>
    <typeAlias alias="trackMapParam" type="kr.co.hottracks.site.model.common.record.TrackMapParam"/>
    <typeAlias alias="trackMapCriteria" type="kr.co.hottracks.site.model.common.record.TrackMapCriteria"/>
    <typeAlias alias="recordMedia" type="kr.co.hottracks.site.model.common.record.RecordMedia"/>
    <typeAlias alias="posterCase" type="kr.co.hottracks.site.model.backoffice.product.PosterCase"/>
    <typeAlias alias="posterCaseCriteria" type="kr.co.hottracks.site.model.backoffice.product.PosterCaseCriteria"/>
    <typeAlias alias="posterCaseExt" type="kr.co.hottracks.site.model.backoffice.product.PosterCaseExt"/>
    <typeAlias alias="posterCaseParam" type="kr.co.hottracks.site.model.backoffice.product.PosterCaseParam"/>
    <typeAlias alias="recordProductParam" type="kr.co.hottracks.site.model.common.record.RecordProductParam"/>
    <typeAlias alias="recordMaker" type="kr.co.hottracks.site.model.common.record.RecordMaker"/>
    <typeAlias alias="sellProductKey" type="kr.co.hottracks.site.model.common.product.SellProductKey"/>
    <typeAlias alias="events" type="kr.co.hottracks.site.model.common.event.EventParam"/>
    <typeAlias alias="eventSellProduct" type="kr.co.hottracks.site.model.common.event.EventSellProduct"/>
    <typeAlias alias="sellProduct" type="kr.co.hottracks.site.model.common.product.SellProduct" />
    <typeAlias alias="musDescript" type="kr.co.hottracks.site.model.backoffice.center.MusDescript"/>
    <typeAlias alias="recordOnoffCategoryMap" type="kr.co.hottracks.site.model.common.record.RecordOnoffCategoryMap"/>
    <typeAlias alias="optionTemp" type="kr.co.hottracks.site.model.backoffice.product.OptionTemp"/>
    <typeAlias alias="qnADomain" type="kr.co.hottracks.site.model.common.faq.QnADomain" />
	<typeAlias alias="psaleBcodeChngHist" type="kr.co.hottracks.site.model.backoffice.product.PsaleBcodeChngHist" />
	<typeAlias alias="sellProduct" type="kr.co.hottracks.site.model.common.product.SellProduct"/>
    <typeAlias alias="pair" type="kr.co.hottracks.utils.Pair" />
    
    <insert id="createBestRecord" parameterClass="bestRecord">
        INSERT INTO tb_rec_best_temp (
            best_type_code,
            cate_type_cd,
            rank,
            rcrd_cd,
            rcrd_name,
            sale_qty,
            pre_rank,
            arti_name
        ) VALUES (
            #code#,
            #cateCd#,
            #rank#,
            #recordCd#,
            #recordName#,
            #saleQty#,
            #previousRank#,
            #artistName#
        )
    </insert>

    <select id="getBestRecordList" parameterClass="map" resultClass="bestRecord">
        SELECT
            best_type_code code,
            cate_type_cd cateCd,
            rank,
            rcrd_cd recordCd,
            rcrd_name recordName,
            sale_qty saleQty,
            pre_rank previousRank,
            arti_name artistName
        FROM
            tb_rec_best_temp
        WHERE
            best_type_code = #bestTypeCode#
            AND cate_type_cd = #cateCd#
        ORDER BY
            rank
    </select>
    
    <insert id="createRecord" parameterClass="record">
        INSERT INTO tb_record (
            rcrd_cd,
            label_cd,
            imp_yn,
            maker_cd,
            rlse_dt,
            vol_no,
            rcrd_name,
            rtng_code,
            cover_yn,
            large_cover_yn,
            rcrd_desc,
            regst_dtm,
            drctr,
            actor,
            vocal,
            cmpsr,
            cndtr,
            ocstr,
            prfmr,
            insmt,
            chrus,
            scr,
            sound,
            lang,
            captn,
            local_code,
            scr_hour,
            rcrd_year,
            rcrd_stat,
            cndtr_kor,
            ocstr_kor,
            cmpsr_kor,
            prfmr_kor,
            vocal_kor,
            istmt_kor,
            media_cd,
            sbttl,
            clssc_yn,
            rcrd_type_code,                                                                                                                                                                                   
            rcrd_stat_code,                                                                                                                                                                                   
            cd_count,                                                                                                                                                                                        
            arti_name,                                                                                                                                                                                
            syno_arti_name,                                                                                                                                                                                
            arti_name_kor ,
            disp_yn,
            sell_prdt_bcode,
            jmcode
        ) VALUES (
            #code#,
            #labelCd#,
            #isImport#,
            #makerCd#,
            #releaseDate#,
            #volumnNo#,
            #name#,
            #ratingCode#,
            #hasCover#,
            #hasLargeCover#,
            #description#,
            #registDatetime#,
            #director#,
            #actor#,
            #vocal#,
            #composer#,
            #conductor#,
            #orchestra#,
            #performer#,
            #instrument#,
            #chorus#,
            #screen#,
            #sound#,
            #language#,
            #caption#,
            #localCode#,
            #screenHour#,
            #recordYear#,
            #recordStatus#,
            #korConductor#,
            #korOrchestra#,
            #korComposer#,
            #korPerformer#,
            #korVocal#,
            #korInstrument#,
            #mediaCd#,
            #subtitle#,
            #isClassic#,
            #typeCode#,
            #statusCode#,
            #cdCount#,
            #artistName#,
            #synonymArtistName#,
            #korArtistName#,
            #recDispYn#,
            null,
            #jmcode#
        )
    </insert>
    
    <insert id="createRecordArtist" parameterClass="recordArtist">
        INSERT INTO tb_rec_artist (
            rec_arti_cd,
            arti_name,
            arti_type,
            arti_st,
            kor_arti_name,
            syno_arti_name,
            arti_count,
            use_yn,
            last_name,
            first_name
        ) VALUES (
            #code#,
            #name#,
            #type#,
            #feature#,
            #korName#,
            #synonymName#,
            #count#,
            #isUsage#,
            #lastName#,
            #firstName#
        )
    </insert>
    
    <insert id="createRecordLabel" parameterClass="recordLabel">
        INSERT INTO tb_rec_label (
            label_cd,
            label_name,
            kor_label_name,
            syno_label_name
        ) VALUES (
            #code#,
            #name#,
            #korName#,
            #synonymName#
        )
    </insert>
    
    <insert id="createRecordTrack" parameterClass="recordTrack">
        INSERT INTO tb_rec_track (
            rcrd_cd,
            cd_no,
            trk_no,
            arti_name,
            trk_name,
            audio_yn,
            audio_path,
            audio_url1,
            audio_url2,
            audio_url3
        ) VALUES (
            #recordCode#,
            #cdNo#,
            #no#,
            #artistName#,
            #name#,
            #wmAudioYn#,
            #audioPath#,
            #audioUrl1#,
            #audioUrl2#,
            #audioUrl3#
        )
    </insert>
    
    <insert id="createRecordTrackArtist" parameterClass="recordTrackArtist">
        INSERT INTO tb_rec_track_artist (
            rcrd_cd,
            rec_arti_cd,
            cd_no,
            trk_no,
            seq
        ) VALUES (
            #recordCode#,
            #artistCode#,
            #cdNo#,
            #trackNo#,
            #seq#
        )
    </insert>
    
    
    <!--
            테스트용 재작업 요망 - 김기석
    -->
    <insert id="createRecordReadyNotification" parameterClass="recordReadyNotification">
        <selectKey keyProperty="seq" resultClass="int" type="pre">SELECT REC_READY_NOTI_SEQ.NEXTVAL FROM DUAL</selectKey>
        INSERT INTO tb_rec_ready_noti (
            noti_seq,
            sell_prdt_bcode,
            user_num,
            email,
            hdphn_num,
            noti_type_code,
            send_yn,
            send_email_yn,
            send_sms_yn,
            regst_dtm
        ) VALUES (
            #seq#,
            #barcode#,
            #userNum#,
            #email#,
            #handphoneNum#,
            #notiTypeCode#,
            #isSend#,
            #isSendEmail#,
            #isSendSms#,
            #registDatetime#
        )
    </insert>
    
    <delete id="deleteBestRecordList" parameterClass="map">
        DELETE FROM 
            tb_rec_best_temp
        WHERE
            best_type_code = #bestTypeCode#
            AND cate_type_cd = #cateCd#
    </delete>
    
    <update id="updateRecord" parameterClass="record">
        UPDATE 
            tb_record
        SET
            label_cd = #labelCd#,
            imp_yn = #isImport#,
            maker_cd = #makerCd#,
            rlse_dt = #releaseDate#,
            vol_no = #volumnNo#,
            rcrd_name = #name#,
            rtng_code = #ratingCode#,
            cover_yn = #hasCover#,
            large_cover_yn = #hasLargeCover#,
            rcrd_desc = #description#,
            regst_dtm = #registDatetime#,
            drctr = #director#,
            actor = #actor#,
            vocal = #vocal#,
            cmpsr = #composer#,
            cndtr = #conductor#,
            ocstr = #orchestra#,
            prfmr = #performer#,
            insmt = #instrument#,
            chrus = #chorus#,
            scr = #screen#,
            sound = #sound#,
            lang = #language#,
            captn = #caption#,
            local_code = #localCode#,
            scr_hour = #screenHour#,
            rcrd_year = #recordYear#,
            rcrd_stat = #recordStatus#,
            cndtr_kor = #korConductor#,
            ocstr_kor = #korOrchestra#,
            cmpsr_kor = #korComposer#,
            prfmr_kor = #korPerformer#,
            vocal_kor = #korVocal#,
            istmt_kor = #korInstrument#,
            media_cd = #mediaCd#,
            sbttl = #subtitle#,
            clssc_yn = #isClassic#,
            rcrd_type_code = #typeCode#,                                                                                                                                                                                   
            cd_count = #cdCount#,                                                                                                                                                                                        
            arti_name = #artistName#,                                                                                                                                                                                
            syno_arti_name = #synonymArtistName#,                                                                                                                                                                                
            arti_name_kor = #korArtistName#,
            disp_yn = #recDispYn#,
            jmcode  = #jmcode#
        WHERE
            rcrd_cd = #code#
    </update>
    
    <update id="updateRecordArtist" parameterClass="recordArtist">
        UPDATE
            tb_rec_artist
        SET
            arti_name = #name#, 
            arti_type = #type#, 
            arti_st = #feature#, 
            kor_arti_name = #korName#, 
            syno_arti_name = #synonymName#,
            arti_count = #count#,
            use_yn = #isUsage#,
            last_name = #lastName#,
            first_name = #firstName#
        WHERE
            rec_arti_cd = #code#
    </update>
    
    <update id="updateRecordTrack" parameterClass="recordTrack">
        UPDATE
            tb_rec_track
        SET
            arti_name = #artistName#, 
            trk_name = #name#,
            audio_yn = #wmAudioYn#,
            audio_path = #audioPath#,
            audio_url1 = #audioUrl1#,
            audio_url2 = #audioUrl2#,
            audio_url3 = #audioUrl3#
        WHERE
            rcrd_cd = #recordCode#
            and cd_no = #cdNo#
            and trk_no = #no#
    </update>
    
    <update id="updateRecordLabel" parameterClass="recordLabel">
        UPDATE
            tb_rec_label
        SET
            label_name = #name#,
            kor_label_name = #korName#,
            syno_label_name = #synonymName#
        WHERE
            label_cd = #code#
    </update>
    <!-- 
    <select id="getRecordByCode" parameterClass="string" resultClass="record">
        SELECT 
            rcrd_cd code,
            label_cd labelCd,
            imp_yn isImport,
            maker_cd makerCd,
            rlse_dt releaseDate,
            vol_no volumnNo,
            rcrd_name name,
            rtng_code ratingCode,
            cover_yn hasCover,
            large_cover_yn hasLargeCover,
            rcrd_desc description,
            regst_dtm registDatetime,
            drctr director,
            actor actor,
            vocal vocal,
            cmpsr composer,
            cndtr conductor,
            ocstr orchestra,
            prfmr performer,
            insmt instrument,
            chrus chorus,
            scr screen,
            sound sound,
            lang language,
            captn caption,
            local_code localCode,
            scr_hour screenHour,
            rcrd_year recordYear,
            rcrd_stat recordStatus,
            cndtr_kor korConductor,
            ocstr_kor korOrchestra,
            cmpsr_kor korComposer,
            prfmr_kor korPerformer,
            vocal_kor korVocal,
            istmt_kor korInstrument,
            media_cd mediaCd,
            sbttl subtitle,
            clssc_yn isClassic,
            rcrd_type_code typeCode,                                                                                                                                                                                   
            rcrd_stat_code statusCode,                                                                                                                                                                                   
            cd_count cdCount,                                                                                                                                                                                        
            arti_name artistName,                                                                                                                                                                                
            syno_arti_name synonymArtistName,                                                                                                                                                                                
            arti_name_kor korArtistName
        FROM
            tb_record
        WHERE
            rcrd_cd = #code#
    </select>
    -->
    <select id="getRecordLabelListByAlphabet" parameterClass="map" resultClass="recordLabel">
        SELECT
            label_cd code,
            label_name name,
            kor_label_name korName,
            syno_label_name synonymName
        FROM
            tb_rec_label
        WHERE
            label_name like #alphabet#||'%'
            AND label_cd IN (SELECT label_cd FROM tb_record WHERE clssc_yn = #classicYn#) 
    </select>
    
    <select id="getRecordLabelCountByAlphabet" parameterClass="map" resultClass="int">
        SELECT
            COUNT(*)
        FROM
            tb_rec_label
        WHERE
            label_name like #alphabet#||'%'
            AND label_cd IN (SELECT label_cd FROM tb_record WHERE clssc_yn = #classicYn#) 
    </select>
    
    <!-- 
    작성자: 남형주
    기능: 음반배치시 공급자 등록.
     -->
    <insert id="newCreateRecordSupplier" parameterClass="map">
        merge into  tb_record_supplier a
        using(
            select #supplierId# custcd, (select custnm from mus_custcd@center where custcd = #supplierId#) custnm from dual
        ) b
        on(a.rcrd_spplr_id = b.custcd)
        when matched then 
            update set rcrd_spplr_name = b.custnm
        when not matched then
            insert (rcrd_spplr_id , rcrd_spplr_name)
            values(b.custcd, b.custnm)
    </insert>

 <!-- 
    작성자 : 남형주
    기능 : 음반 배치시 음반정보 등록.수정필요.삭제대상.음반배치 기존대로 수행함.
     -->
     <insert id="newCreateRecord" parameterClass="record">
        merge into tb_record a                                                                                                                                                                                                                                             
		using(                                                                                                                                                                                                                                                       
		        select                                                                                                                                                                                                                                                   
		            #code# as rcrdCd,                                                                                                                                                                                                                             
		            #labelCd# as labelCd,                                                                                                                                                                                                                            
		            #isImport# as isImport,                                                                                                                                                                                                                           
		            #makerCd# as makerCd,                                                                                                                                                                                                                            
		            #releaseDate# as releaseDate,                                                                                                                                                                                                                        
		            #volumnNo#       as volumnNo,                                                                                                                                                                                                                       
		            #name#           as rcrdName,                                                                                                                                                                                                                       
		            #ratingCode#     as ratingCode,                                                                                                                                                                                                                     
		            #hasCover#       as hasCover,                                                                                                                                                                                                                       
		            #hasLargeCover#  as hasLargeCover,  
		            (
		                case when  length(trim(#registDatetime#)) = 8 and (substr(trim(#registDatetime#),5,2) between  '01' and '12' and substr(trim(#registDatetime#),7,2) between  '01' and '31') then 
		                                     to_date(#registDatetime#||'010101','YYYYMMDDHH24:MI:SS') 
		                else to_date('19000101010101','YYYYMMDDHH24:MI:SS')
		                end
		            ) registDatetime,                                                                                                                                                                                                                
		            #director#       as director,                                                                                                                                                                                                                          
		            #actor#          as actor,                                                                                                                                                                                                                          
		            #vocal#          as vocal,                                                                                                                                                                                                                          
		            #composer#       as composer,                                                                                                                                                                                                                          
		            #conductor#      as conductor,                                                                                                                                                                                                                          
		            #orchestra#      as orchestra,                                                                                                                                                                                                                          
		            #performer#      as performer,                                                                                                                                                                                                                          
		            #instrument#     as instrument,                                                                                                                                                                                                                          
		            #chorus#         as chorus,                                                                                                                                                                                                                          
		            #screen#         as screen,                                                                                                                                                                                                                            
		            #sound#          as sound,                                                                                                                                                                                                                          
		            #language#       as language,                                                                                                                                                                                                                           
		            #caption#        as caption,                                                                                                                                                                                                                          
		            #localCode#      as localCode,                                                                                                                                                                                                                      
		            #screenHour#     as screenHour,                                                                                                                                                                                                                     
		            #recordYear#     as recordYear,                                                                                                                                                                                                                     
		            #recordStatus#   as recordStatus,                                                                                                                                                                                                                   
		            #korConductor#   as korConductor,                                                                                                                                                                                                                   
		            #korOrchestra#   as korOrchestra,                                                                                                                                                                                                                   
		            #korComposer#    as korComposer,                                                                                                                                                                                                                    
		            #korPerformer#   as korPerformer,                                                                                                                                                                                                                   
		            #korVocal#       as korVocal,                                                                                                                                                                                                                       
		            #korInstrument#  as korInstrument,                                                                                                                                                                                                                  
		            #korArtistName#  as korArtistName,                                                                                                                                                                                                                  
		            #mediaCd#        as mediaCd,                                                                                                                                                                                                                        
		            #subtitle#       as subtitle,                                                                                                                                                                                                                          
		            #isClassic#      as isClassic,                                                                                                                                                                                                                        
		            #typeCode#       as typeCode,                                                                                                                                                                                                                   
		            #statusCode#     as statusCode,                                                                                                                                                                                                                   
		            #cdCount#        as cdCount,                                                                                                                                                                                                                        
		            #artistName#     as artistName,                                                                                                                                                                                                                       
		            #synonymArtistName# as synonymArtistName,                                                                                                                                                                                                              
		            #recDispYn#  as recDispYn,                                                                                                                                                                                                                         
		            null         as sellPrdtBcode,                                                                                                                                                                                                                  
		            #jmcode#     as jmcode                                                                                                                                                                                                                          
		        from  dual                                                                                                                                                                                                                                   
		    ) b                                                                                                                                                                                                                                                     
		    on(                                                                                                                                                                                                                                                    
		        a.rcrd_cd = b.rcrdCd                                                                                                                                                                                                                               
		    )                                                                                                                                                                                                                                                      
		    when matched then                                                                                                                                                                                                                                      
		    update set                                                                                                                                                                                                                                             
		         label_cd   = b.labelCd,                                                                                                                                                                                                         
		         imp_yn    = b.isImport,                                                                                                                                                                                                          
		         maker_cd  = b.makerCd,                                                                                                                                                                                                           
		         rlse_dt   = b.releaseDate,                                                                                                                                                                                                       
		         vol_no    = b.volumnNo,                                                                                                                                                                                                          
		         rcrd_name = b.rcrdName,                                                                                                                                                                                                          
		         rtng_code = b.ratingCode,                                                                                                                                                                                                        
		         cover_yn  = b.hasCover,                                                                                                                                                                                                          
		         large_cover_yn = b.hasLargeCover,                                                                                                                                                                                                     
		         regst_dtm = b.registDatetime,                                                                                                                                                                                                    
		         drctr = b.director,                                                                                                                                                                                                             
		         actor = b.actor,                                                                                                                                                                                                             
		         vocal = b.vocal,                                                                                                                                                                                                             
		         cmpsr = b.composer,                                                                                                                                                                                                               
		         cndtr = b.conductor,                                                                                                                                                                                                              
		         ocstr = b.orchestra,                                                                                                                                                                                                              
		         prfmr = b.performer,                                                                                                                                                                                                              
		         insmt = b.instrument,                                                                                                                                                                                                             
		         chrus = b.chorus,                                                                                                                                                                                                                 
		         scr   = b.screen,                                                                                                                                                                                                                 
		         sound = b.sound,                                                                                                                                                                                                             
		         lang  = b.language,                                                                                                                                                                                                              
		         captn = b.caption,                                                                                                                                                                                                             
		         local_code = b.localCode,                                                                                                                                                                                                         
		         scr_hour   = b.screenHour,                                                                                                                                                                                                        
		         rcrd_year  = b.recordYear,                                                                                                                                                                                                        
		         rcrd_stat  = b.recordStatus,                                                                                                                                                                                                      
		         cndtr_kor  = b.korConductor,                                                                                                                                                                                                      
		         ocstr_kor  = b.korOrchestra,                                                                                                                                                                                                      
		         cmpsr_kor  = b.korComposer,                                                                                                                                                                                                       
		         prfmr_kor  = b.korPerformer,                                                                                                                                                                                                      
		         vocal_kor  = b.korVocal,                                                                                                                                                                                                   
		         istmt_kor  = b.korInstrument,                                                                                                                                                                                              
		         media_cd   = b.mediaCd,                                                                                                                                                                                                     
		         sbttl      = b.subtitle,                                                                                                                                                                                                  
		         clssc_yn   = b.isClassic,                                                                                                                                                                                                     
		         rcrd_type_code = b.typeCode,                                                                                                                                                                                                      
		         rcrd_stat_code = b.statusCode,                                                                                                                                                                                                      
		         cd_count = b.cdCount,                                                                                                                                                                                                     
		         arti_name = b.artistName,                                                                                                                                                                                                   
		         syno_arti_name = b.synonymArtistName,                                                                                                                                                                                                 
		         arti_name_kor = b.korArtistName,                                                                                                                                                                                                  
		         disp_yn = b.recDispYn,                                                                                                                                                                                                   
		         jmcode = b.jmcode                                                                                                                                                                                                    
		    when not matched then                                                                                                                                                                                                                                  
		    INSERT (                                                                                                                                                                                                                                               
		        rcrd_cd,                                                                                                                                                                                                                                           
		        label_cd,                                                                                                                                                                                                                                          
		        imp_yn,                                                                                                                                                                                                                                            
		        maker_cd,                                                                                                                                                                                                                                          
		        rlse_dt,                                                                                                                                                                                                                                           
		        vol_no,                                                                                                                                                                                                                                            
		        rcrd_name,                                                                                                                                                                                                                                         
		        rtng_code,                                                                                                                                                                                                                                         
		        cover_yn,                                                                                                                                                                                                                                          
		        large_cover_yn,                                                                                                                                                                                                                                    
		        regst_dtm,                                                                                                                                                                                                                                         
		        drctr,                                                                                                                                                                                                                                             
		        actor,                                                                                                                                                                                                                                             
		        vocal,                                                                                                                                                                                                                                             
		        cmpsr,                                                                                                                                                                                                                                             
		        cndtr,                                                                                                                                                                                                                                             
		        ocstr,                                                                                                                                                                                                                                             
		        prfmr,                                                                                                                                                                                                                                             
		        insmt,                                                                                                                                                                                                                                             
		        chrus,                                                                                                                                                                                                                                             
		        scr,                                                                                                                                                                                                                                               
		        sound,                                                                                                                                                                                                                                             
		        lang,                                                                                                                                                                                                                                              
		        captn,                                                                                                                                                                                                                                             
		        local_code,                                                                                                                                                                                                                                        
		        scr_hour,                                                                                                                                                                                                                                          
		        rcrd_year,                                                                                                                                                                                                                                         
		        rcrd_stat,                                                                                                                                                                                                                                         
		        cndtr_kor,                                                                                                                                                                                                                                         
		        ocstr_kor,                                                                                                                                                                                                                                         
		        cmpsr_kor,                                                                                                                                                                                                                                         
		        prfmr_kor,                                                                                                                                                                                                                                         
		        vocal_kor,                                                                                                                                                                                                                                         
		        istmt_kor,                                                                                                                                                                                                                                         
		        media_cd,                                                                                                                                                                                                                                          
		        sbttl,                                                                                                                                                                                                                                             
		        clssc_yn,                                                                                                                                                                                                                                          
		        rcrd_type_code,                                                                                                                                                                                                                                    
		        rcrd_stat_code,                                                                                                                                                                                                                                    
		        cd_count,                                                                                                                                                                                                                                          
		        arti_name,                                                                                                                                                                                                                                         
		        syno_arti_name,                                                                                                                                                                                                                                    
		        arti_name_kor ,                                                                                                                                                                                                                                    
		        disp_yn,                                                                                                                                                                                                                                           
		        sell_prdt_bcode,                                                                                                                                                                                                                                   
		        jmcode                                                                                                                                                                                                                                             
		    ) VALUES (                                                                                                                                                                                                                                             
		        b.rcrdCd,                                                                                                                                                                                                                                          
		        b.labelCd,                                                                                                                                                                                                                                         
		        b.isImport,                                                                                                                                                                                                                                        
		        b.makerCd,                                                                                                                                                                                                                                         
		        b.releaseDate,                                                                                                                                                                                                                                     
		        b.volumnNo,                                                                                                                                                                                                                                        
		        b.rcrdName,                                                                                                                                                                                                                                        
		        b.ratingCode,                                                                                                                                                                                                                                      
		        b.hasCover,                                                                                                                                                                                                                                        
		        b.hasLargeCover,                                                                                                                                                                                                                                   
		        b.registDatetime,                                                                                                                                                                                                                                  
		        b.director,                                                                                                                                                                                                                                            
		        b.actor,                                                                                                                                                                                                                                               
		        b.vocal,                                                                                                                                                                                                                                               
		        b.composer,                                                                                                                                                                                                                                            
		        b.conductor,                                                                                                                                                                                                                                           
		        b.orchestra,                                                                                                                                                                                                                                           
		        b.performer,                                                                                                                                                                                                                                           
		        b.instrument,                                                                                                                                                                                                                                          
		        b.chorus,                                                                                                                                                                                                                                              
		        b.screen,                                                                                                                                                                                                                                              
		        b.sound,                                                                                                                                                                                                                                               
		        b.language,                                                                                                                                                                                                                                            
		        b.caption,                                                                                                                                                                                                                                             
		        b.localCode,                                                                                                                                                                                                                                       
		        b.screenHour,                                                                                                                                                                                                                                      
		        b.recordYear,                                                                                                                                                                                                                                      
		        b.recordStatus,                                                                                                                                                                                                                                    
		        b.korConductor,                                                                                                                                                                                                                                    
		        b.korOrchestra,                                                                                                                                                                                                                                    
		        b.korComposer,                                                                                                                                                                                                                                     
		        b.korPerformer,                                                                                                                                                                                                                                    
		        b.korVocal,                                                                                                                                                                                                                                        
		        b.korInstrument,                                                                                                                                                                                                                                   
		        b.mediaCd,                                                                                                                                                                                                                                         
		        b.subtitle,                                                                                                                                                                                                                                           
		        b.isClassic,                                                                                                                                                                                                                                         
		        b.typeCode,                                                                                                                                                                                                                                    
		        b.statusCode,                                                                                                                                                                                                                                    
		        b.cdCount,                                                                                                                                                                                                                                         
		        b.artistName,                                                                                                                                                                                                                                        
		        b.synonymArtistName,                                                                                                                                                                                                                               
		        b.korArtistName ,                                                                                                                                                                                                                                  
		        b.recDispYn,                                                                                                                                                                                                                                          
		        null,                                                                                                                                                                                                                                              
		        b.jmcode                                                                                                                                                                                                                                           
		    )                                                                                                                                                                                                                                                          
     </insert>
     <!-- 
                음반배치시 히스토리저장 . 삭제대상 음반배치 기존대로 수행함.
      -->
     <insert id="insertProductHistory" parameterClass="map">
       insert into tb_sell_product_history (
            sell_prdt_bcode,
            prime_sell_prdt_bcode,
            sell_prdt_hist_seq,
            prdt_name,
            prmt_deny_rsn,
            dlvy_delay_dtcnt,
            limit_count,
            sell_count,
            regst_dtm,
            regst_admin_id,
            max_order_alw_count,
            prdt_srch_word,
            prdt_sell_price,
            prdt_chge_rate,
            prdt_buy_price,
            kyobo_chge_rate,
            prdt_dscnt_rate,
            prdt_dscnt_price,
            prdt_saved_rate,
            prdt_saved_price,
            prmt_code,
            prdt_stat_code,
            dlvy_vndr_id,
            prdt_bcode,
            disp_yn,
            brand_id,
            vndr_cntrt_id,
            nyo_sell_ban_yn,
            disp_order,
            sell_prdt_gbn,
            prvd_title,
            mnftr,
            plorg,
            imp_yn,
            order_make_yn,
            ssn_prdt_yn,
            cvsl_yn,
            dlvy_area,
            store_recv_yn,
            area_dlvy_yn,
            prdt_dtl_info,
            spec_name,
            spec_group_name,
            free_dlvy_yn,
            lave_count,
            cod_dlvy_amt_yn,
            mod_dtm,
            mod_admin_id,
            prmt_dtm,
            htrs_bcode,
            khm_yn
       )
        select  
            sell_prdt_bcode        ,
            prime_sell_prdt_bcode  ,
            prdt_hist_seq.nextval  ,                  
            prdt_name              ,   
            prmt_deny_rsn          , 
            dlvy_delay_dtcnt       ,
            limit_count            ,
            sell_count             ,
            regst_dtm              ,
            regst_admin_id         ,
            max_order_alw_count    ,
            prdt_srch_word         ,
            prdt_sell_price        ,
            prdt_chge_rate         ,
            prdt_buy_price         ,
            kyobo_chge_rate        ,
            prdt_dscnt_rate        ,
            prdt_dscnt_price       ,
            prdt_saved_rate        ,
            prdt_saved_price       ,
            prmt_code              ,
            prdt_stat_code         ,
            dlvy_vndr_id           ,
            prdt_bcode             ,
            disp_yn                ,
            brand_id               ,
            vndr_cntrt_id          ,
            nyo_sell_ban_yn        ,
            disp_order             ,
            sell_prdt_gbn          ,
            prvd_title             ,
            mnftr                  ,
            plorg                  ,
            imp_yn                 ,
            order_make_yn          ,
            ssn_prdt_yn            ,
            cvsl_yn                ,
            dlvy_area              ,
            store_recv_yn          ,
            area_dlvy_yn           ,
            prdt_dtl_info          ,
            spec_name              ,
            spec_group_name        ,
            free_dlvy_yn           ,
            lave_count             ,
            cod_dlvy_amt_yn        ,
            mod_dtm                ,
            mod_admin_id           ,
            prmt_dtm               ,
            htrs_bcode             ,
            khm_yn                 
        from tb_sell_product
        where sell_prdt_bcode = #sellPrdtBcode#
    </insert>
    
    <!--  
    작성자: 남형주
    기능 : 음반배치시  음반상품 등록 , 삭제대상,  음반배치 기존대로 수행함
-->
    <insert id="saveSellProduct" parameterClass="record">
        MERGE INTO tb_sell_product aa
        USING(
            select 
                #sellPrdtBcode# barcode, 
                #buyPrice#      buyPrice,      
                #sellPrice#     sellPrice,     
                #discountPrice# discountPrice, 
                #discountRate#  discountRate,  
                #name#          name,          
                #registDatetime# registDatetime,
                #ratingCode#     ratingCode,    
                #typeCode#       typeCode,      
                #makerName#      makerName,
                #delivery#       delivery,     
                #code#           code,         
                #statusCode#     statusCode,   
                #rcrdPsaleYn#    rcrdPsaleYn, 
                #recordSupplierId# recordSupplierId,
                #subtitle#      subtitle
            from dual
        ) bb
        ON (aa.sell_prdt_bcode = bb.sellPrdtBcode and aa.rcrd_cd = bb.code)
        WHEN MATCHED THEN
          UPDATE SET
            prdt_buy_price             = bb.buyPrice,
            prdt_sell_price            = bb.sellPrice,
            prdt_dscnt_price           = bb.discountPrice,
            prdt_dscnt_rate            = bb.discountRate,
            prdt_name                  = bb.name,
            mod_dtm                    = sysdate,
            mod_admin_id               = 'system',
            rcrd_spplr_id              = bb.recordSupplierId
        WHEN NOT MATCHED THEN       
          INSERT (
                sell_prdt_bcode,    
                prdt_buy_price,     
                prdt_sell_price,    
                prdt_dscnt_price,   
                prdt_dscnt_rate,    
                prdt_name,          
                vndr_cntrt_id,      
                prmt_code,          
                prdt_stat_code,     
                dlvy_delay_dtcnt,   
                limit_count,        
                sell_count,         
                max_order_alw_count,
                prdt_srch_word,     
                prdt_chge_rate,     
                kyobo_chge_rate,    
                prdt_saved_rate,    
                prdt_saved_price,   
                regst_dtm,          
                regst_admin_id,     
                disp_yn,            
                brand_id,           
                nyo_sell_ban_yn,    
                disp_order,         
                sell_prdt_gbn,      
                mnftr,              
                plorg,              
                order_make_yn,      
                ssn_prdt_yn,        
                cvsl_yn,            
                dlvy_area,          
                store_recv_yn,      
                area_dlvy_yn,       
                prdt_dtl_info,      
                free_dlvy_yn,       
                lave_count,         
                cod_dlvy_amt_yn,    
                mod_dtm,            
                mod_admin_id,       
                prmt_dtm,           
                htrs_bcode,         
                khm_yn,             
                dlvy_vndr_id,       
                SPEC_AMT_APPLY,     
                RCRD_CD,            
                RCRD_SPPLR_ID,      
                RCRD_RLSE_INFO,     
                RCRD_STAT,          
                RCRD_PSALE_YN,      
                RCRD_HARD_SALE_YN,   
                RCRD_SUB_COMMENTS
            ) VALUES (
                bb.barcode,                              
                bb.buyPrice,                             
                bb.sellPrice,                            
                bb.discountPrice,                        
                bb.discountRate,                         
                bb.name,                                 
                '0001001' ,                             
                'C0302',                                
                'C0312',                         
                0,                                      
                99999  ,                                
                0,                                      
                99999,                                  
                bb.name,                                 
                0,                              
                0,                                      
                1,                                      
                0,                                      
                bb.registDatetime,                       
                'system',                               
                'Y',                                    
                '10682',                                
                decode(bb.ratingCode,'C0845','Y','N'),     
                1,                                      
                decode(bb.typeCode,'C0872','D','C0871','R')
                bb.makerName,                            
                'XX',                                   
                'N',                                    
                'N',                                    
                'N',                                    
                null,                                   
                'N',                                    
                'N',                                    
                null,                                   
                bb.delivery,                             
                0,                                      
                'N',                                    
                sysdate,                                
                'system',                               
                sysdate,                                
                'XX',                                   
                'N',                                    
                '0625',                                 
                'N',                                    
                bb.code,                                 
                bb.recordSupplierId,                     
                '',                                     
                bb.statusCode,                           
                bb.rcrdPsaleYn,                          
                'N',
                bb.subtitle                              
            )
    </insert>
    
 <!-- 
    작성자: 남형주
    기능: 음반배치시 제작사 등록.
     --> 
    <insert id="createRecordMaker" parameterClass="map">
         merge into tb_rec_maker a
         using(
             select #makerCd# jejakcd , (select jejaknm from mus_jejaksa@center where jejakcd = #makerCd#) jejaknm from dual
         ) b
         on(a.maker_cd = b.jejakcd)
         when matched then
         update set maker_name = b.jejaknm
         when not matched then
         insert (maker_cd, maker_name)
         values(jejakcd, jejaknm)
         
    </insert>
    
    <insert id="createRecordSupplier" parameterClass="recordSupplier">
         INSERT INTO tb_record_supplier(
            rcrd_spplr_id,
            rcrd_spplr_name         
         ) VALUES (
            #id#,
            #name#
         )
    </insert>
    
    <insert id="createRecordMaker_bak" parameterClass="recordMaker">
         INSERT INTO tb_rec_maker(
            maker_cd,
            maker_name         
         ) VALUES (
            #makerCd#,
            #makerName#
         )
    </insert>
    
    <select id="getRecordSupplier" parameterClass="string" resultClass="recordSupplier">
         SELECT
            rcrd_spplr_id id,
            rcrd_spplr_name name
         FROM
            tb_record_supplier
         WHERE
            rcrd_spplr_id = #id#
    </select>
    
    <select id="getRecordMakerCd" parameterClass="map" resultClass="recordMaker">
         SELECT
            maker_cd makerCd,
            maker_name makerName
         FROM
            tb_rec_maker
         WHERE
            maker_cd = #makerCd#
    </select>
    
    <select id="getOnlineCategoryIdByCenterCategory" parameterClass="record" resultClass="string">
        SELECT
            ctgr_id
        FROM
            tb_record_onoff_category_map
        WHERE
            cate01cd = #cate01Id#
            AND cate02cd = #cate02Id#
            AND cate03cd = #cate03Id#
    </select>
<!-- 
    작성자: 남형주
    기능 : 초기 미디어 등록 
 -->    
    <insert id="createFirstRecordMedia">
        MERGE INTO tb_rec_media aa
        USING (
                select a.code as mediacd, b.medianm as medianame
                from tb_code a, mus_media@center b
                where a.parnt_code = 'P0082'
                and upper(a.code_name) = upper(b.medianm)
                ) bb
        ON (aa.media_cd = bb.mediaCd)
        WHEN MATCHED THEN
          update set aa.media_name = bb.mediaName
        WHEN NOT MATCHED THEN
          insert (media_cd, media_name)
          values(bb.mediaCd, bb.mediaName)
    </insert>
    
    <update id="updateFirstRecordMedia" parameterClass="recordMedia">
        UPDATE
            tb_rec_media
        SET
            media_name = #mediaName#
        WHERE
            media_cd = #mediaCd#
    </update>

<!-- 
    작성자: 남형주
    기능 : 초기 제작사 등록 
 -->     
    <insert id="createFirstRecordMaker">
        MERGE INTO tb_rec_maker a
        USING mus_jejaksa@center b
        ON (a.maker_cd = b.jejakcd)
        WHEN MATCHED THEN 
          update set maker_name = jejaknm
        WHEN NOT MATCHED THEN
          insert (maker_cd, maker_name)
          values(jejakcd, jejaknm)
    </insert>
    
    <update id="updateFirstRecordMaker" parameterClass="recordMaker">
        UPDATE
            tb_rec_maker
        SET
            maker_name = #makerName#
        WHERE
            maker_cd = #makerCd#
    </update>

<!-- 
    작성자: 남형주
    기능 : 초기 레이블 등록 
 -->    
    <insert id="createFirstRecordLabel">
        MERGE INTO tb_rec_label a
        USING mus_label@center b
        ON (a.label_cd = b.labelcd)
        WHEN MATCHED THEN
          update set a.label_name = b.labelnm, a.kor_label_name = b.korlabelnm, a.syno_label_name = b.synlabelnm
        WHEN NOT MATCHED THEN
          insert (label_cd, label_name, kor_label_name, syno_label_name)
          values(labelcd, labelnm, korlabelnm, synlabelnm)
    </insert>

<!-- 
    작성자: 남형주
    기능 : 초기 아티스트등록 
 -->     
    <insert id="createFirstRecordArtist">
        MERGE INTO tb_rec_artist a
        USING mus_artist@center b
        ON (a.rec_arti_cd = b.artistcd)
        WHEN MATCHED THEN
        update set a.arti_name = b.artistnm, 
                    a.arti_type = b.artistgb, 
                    a.arti_st = b.artistst, 
                    a.kor_arti_name = b.hannm, 
                    a.syno_arti_name = b.synartistnm,
                    a.arti_count = b.artist_cnt,
                    a.use_yn = b.useyn,
                    a.last_name = b.artistnm_last,
                    a.first_name = b.artistnm_first
        WHEN NOT MATCHED THEN
           insert (
                    rec_arti_cd,
                    arti_name,
                    arti_type,
                    arti_st,
                    kor_arti_name,
                    syno_arti_name,
                    arti_count,
                    use_yn,
                    last_name,
                    first_name
                ) VALUES (
                    b.artistcd,
                    b.artistnm, 
                    b.artistgb, 
                    b.artistst, 
                    b.hannm, 
                    b.synartistnm,
                    b.artist_cnt,
                    b.useyn,
                    b.artistnm_last,
                    b.artistnm_first
                )
    </insert>
    
<!--  
    작성자: 남형주
    기능 : 초기 몰상품 등록 
-->
    <insert id="saveFirstMallProduct" parameterClass="map">
        MERGE into tb_mall_product aa
        USING (select a.sell_prdt_bcode
               from tb_sell_product a
               where a.sell_prdt_gbn in ('R','D') 
               and a.rcrd_cd between #sMcd# and #eMcd#
               ) bb
        ON (aa.sell_prdt_bcode = bb.sell_prdt_bcode and aa.mall_id='02')
        WHEN NOT MATCHED THEN
          insert (mall_id, sell_prdt_bcode) values ('02', bb.sell_prdt_bcode)
    </insert>
<!--  
    작성자: 남형주
    기능 : 초기 트랙 등록 
-->
    <insert id="createFirstRecordTrack" parameterClass="map">
        MERGE INTO tb_rec_track aa
        USING (select a.musiccd, a.cdno, a.trackno, a.artistnm, a.tracksong , decode(a.wmaudiogb,'T','Y','N') wmaudiogb
                    , a.path , SUBSTR(a.musiccd, 5, 1) as url1, SUBSTR(a.musiccd, 7, 1) as url2                                                
                    , FN_CREATE_CHECKBIT@center(a.musiccd) as url3 
                from mus_tracksong@center a, tb_record b
                where a.musiccd = b.rcrd_cd
                and b.rcrd_cd between #sMcd# and #eMcd#
              ) bb
        ON (aa.rcrd_cd = bb.musiccd and aa.cd_no = bb.cdno and aa.trk_no = bb.trackno)
        WHEN MATCHED THEN
            update set aa.arti_name = bb.artistnm
                    , aa.trk_name = bb.tracksong
                    , aa.audio_yn = bb.wmaudiogb
                    , aa.audio_path = bb.path
                    , aa.audio_url1 = bb.url1
                    , aa.audio_url2 = bb.url2
                    , aa.audio_url3 = bb.url3
        WHEN NOT MATCHED THEN 
            insert (aa.rcrd_cd, aa.cd_no, aa.trk_no, aa.arti_name, aa.trk_name, aa.audio_yn
                    , aa.audio_path, aa.audio_url1, aa.audio_url2, aa.audio_url3) 
            values(bb.musiccd, bb.cdno, bb.trackno,bb.artistnm, bb.tracksong, bb.wmaudiogb
                    , bb.path, bb.url1, bb.url2, bb.url3)
    </insert>

<!--  
    작성자: 남형주
    기능 : 초기 공급자 등록 
-->
    <insert id="createFirstRecordSupplier">
        MERGE INTO tb_record_supplier a
        USING (
	        select B.custcd, C.custnm  
			from mus_recordmt@center A, mus_srcmkcd@center B, mus_custcd@center C 
			where A.last_srcmkcd = B.srcmkcd
			and B.custcd = C.custcd(+)
			and B.jumcd ='05'
			group by B.custcd, C.custnm
			having C.custnm is null
			union
	        select custcd , custnm from mus_custcd@center
        ) b        
        ON (a.rcrd_spplr_id = b.custcd)
        WHEN MATCHED THEN
          update set rcrd_spplr_name = b.custnm
        WHEN NOT MATCHED THEN
            insert (rcrd_spplr_id, rcrd_spplr_name)
            values(b.custcd, b.custnm)
    </insert>
    

<!--  
    작성자: 남형주
    기능 : 초기 음반 등록 
-->
    <insert id="createFirstRecordData" parameterClass="map">
        MERGE INTO tb_record aa
        USING(
            SELECT
                A.musiccd code,
                (select H.label_cd from tb_rec_label H where H.label_cd = A.labelcd) labelCd, 
                DECODE(A.export, '1', 'Y', 'N') isImport,
                (select I.maker_cd from tb_rec_maker I where I.maker_cd = A.jejakcd) makerCd,
                A.jmcode jmcode,
                (select 
                    DECODE(J.mediacd, '66', 'C0821', '67', 'C0822', '68', 'C0823', '69', 'C0824', '70', 'C0825', '71', 'C0826', '72', 'C0827', '73', 'C0828', '74', 'C0829', '75', 'C082A', '76', 'C082B', '77', 'C082C', '78', 'C082D', '79', 'C082E', '80', 'C082F', '81', 'C082G', '82', 'C082H', '83', 'C082I',null) mediaCd
                    from  (select DECODE(media_cd,'C0821',  '66',  'C0822','67', 'C0823', '68', 'C0824', '69',  'C0825','70', 'C0826', '71', 'C0827', '72',  'C0828','73',  'C0829','74',  'C082A','75',  'C082B','76',  'C082C','77',  'C082D','78', 'C082E', '79', 'C082F', '80', 'C082G','81',   'C082H','82', 'C082I' ,'83',media_cd) mediacd 
                  from tb_rec_media) J
                  where J.mediacd = A.mediacd
                ) mediaCd,  
                nvl(A.chulsiday,' ') releaseDate, 
                A.jipsu volumnNo,
                A.albumnm name,
                A.albumnm_sub subtitle,
                DECODE(A.rating, '0', 'C0841', '1', 'C0842', '2', 'C0843', '3', 'C0844', '4', 'C0845', 'C0841') ratingCode,
                DECODE(A.imagegb, '1', 'Y', 'N') hasCover,
                DECODE((SELECT P.bigimage FROM mus_webetc@center P WHERE P.musiccd = A.musiccd), '1', 'Y', 'N') hasLargeCover,
                (
                    case when  length(trim(A.okdate)) = 8 and (substr(trim(A.okdate),5,2) between  '01' and '12' and substr(trim(A.okdate),7,2) between  '01' and '31') then 
                                         to_date(A.okdate||'010101','YYYYMMDDHH24:MI:SS') 
                    else to_date('19000101010101','YYYYMMDDHH24:MI:SS')
                    end
                ) registDatetime,
                G.director director, 
                G.actor actor,
                DECODE(A.cate01cd, '04', G.vocal, D.vocal) vocal,
                DECODE(A.cate01cd ,'04' ,G.composer, D.composer) composer, 
                DECODE(A.cate01cd ,'04' ,G.conductor,D.conductor) conductor, 
                DECODE(A.cate01cd ,'04' ,G.orchestra,D.orchestra) orchestra, 
                DECODE(A.cate01cd ,'04' ,G.performer,D.performer) performer, 
                DECODE(A.cate01cd ,'04' ,G.akgi, D.akgi) instrument,
                G.chorus chorus, 
                G.screen screen, 
                G.sound sound, 
                G.language language,   
                G.caption caption, 
                G.lacalcode localCode, 
                G.screenhour screenHour,
                DECODE(A.cate01cd, '04', G.recordyear, D.recordyear) recordYear, 
                DECODE(A.cate01cd, '04', G.recordstatus, D.recordstatus) recordStatus,
                DECODE(A.cate01cd, '04', G.conductorhannm, D.conductorhannm) korConductor, 
                DECODE(A.cate01cd, '04', G.orchestrahannm, D.orchestrahannm) korOrchestra,
                DECODE(A.cate01cd, '04', G.composerhannm, D.composerhannm) korComposer,
                DECODE(A.cate01cd, '04', G.performerhannm, D.performerhannm) korPerformer,       
                DECODE(A.cate01cd, '04', G.vocalhannm, D.vocalhannm) korVocal, 
                D.akgihannm korInstrument, 
                DECODE(A.webcate01cd||A.webcate02cd,'0301','Y','0302','Y','0303','Y','0606', 'Y', 'N') isClassic,
                DECODE(A.cate01cd , '04', 'C0872', 'C0871') typeCode,
                A.status statusCode,
                nvl(A.ipsu,0) cdCount,
                DECODE(TRIM(A.ARTISTNM), 'dvd', '', A.artistnm) artistName,
                (SELECT wmsys.wm_concat@center(Y.artistnm) FROM mus_albumdt@center X,mus_artist@center Y WHERE X.cdno='000' AND X.trackno='00' AND X.musiccd = A.musiccd AND X.artistcd = Y.artistcd) synonymArtistName, 
                A.hannm korArtistName,
                A.cate01cd cate01Id,
                A.cate02cd cate02Id,
                A.cate03cd cate03Id,
                'C0312' prdtStatCode,
                A.last_srcmkcd sellPrdtBcode,
                DECODE(A.webgb, '1', 'Y', 'N') recDispYn,
                null recArtiCd
            FROM
                 mus_recordmt@center A, mus_srcmkcd@center B, mus_imagedt@center G, MUS_CLASSICDT@center D, mus_custcd@center F 
            WHERE A.last_srcmkcd = B.srcmkcd
              AND A.musiccd = G.musiccd(+)   
              AND A.musiccd = D.musiccd(+)
              AND B.custcd = F.custcd(+)
              AND A.last_srcmkcd NOT LIKE '21%'
              AND B.jumcd ='05'
              AND LENGTH(A.last_srcmkcd) = 13
              AND A.musiccd between #sMcd# and #eMcd#
              ) bb
        ON (aa.rcrd_cd = bb.code)
        WHEN MATCHED THEN
            UPDATE SET
                aa.label_cd = bb.labelCd,
                aa.imp_yn =bb.isImport,
                aa.maker_cd = bb.makerCd,
                aa.rlse_dt = bb.releaseDate,
                aa.vol_no = bb.volumnNo,
                aa.rcrd_name = bb.name,
                aa.rtng_code =bb.ratingCode,
                aa.cover_yn = bb.hasCover,
                aa.large_cover_yn = bb.hasLargeCover,
                aa.regst_dtm = bb.registDatetime,
                aa.drctr = bb.director,
                aa.actor = bb.actor,
                aa.vocal = bb.vocal,
                aa.cmpsr = bb.composer,
                aa.cndtr = bb.conductor,
                aa.ocstr = bb.orchestra,
                aa.prfmr = bb.performer,
                aa.insmt = bb.instrument,
                aa.chrus = bb.chorus,
                aa.scr = bb.screen,
                aa.sound = bb.sound,
                aa.lang = bb.language,
                aa.captn = bb.caption,
                aa.local_code = bb.localCode,
                aa.scr_hour = bb.screenHour,
                aa.rcrd_year = bb.recordYear,
                aa.rcrd_stat = bb.recordStatus,
                aa.cndtr_kor = bb.korConductor,
                aa.ocstr_kor = bb.korOrchestra,
                aa.cmpsr_kor = bb.korComposer,
                aa.prfmr_kor = bb.korPerformer,
                aa.vocal_kor = bb.korVocal,
                aa.istmt_kor = bb.korInstrument,
                aa.media_cd = bb.mediaCd,
                aa.sbttl = bb.subtitle,
                aa.clssc_yn = bb.isClassic,
                aa.rcrd_type_code = bb.typeCode,                                                                                                                                                                                   
                aa.rcrd_stat_code = bb.statusCode,                                                                                                                                                                                   
                aa.cd_count = bb.cdCount,                                                                                                                                                                                        
                aa.arti_name = bb.artistName,                                                                                                                                                                                
                aa.syno_arti_name = bb.synonymArtistName,                                                                                                                                                                                
                aa.arti_name_kor = bb.korArtistName,
                aa.disp_yn = bb.recDispYn,
                aa.jmcode   = bb.jmcode
        WHEN NOT MATCHED THEN       
            INSERT  (
                aa.rcrd_cd,
                aa.label_cd,
                aa.imp_yn,
                aa.maker_cd,
                aa.rlse_dt,
                aa.vol_no,
                aa.rcrd_name,
                aa.rtng_code,
                aa.cover_yn,
                aa.large_cover_yn,
                aa.rcrd_desc,
                aa.regst_dtm,
                aa.drctr,
                aa.actor,
                aa.vocal,
                aa.cmpsr,
                aa.cndtr,
                aa.ocstr,
                aa.prfmr,
                aa.insmt,
                aa.chrus,
                aa.scr,
                aa.sound,
                aa.lang,
                aa.captn,
                aa.local_code,
                aa.scr_hour,
                aa.rcrd_year,
                aa.rcrd_stat,
                aa.cndtr_kor,
                aa.ocstr_kor,
                aa.cmpsr_kor,
                aa.prfmr_kor,
                aa.vocal_kor,
                aa.istmt_kor,
                aa.media_cd,
                aa.sbttl,
                aa.clssc_yn,
                aa.rcrd_type_code,                                                                                                                                                                                   
                aa.rcrd_stat_code,                                                                                                                                                                                   
                aa.cd_count,                                                                                                                                                                                        
                aa.arti_name,                                                                                                                                                                                
                aa.syno_arti_name,                                                                                                                                                                                
                aa.arti_name_kor ,
                aa.disp_yn,
                aa.sell_prdt_bcode,
                aa.jmcode
            ) VALUES (
                bb.code,
                bb.labelCd,
                bb.isImport,
                bb.makerCd,
                bb.releaseDate,
                bb.volumnNo,
                bb.name,
                bb.ratingCode,
                bb.hasCover,
                bb.hasLargeCover,
                '',
                bb.registDatetime,
                bb.director,
                bb.actor,
                bb.vocal,
                bb.composer,
                bb.conductor,
                bb.orchestra,
                bb.performer,
                bb.instrument,
                bb.chorus,
                bb.screen,
                bb.sound,
                bb.language,
                bb.caption,
                bb.localCode,
                bb.screenHour,
                bb.recordYear,
                bb.recordStatus,
                bb.korConductor,
                bb.korOrchestra,
                bb.korComposer,
                bb.korPerformer,
                bb.korVocal,
                bb.korInstrument,
                bb.mediaCd,
                bb.subtitle,
                bb.isClassic,
                bb.typeCode,
                bb.statusCode,
                bb.cdCount,
                bb.artistName,
                bb.synonymArtistName,
                bb.korArtistName,
                bb.recDispYn,
                null,
                bb.jmcode
            )    
    </insert>

<!--  
    작성자: 남형주
    기능 : 초기 음반에 아티스트코드 업데이트 
-->
    <insert id="updateFirstRecordArtiCd">
        MERGE INTO tb_record aa
        USING (
                    select c.musiccd, max(d.artistcd) artistcd
                    from (select a.musiccd, a.artistnm , b.artistcd
                            from mus_recordmt@center a, mus_albumdt@center b
                            where a.musiccd = b.musiccd ) c
                            , mus_artist@center d
                    where c.artistcd = d.artistcd
                    and c.artistnm = d.artistnm
                    group by c.musiccd
                 ) bb
        ON (aa.rcrd_cd = bb.musiccd)
        WHEN MATCHED THEN
          update set aa.rec_arti_cd = bb.artistcd
    </insert>
<!--  
    작성자: 남형주
    기능 : 초기 음반상품 등록 
-->
    <insert id="createFirstRecordProductData" parameterClass="map">
        MERGE INTO tb_sell_product aa
        USING(
            SELECT
                    A.musiccd code,
                    DECODE(A.export, '1', 'Y', 'N') isImport,
                    A.albumnm name,
                    (
                        case when  length(trim(A.okdate)) = 8 and (substr(trim(A.okdate),5,2) between  '01' and '12' and substr(trim(A.okdate),7,2) between  '01' and '31') then 
                                             to_date(A.okdate||'010101','YYYYMMDDHH24:MI:SS') 
                        else to_date('19000101010101','YYYYMMDDHH24:MI:SS')
                        end
                    ) registDatetime,
                    DECODE(A.status,'9',A.status, '2') statusCode,
                    'C0312' prdtStatCode,
                    (select I.maker_name from tb_rec_maker I where I.maker_cd = A.jejakcd) makerName,
                    A.last_srcmkcd sellPrdtBcode,
                    null recArtiCd,
                    nvl(B.custcd,'') recordSupplierId,
                    B.chulgoamt buyPrice,
                    A.sdjunga sellPrice,
                    A.webjunga discountPrice,
                     (case when sdjunga is not null and sdjunga != 0 then trunc((100-((nvl(webjunga,0)/sdjunga)*100)),1)
                        else  0
                        end
                    ) discountRate,
                    DECODE(A.status,'9', 'Y', 'N') rcrdPsaleYn,
                    DECODE(A.delivery,'0','Y','N') delivery,
                    DECODE(A.cate01cd , '04', 'D','R') gbn,
                    DECODE(A.rating, '4', 'Y','N') ban19Yn
                FROM
                     mus_recordmt@center A, mus_srcmkcd@center B, mus_imagedt@center G, MUS_CLASSICDT@center D, mus_custcd@center F
                WHERE A.last_srcmkcd = B.srcmkcd
                  AND A.musiccd = G.musiccd(+)   
                  AND A.musiccd = D.musiccd(+)
                  AND B.custcd = F.custcd(+)
                  AND A.last_srcmkcd NOT LIKE '21%'
                  AND B.jumcd ='05'
                  AND LENGTH(A.last_srcmkcd) = 13
                  AND A.musiccd between #sMcd# and #eMcd#
                  ) bb
        ON (aa.sell_prdt_bcode = bb.sellPrdtBcode)
        WHEN MATCHED THEN
          UPDATE SET
                    prdt_name                  = bb.name,
                    prdt_sell_price            = bb.sellPrice,
                    prdt_buy_price             = bb.buyPrice,
                    prdt_dscnt_rate            = bb.discountRate,
                    prdt_dscnt_price           = bb.discountPrice,
                    sell_prdt_gbn              = bb.gbn,
                    mod_dtm                    = sysdate,
                    mod_admin_id               = 'system',
                    RCRD_SPPLR_ID              = bb.recordSupplierId,
                    RCRD_PSALE_YN              = bb.rcrdPsaleYn
        WHEN NOT MATCHED THEN       
          INSERT (
                    sell_prdt_bcode,
                    prime_sell_prdt_bcode,
                    prdt_name,
                    prmt_deny_rsn,
                    dlvy_delay_dtcnt,
                    limit_count,
                    sell_count,
                    regst_dtm,
                    regst_admin_id,
                    max_order_alw_count,
                    prdt_srch_word,
                    prdt_sell_price,
                    prdt_chge_rate,
                    prdt_buy_price,
                    kyobo_chge_rate,
                    prdt_dscnt_rate,
                    prdt_dscnt_price,
                    prdt_saved_rate,
                    prdt_saved_price,
                    prmt_code,
                    prdt_stat_code,
                    dlvy_vndr_id,
                    prdt_bcode,
                    disp_yn,
                    brand_id,
                    vndr_cntrt_id,
                    nyo_sell_ban_yn,
                    disp_order,
                    sell_prdt_gbn,
                    prvd_title,
                    mnftr,
                    plorg,
                    imp_yn,
                    order_make_yn,
                    ssn_prdt_yn,
                    cvsl_yn,
                    dlvy_area,
                    store_recv_yn,
                    area_dlvy_yn,
                    prdt_dtl_info,
                    spec_name,
                    spec_group_name,
                    free_dlvy_yn,
                    lave_count,
                    cod_dlvy_amt_yn,
                    mod_dtm,
                    mod_admin_id,
                    prmt_dtm,
                    htrs_bcode,
                    khm_yn,
                    SPEC_AMT_APPLY,
                    TEC_SIZE,
                    RCRD_CD,
                    RCRD_SPPLR_ID,
                    RCRD_PSALE_YN,
                    RCRD_RLSE_INFO,
                    RCRD_STAT,
                    RCRD_HARD_SALE_YN
            ) VALUES (
                    bb.sellPrdtBcode,     
                    '',                   
                    bb.name,              
                    '',                   
                    0,                    
                    99999,                
                    0,                    
                    bb.registDatetime,              
                    'system',             
                    99999,                
                    bb.name,              
                    bb.sellPrice,         
                    0,                    
                    bb.buyPrice,          
                    0,                    
                    bb.discountRate,      
                    bb.discountPrice,     
                    1,                    
                    0,                    
                    'C0302',              
                    bb.prdtStatCode,      
                    '0625',               
                    '',                   
                    'Y',                  
                    '10682',              
                    '0001001',            
                    bb.ban19Yn,           
                    1,                    
                    bb.gbn,               
                    '',                   
                    bb.makerName,          
                    'XX',                 
                    bb.isImport,          
                    'N',                  
                    'N',                  
                    'N',                  
                    null,                 
                    'N',                  
                    'N',                  
                    null,                 
                    '',                   
                    '',                   
                    bb.delivery,          
                    0,                    
                    'N',                  
                    sysdate,              
                    'system',             
                    sysdate,              
                    'XX',                 
                    'N',                  
                    'N',                  
                    '',                   
                    bb.code,              
                    bb.recordSupplierId,  
                    bb.rcrdPsaleYn,       
                    '',       
                    bb.statusCode,        
                    'N'                   
                )
    </insert>
<!--  
    작성자: 남형주
    기능 : 초기 음반상품 재고 등록 
-->    
    <insert id="createFirstSellProductStockData">
        MERGE INTO tb_rec_prod_stock a
        USING(
               select b.sell_prdt_bcode , b.rcrd_cd, b.sell_prdt_gbn
               from  tb_record a , tb_sell_product b, mus_recordmt@center c
               where a.rcrd_cd = b.rcrd_cd
               and b.sell_prdt_gbn in ('R','D') 
               and a.rcrd_cd = c.musiccd
               and b.sell_prdt_bcode = c.last_srcmkcd 
             ) b
        ON (a.sell_prdt_bcode = b.sell_prdt_bcode)
        WHEN NOT MATCHED THEN       
          INSERT (
                rec_prod_stock_seq,
                stock_cnt_center,
                stock_cnt_shop,
                regst_dtm,
                reason,
                sell_prdt_bcode,
                stock_cnt_account
            ) VALUES (
                rec_prod_stock_seq.nextval,
                0,
                0,
                sysdate,
                '초기화',
                b.sell_prdt_bcode,
                0                   
            )
    </insert>
    
 
 
<!--  
    작성자: 남형주
    기능 : 초기 음반에 상품코드 업데이트 
        -   tb_sell_product 에같은 rcrd_cd 가 여러건 존재. mus_recodmt 의 last_srmkcd 추가비교.
-->
    <insert id="updateFirstRecordData">
        MERGE INTO tb_record a
        USING (select b.sell_prdt_bcode , b.rcrd_cd, b.sell_prdt_gbn
               from  tb_record a , tb_sell_product b, mus_recordmt@center c
               where a.rcrd_cd = b.rcrd_cd
               and b.sell_prdt_gbn in ('R','D') 
               and a.rcrd_cd = c.musiccd
               and b.sell_prdt_bcode = c.last_srcmkcd ) b
        ON ( a.rcrd_cd = b.rcrd_cd and b.sell_prdt_gbn in ('R','D'))
        WHEN MATCHED THEN
            update set a.sell_prdt_bcode = b.sell_prdt_bcode
    </insert>
<!--  
    작성자: 남형주
    기능 : 초기 트랙아티스트 등록
-->
    <insert id="createFirstRecordTrackArtist" parameterClass="map">
     	MERGE INTO tb_rec_track_artist aa
        USING (
                 select  a.musiccd, nvl(a.cdno,'0') cdno , nvl(a.trackno,'0') trackno, nvl(a.seqno,0) seqno, a.artistcd
                 from mus_albumdt@center a , tb_rec_track b, tb_rec_artist c
                 where a.musiccd  = b.rcrd_cd
                 and a.cdno = b.cd_no
                 and a.trackno = b.trk_no
                 and a.artistcd = c.rec_arti_cd
                 and a.musiccd between #sMcd# and #eMcd#
                ) bb
        ON (aa.rcrd_cd = bb.musiccd and aa.rec_arti_cd = bb.artistcd and aa.cd_no = bb.cdno and aa.trk_no = bb.trackno and aa.seq = bb.seqno)
        WHEN NOT MATCHED THEN 
                insert (rcrd_cd, rec_arti_cd, cd_no, trk_no, seq)
                values(bb.musiccd, bb.artistcd, bb.cdno, bb.trackno, bb.seqno)
    </insert>
   
<!--  
    작성자: 남형주
    기능 : 초기음반설명 생성 및 배치시 음반설명 등록.
-->
    <update id="createFirstRecordDescription" parameterClass="musDescript">
        INSERT INTO tb_rec_desc_test(
            rcrd_cd, rcrd_desc
        )VALUES(
            #musicCd#,#memo#
        )
    </update>
<!--  
    기능 : 초기음반설명 생성 및 배치시 음반설명 등록.
-->
    <insert id="createFirstRecordSubDescription" parameterClass="musDescript">
        INSERT INTO tb_rec_desc_sub_test(
            rcrd_cd, rcrd_desc_sub
        )VALUES(
            #musicCd#,#subMemo#
        )
    </insert>
    
<!--  
    작성자: 남형주
    기능 : 음반설명 업데이트 
-->
    <update id="updateFirstRecordDescription" parameterClass="musDescript">
        UPDATE
            tb_rec_desc_test
        SET 
            rcrd_desc = #memo#
        WHERE
            rcrd_cd = #musicCd#
    </update>
    
<!--  
    작성자: 남형주
    기능 : 음반설명 업데이트 
-->
    <update id="updateFirstRecordSubDescription" parameterClass="musDescript">
        UPDATE
            tb_rec_desc_sub_test
        SET 
            rcrd_desc_sub = #subMemo#
        WHERE
            rcrd_cd = #musicCd#
    </update>
        
<!-- 
    작성자: 남형주
  기능 : 초기  long -> clob 로 변환해서 tb_rec_desc 로 insert, tb_rec_desc_test minus tb_rec_desc
 -->
    <insert id="insertFirstTbRecDesc">
        INSERT INTO tb_rec_desc 
        SELECT  rcrd_cd,  to_lob(rcrd_desc)  from tb_rec_desc_test
    </insert>
    
  
<!--  
    작성자: 남형주
    기능 : 음반에 상품코드 업데이트
-->
    <update id="updateRecordBcode" parameterClass="record">
        UPDATE
            tb_record
        SET
            sell_prdt_bcode = #sellPrdtBcode#
        WHERE
            rcrd_cd = #code#
    </update>    

<!--  
    작성자: 남형주
    기능 : 음반 모든 카테코리 조회 - 삭제대상

    <select id="getRecordOnoffCategoryMap" resultClass="recordOnoffCategoryMap">
        SELECT
            cate01cd,
            cate02cd,
            cate03cd,
            ctgr_id as ctgrId
        FROM
            tb_record_onoff_category_map
    </select>
-->

<!-- 
작성자 : 남형주
기능 : 초기 음반카테고리 등록
 -->
    <insert id="creatFirstProductCategory"  parameterClass="map">
        MERGE INTO tb_product_category aa
		USING (
		            select rcrd_cd, sell_prdt_bcode, media_cd, ctgr_id, decode(rk,'1','Y','N') std_ctgr_yn
                        from(
                           select  rcrd_cd, sell_prdt_bcode,media_cd, ctgr_id ,RANK() OVER (PARTITION BY a.rcrd_cd order by ctgr_id asc) as rk
                           from (
	                           select rcrd_cd, sell_prdt_bcode,media_cd, 
	                            (case when ctgr_id = '0003000900' and media_cd = '78' then ctgr_id 
	                                   when ctgr_id = '0003000900' and media_cd != '78' then null
	                                   when ctgr_id = '0003000901' and media_cd = '78' then null
	                                   when ctgr_id = '0003000901' and media_cd != '78' then ctgr_id
	                                   when ctgr_id = '0003010600' and media_cd = '78' then ctgr_id
	                                   when ctgr_id = '0003010600' and media_cd != '78' then null
	                                   when ctgr_id = '0003010601' and media_cd = '78' then null
	                                   when ctgr_id = '0003010601' and media_cd != '78' then ctgr_id
	                                   when ctgr_id = '0003081300' and media_cd = '78' then ctgr_id
	                                   when ctgr_id = '0003081300' and media_cd != '78' then null
	                                   when ctgr_id = '0003081301' and media_cd = '78' then null
	                                   when ctgr_id = '0003081301' and media_cd != '78' then ctgr_id
	                                   when substr(ctgr_id,1,8) = '00031200' and media_cd = '78' then ctgr_id
	                                   when substr(ctgr_id,1,8) = '00031200' and media_cd != '78' then null
	                                   when substr(ctgr_id,1,8) = '00031201' and media_cd = '78' then null
	                                   when substr(ctgr_id,1,8) = '00031201' and media_cd != '78' then ctgr_id
	                                   when substr(ctgr_id,1,6) = '000400' and media_cd = '78' then ctgr_id
	                                   when substr(ctgr_id,1,6) = '000400' and media_cd != '78' then null
	                                   when substr(ctgr_id,1,6) = '000401' and media_cd = '78' then null
	                                   when substr(ctgr_id,1,6) = '000401' and media_cd != '78' then ctgr_id
	                             else ctgr_id
	                             end
	                             ) ctgr_id
	                           from (
	                               select a2.rcrd_cd, a2.sell_prdt_bcode, a2.media_cd, c.ctgr_id 
	                               from (
	                                       select  A.musiccd rcrd_cd, A.last_srcmkcd sell_prdt_bcode, A.mediacd media_cd, A.cate01cd, A.cate02cd, A.cate03cd 
	                                       from
	                                            mus_recordmt@center A, mus_srcmkcd@center B
	                                       where A.last_srcmkcd = B.srcmkcd
	                                         and A.last_srcmkcd NOT LIKE '21%'
	                                         and B.jumcd ='05'
	                                         and LENGTH(A.last_srcmkcd) = 13
	                                         and A.musiccd between #sMcd# and #eMcd#
	                                ) a2, tb_record_onoff_category_map c
	                               where c.cate01cd = a2.cate01cd
	                               and c.cate02cd = a2.cate02cd
	                               and c.cate03cd = a2.cate03cd
	                           )
	                      ) a
	                      where ctgr_id is not null
                          )
                     
		) bb
		ON (aa.ctgr_id = bb.ctgr_id and aa.sell_prdt_bcode = bb.sell_prdt_bcode)
		WHEN MATCHED THEN 
		    update set aa.std_ctgr_yn = bb.std_ctgr_yn
		                , aa.regst_dtm = sysdate
		WHEN NOT MATCHED THEN
		    insert (aa.sell_prdt_bcode, aa.ctgr_id, aa.std_ctgr_yn, aa.regst_dtm)
		    values(bb.sell_prdt_bcode, bb.ctgr_id, bb.std_ctgr_yn, sysdate)
    </insert>
<!--  
    작성자: 남형주
    기능 : 상품테이블에 음반정보 업데이트.
-->
    <update id="updateProductRecord" parameterClass="sellProduct">
        UPDATE  tb_sell_product
           SET
                prdt_name                  = #name#,
                prdt_sell_price            = #sellPrice#,
                prdt_buy_price             = #buyPrice#,
                prdt_dscnt_rate            = #discountRate#,
                prdt_dscnt_price           = #discountPrice#,
                mod_dtm                    = #modifyDatetime#,
                mod_admin_id               = #modifyAdminId#,
                RCRD_STAT                  = #rcrdStat#,
                RCRD_CD                    = #recordCode#,
                RCRD_SPPLR_ID              = #recordSupplierId#
         WHERE  sell_prdt_bcode = #barcode#
    </update>
<!--  
작성자 : 남형주
기능 : 음반에 아티스트 업데이트 - 배치.
-->
    <update id="updateRecordArtistCode" parameterClass="map">
        UPDATE tb_record
        set rec_arti_cd = ( select max(d.artistcd) artistcd
		                    from (select a.musiccd, a.artistnm , b.artistcd
		                            from mus_recordmt@center a, mus_albumdt@center b
		                            where a.musiccd = b.musiccd
		                            and a.musiccd = #rcrdCd# ) c
		                            , mus_artist@center d
		                    where c.artistcd = d.artistcd
		                    and c.artistnm = d.artistnm
		                    group by c.musiccd)
		where rcrd_cd = #rcrdCd#
    </update>
<!--  
    작성자: 남형주
    기능 : 배치 음반상품  재고 등록 
-->    
    <insert id="creatSellProductStock" parameterClass="map">
        MERGE INTO tb_rec_prod_stock a
        USING(
               select #bcode# sell_prdt_bcode from dual 
             ) b
        ON (a.sell_prdt_bcode = b.sell_prdt_bcode)
        WHEN NOT MATCHED THEN       
          INSERT (
                rec_prod_stock_seq,
                stock_cnt_center,
                stock_cnt_shop,
                regst_dtm,
                reason,
                sell_prdt_bcode,
                stock_cnt_account
            ) VALUES (
                rec_prod_stock_seq.nextval,
                0,
                0,
                sysdate,
                '초기화',
                #bcode# ,
                0                   
            )
    </insert>
    
    <!--  
    작성자: 남형주
    기능 : 배치 음반상품  재고 집계  등록 
-->    
    <insert id="creatSellProductStockLast" parameterClass="map">
        MERGE INTO tb_rec_prod_stock_last a
        USING(
               select #bcode# sell_prdt_bcode from dual 
             ) b
        ON (a.sell_prdt_bcode = b.sell_prdt_bcode)
        WHEN NOT MATCHED THEN       
          INSERT (
                sell_prdt_bcode,
                rcrd_cd,
                stock_cnt_product,
                stock_cnt_record
            ) VALUES (
                #bcode#, 
                #rcrdCd#,
                0,
                0                   
            )
    </insert>
 
     <!--  
    작성자: 남형주
    기능 : 배치 음반상품  재고 집계 테이블 누락 바코드  등록 
-->    
    <insert id="reSaveSellProductStockLast">
            insert into tb_rec_prod_stock_last(sell_prdt_bcode, rcrd_cd, stock_cnt_product, stock_cnt_record) 
			select
			    a.sell_prdt_bcode, 
			    (select t.rcrd_cd from tb_sell_product t where t.sell_prdt_bcode = a.sell_prdt_bcode) as rcrd_cd, 
			    a.stock_cnt_shop as stock_cnt_product, 
			    0 as stock_cnt_record
			from v_rec_prod_stock a
			where
			    a.sell_prdt_bcode in (select a.sell_prdt_bcode from tb_sell_product a
										where
										    a.sell_prdt_gbn in ('R', 'D') and 
										    a.sell_prdt_bcode not in (
										        select t.sell_prdt_bcode from tb_rec_prod_stock_last t
										    )
									   )
    </insert>
      
<!-- 
작성자 : 남형주
기능 : 배치 - 몰상품 등록 v.2
 -->
    <insert id="newSaveMallProduct" parameterClass="map">
        INSERT INTO tb_mall_product (
            mall_id, 
            sell_prdt_bcode
        ) VALUES (
            #mallId#,
            #bCode#
        )
    </insert>
    
<!-- 
    작성자: 남형주
  기능 : 배치  long -> clob 로 변환해서 tb_rec_desc 로 insert
 -->
    <insert id="insertTbRecDesc" parameterClass="musDescript">
        INSERT INTO tb_rec_desc 
        SELECT  rcrd_cd, to_lob(rcrd_desc), null from tb_rec_desc_test where rcrd_cd =  #musicCd#
    </insert>
    
<!-- 
    작성자: 남형주
  기능 : 배치  long -> clob 로 변환해서 tb_rec_desc 로 update
 -->
    <update id="updateTbRecDesc" parameterClass="musDescript">
        UPDATE tb_rec_desc a
           SET a.rcrd_desc = ( SELECT to_lob(rcrd_desc)  from tb_rec_desc_test where rcrd_cd =  #musicCd#)
         WHERE a.rcrd_cd = #musicCd#
    </update>
    
<!-- 
    작성자: 남형주
  기능 : 배치  long -> clob 로 변환해서 tb_rec_desc 로 insert
 -->
    <insert id="insertTbRecSubDesc" parameterClass="musDescript">
        INSERT INTO tb_rec_desc 
        SELECT  rcrd_cd, null, to_lob(rcrd_desc_sub) from tb_rec_desc_sub_test where rcrd_cd =  #musicCd#
    </insert>
    
<!-- 
  기능 : 배치  long -> clob 로 변환해서 tb_rec_desc 로 update
 -->
    <update id="updateTbRecSubDesc" parameterClass="musDescript">
        UPDATE tb_rec_desc a
           SET a.rcrd_desc_sub = ( SELECT to_lob(rcrd_desc_sub)  from tb_rec_desc_sub_test where rcrd_cd =  #musicCd#)
         WHERE a.rcrd_cd = #musicCd#
    </update>
    
<!-- 
작성자 : 남형주
기능 : 배치실행후 성공 건  mus_batch_rt01_online table 에서 삭제
 -->
    <delete id="deleteCenterBatchOnline" parameterClass="map">
        DELETE FROM mus_batch_rt01_etc@center
        WHERE
            <isEqual property="gbn" compareValue="10">
                gubun in ('07','10')
           </isEqual>
           <isNotEqual property="gbn" compareValue="10">
                gubun = #gbn#
           </isNotEqual>
           and code
           <iterate prepend="in" property="listCode" open="(" close=")" conjunction=",">
           #listCode[]#
           </iterate>
    </delete> 
<!-- 
작성자: 남형주
기능 : 배치 - 음반상품 카테고리 등록
 -->
 <insert id="saveCategoryProduct"  parameterClass="map">
        MERGE INTO tb_product_category aa
        USING (
                    select rcrd_cd, sell_prdt_bcode, media_cd, ctgr_id, decode(rk,'1','Y','N') std_ctgr_yn
                        from(
                           select  rcrd_cd, sell_prdt_bcode,media_cd, ctgr_id ,RANK() OVER (PARTITION BY a.rcrd_cd order by ctgr_id asc) as rk
                           from (
                               select rcrd_cd, sell_prdt_bcode,media_cd, 
                                (case when ctgr_id = '0003000900' and media_cd = '78' then ctgr_id 
                                       when ctgr_id = '0003000900' and media_cd != '78' then null
                                       when ctgr_id = '0003000901' and media_cd = '78' then null
                                       when ctgr_id = '0003000901' and media_cd != '78' then ctgr_id
                                       when ctgr_id = '0003010600' and media_cd = '78' then ctgr_id
                                       when ctgr_id = '0003010600' and media_cd != '78' then null
                                       when ctgr_id = '0003010601' and media_cd = '78' then null
                                       when ctgr_id = '0003010601' and media_cd != '78' then ctgr_id
                                       when ctgr_id = '0003081300' and media_cd = '78' then ctgr_id
                                       when ctgr_id = '0003081300' and media_cd != '78' then null
                                       when ctgr_id = '0003081301' and media_cd = '78' then null
                                       when ctgr_id = '0003081301' and media_cd != '78' then ctgr_id
                                       when substr(ctgr_id,1,8) = '00031200' and media_cd = '78' then ctgr_id
                                       when substr(ctgr_id,1,8) = '00031200' and media_cd != '78' then null
                                       when substr(ctgr_id,1,8) = '00031201' and media_cd = '78' then null
                                       when substr(ctgr_id,1,8) = '00031201' and media_cd != '78' then ctgr_id
                                       when substr(ctgr_id,1,6) = '000400' and media_cd = '78' then ctgr_id
                                       when substr(ctgr_id,1,6) = '000400' and media_cd != '78' then null
                                       when substr(ctgr_id,1,6) = '000401' and media_cd = '78' then null
                                       when substr(ctgr_id,1,6) = '000401' and media_cd != '78' then ctgr_id
                                 else ctgr_id
                                 end
                                 ) ctgr_id
                               from (
                                   select a2.rcrd_cd, a2.sell_prdt_bcode, a2.media_cd, c.ctgr_id 
                                   from (
                                           select  A.musiccd rcrd_cd, A.last_srcmkcd sell_prdt_bcode, A.mediacd media_cd, A.cate01cd, A.cate02cd, A.cate03cd 
                                           from
                                                mus_recordmt@center A, mus_srcmkcd@center B
                                           where A.last_srcmkcd = B.srcmkcd
                                             and A.last_srcmkcd NOT LIKE '21%'
                                             and B.jumcd ='05'
                                             and LENGTH(A.last_srcmkcd) = 13
                                             and A.musiccd = #rcrdCd#
                                             and A.last_srcmkcd = #barCode#
                                    ) a2, tb_record_onoff_category_map c
                                   where c.cate01cd = a2.cate01cd
                                   and c.cate02cd = a2.cate02cd
                                   and c.cate03cd = a2.cate03cd
                               )
                          ) a
                          where ctgr_id is not null
                          )
        ) bb
        ON (aa.sell_prdt_bcode = bb.sell_prdt_bcode)
        WHEN MATCHED THEN 
            update set aa.std_ctgr_yn = bb.std_ctgr_yn
                        , aa.regst_dtm = sysdate
        WHEN NOT MATCHED THEN
            insert (aa.sell_prdt_bcode, aa.ctgr_id, aa.std_ctgr_yn, aa.regst_dtm)
            values(bb.sell_prdt_bcode, bb.ctgr_id, bb.std_ctgr_yn, sysdate)
    </insert>
    
 <insert id="saveCategoryYetProduct"  parameterClass="map">
        MERGE INTO tb_product_category aa
        USING (
                    select rcrd_cd, sell_prdt_bcode, media_cd, ctgr_id, decode(rk,'1','Y','N') std_ctgr_yn
                        from(
                           select  rcrd_cd, sell_prdt_bcode,media_cd, ctgr_id ,RANK() OVER (PARTITION BY a.rcrd_cd order by ctgr_id asc) as rk
                           from (
                               select rcrd_cd, sell_prdt_bcode,media_cd, 
                                (case when ctgr_id = '0003000900' and media_cd = '78' then ctgr_id 
                                       when ctgr_id = '0003000900' and media_cd != '78' then null
                                       when ctgr_id = '0003000901' and media_cd = '78' then null
                                       when ctgr_id = '0003000901' and media_cd != '78' then ctgr_id
                                       when ctgr_id = '0003010600' and media_cd = '78' then ctgr_id
                                       when ctgr_id = '0003010600' and media_cd != '78' then null
                                       when ctgr_id = '0003010601' and media_cd = '78' then null
                                       when ctgr_id = '0003010601' and media_cd != '78' then ctgr_id
                                       when ctgr_id = '0003081300' and media_cd = '78' then ctgr_id
                                       when ctgr_id = '0003081300' and media_cd != '78' then null
                                       when ctgr_id = '0003081301' and media_cd = '78' then null
                                       when ctgr_id = '0003081301' and media_cd != '78' then ctgr_id
                                       when substr(ctgr_id,1,8) = '00031200' and media_cd = '78' then ctgr_id
                                       when substr(ctgr_id,1,8) = '00031200' and media_cd != '78' then null
                                       when substr(ctgr_id,1,8) = '00031201' and media_cd = '78' then null
                                       when substr(ctgr_id,1,8) = '00031201' and media_cd != '78' then ctgr_id
                                       when substr(ctgr_id,1,6) = '000400' and media_cd = '78' then ctgr_id
                                       when substr(ctgr_id,1,6) = '000400' and media_cd != '78' then null
                                       when substr(ctgr_id,1,6) = '000401' and media_cd = '78' then null
                                       when substr(ctgr_id,1,6) = '000401' and media_cd != '78' then ctgr_id
                                 else ctgr_id
                                 end
                                 ) ctgr_id
                               from (
                                   select a2.rcrd_cd, a2.sell_prdt_bcode, a2.media_cd, c.ctgr_id
								   from (
								           select  A.musiccd rcrd_cd, B.srcmkcd sell_prdt_bcode, A.mediacd media_cd, A.cate01cd, A.cate02cd, A.cate03cd
								           from
								                mus_recordmt@center A, mus_srcmkcd@center B
								           where A.musiccd = B.musiccd
								             and B.srcmkcd NOT LIKE '21%'
								             and B.jumcd ='05'
								             and LENGTH(B.srcmkcd) = 13
								             and B.musiccd = #rcrdCd#
								             and B.srcmkcd =  #barCode#
								    ) a2, tb_record_onoff_category_map c
								   where c.cate01cd = a2.cate01cd
								   and c.cate02cd = a2.cate02cd
								   and c.cate03cd = a2.cate03cd 
                               )
                          ) a
                          where ctgr_id is not null
                          )
        ) bb
        ON (aa.ctgr_id = bb.ctgr_id and aa.sell_prdt_bcode = bb.sell_prdt_bcode)
        WHEN MATCHED THEN 
            update set aa.std_ctgr_yn = bb.std_ctgr_yn
                        , aa.regst_dtm = sysdate
        WHEN NOT MATCHED THEN
            insert (aa.sell_prdt_bcode, aa.ctgr_id, aa.std_ctgr_yn, aa.regst_dtm)
            values(bb.sell_prdt_bcode, bb.ctgr_id, bb.std_ctgr_yn, sysdate)
    </insert>
    
 <select id="getMaxMinRecodeRcrdCd" resultClass="String">
         SELECT
            max(rcrd_cd) 
         FROM
            tb_record
        union all
        SELECT
            min(rcrd_cd) 
         FROM
            tb_record
    </select>
      
    <!--
        작성자 : 김기석
        작성일 : 2011.06.29
        기능 : 
            음반몰 상품 정보 반환 공통 조건절
    -->
    <sql id="getRecordProductWhere">
        <dynamic prepend="where">
            <isEqual property="listCountYn" removeFirstPrepend="true" prepend="and" compareValue="Y">
                rownum <![CDATA[ < ]]> #topCount# + 1
            </isEqual>      
            <isNotEmpty property="sellPrdtGbn" removeFirstPrepend="true" prepend="and">
                a.sell_prdt_gbn = #sellPrdtGbn#
            </isNotEmpty>
            <isEmpty property="sellPrdtGbn" removeFirstPrepend="true" prepend="and">
                a.sell_prdt_gbn in ('R', 'D')
            </isEmpty>
            <isNotEmpty property="sellPrdtBcode" removeFirstPrepend="true" prepend="and">
                a.sell_prdt_bcode = #sellPrdtBcode#
            </isNotEmpty>
            <isNotEmpty property="sellPrdtBcodes" removeFirstPrepend="true" prepend="and">
                a.sell_prdt_bcode
                <iterate property="sellPrdtBcodes" open="in (" close=")" conjunction=",">#sellPrdtBcodes[]#</iterate>
            </isNotEmpty>
            <isNotEmpty property="rcrdStat" removeFirstPrepend="true" prepend="and">
                a.rcrd_stat = #rcrdStat#
            </isNotEmpty>
            <isNotEmpty property="rcrdSpplrId" removeFirstPrepend="true" prepend="and">
                a.rcrd_spplr_id = #rcrdSpplrId#
            </isNotEmpty>
            <isNotEmpty property="labelCd" removeFirstPrepend="true" prepend="and">
                a.label_cd = #labelCd#
            </isNotEmpty>
            <isNotEmpty property="makerCd" removeFirstPrepend="true" prepend="and">
                a.maker_cd = #makerCd#
            </isNotEmpty>
            <isNotEmpty property="ctgrId" removeFirstPrepend="true" prepend="and">
                a.ctgr_id like #ctgrId#||'%'
            </isNotEmpty>
            <isNotEmpty property="beginRegistDate" removeFirstPrepend="true" prepend="and">
                <isNotEmpty property="endRegistDate" removeFirstPrepend="true" prepend="and">
                    to_char(regst_dtm, 'YYYYMMDD') between #beginRegistDate# and #endRegistDate# 
                </isNotEmpty>
            </isNotEmpty>
            <isNotEmpty property="rcrdMdMemoYn">
               <isEqual property="rcrdMdMemoYn" compareValue="true" removeFirstPrepend="true" prepend="and">
                    a.rcrd_md_memo is not null
               </isEqual>
            </isNotEmpty>
            <isNotEmpty property="rcrdHardSaleYn">
               <isEqual property="rcrdHardSaleYn" compareValue="true" removeFirstPrepend="true" prepend="and">
                    a.rcrd_hard_sale_yn = 'Y'
               </isEqual>
            </isNotEmpty>
            <isNotEmpty property="keyWord" removeFirstPrepend="true" prepend="and">
                <isEqual property="keyField" compareValue="rcrdCd"> a.rcrd_cd like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="prdtName"> a.prdt_name like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="prdtBcode"> a.sell_prdt_bcode like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="artiName"> a.arti_name like '%'||#keyWord#||'%' </isEqual>
            </isNotEmpty>
            <isEqual property="masterYn" compareValue="Y" removeFirstPrepend="true" prepend="and">
                a.sell_prdt_bcode = a.sell_prdt_bcode_last 
            </isEqual>
            <isNotEmpty property="limitDt" removeFirstPrepend="true" prepend="and">
                #limitDt# between substr(a.rcrd_lsale_start_dth,1,8) and substr(a.rcrd_lsale_end_dth,1,8)
            </isNotEmpty>
            <isNotEmpty property="impYn" removeFirstPrepend="true" prepend="and">
                a.imp_yn = #impYn#
            </isNotEmpty>
        </dynamic>
    </sql>



    <!--
        작성자 : 김기석
        작성일 : 2011.06.29
        기능 : 
            음반몰 상품 정보 반환
    -->
    <select id="getRecordProduct" parameterClass="recordProductCriteria" resultClass="recordProductExt">
        SELECT
            a.rcrd_cd as code, 
            a.rcrd_name as name, 
            a.arti_name as artistName, 
            a.arti_name_kor as korArtistName,
            a.sell_prdt_bcode as sellPrdtBcode, 
            a.prdt_name as prdtName,
            a.sell_prdt_gbn as sellPrdtGbn, 
            a.ctgr_id as ctgrId,
            (select t.brand_name from tb_brand t where t.brand_id = a.brand_id) as brandName, 
            (select t.label_name from tb_rec_label t where t.label_cd = a.label_cd) as labelName, 
            (select t.maker_name from tb_rec_maker t where t.maker_cd = a.maker_cd) as makerName, 
            a.rlse_dt as releaseDate, 
            a.prdt_sell_price as prdtSellPrice,
            FC_GET_DC_PRICE(a.sell_prdt_bcode,'02') as dcSellPrice, 
            a.prdt_buy_price as prdtBuyPrice, 
            a.rcrd_stat as rcrdStat, 
            a.regst_dtm as regstDtm, 
            a.prdt_dscnt_rate as prdtDscntRate,
            a.prdt_dscnt_price as prdtDscntPrice, 
            a.free_dlvy_yn as freeDlvyYn,
            a.rcrd_psale_yn as rcrdPsaleYn,
            (SELECT STOCK_CNT_PRODUCT FROM TB_REC_PROD_STOCK_LAST T WHERE T.SELL_PRDT_BCODE = a.SELL_PRDT_BCODE) stockQty
        FROM v_record_category a
        <include refid="getRecordProductWhere" />

        <isNotEmpty property="order" prepend="order by">
            <isEqual property="order" compareValue="regstDtm"> a.regst_dtm desc</isEqual>
            <isEqual property="order" compareValue="prdtName"> a.prdt_name</isEqual>
        </isNotEmpty>
        <isEmpty property="order" prepend="order by">
            a.regst_dtm desc
        </isEmpty>
    </select>


    <!--
        작성자 : 김기석
        작성일 : 2011.06.30
        기능 : 
            음반몰 상품 개수 정보 반환
    -->
    <select id="getRecordProductListCount" parameterClass="recordProductCriteria" resultClass="int">
        SELECT
            count(*) as cnt
        FROM v_record_category a
        <include refid="getRecordProductWhere" />
    </select>

    

    <!--
        작성자 : 김기석
        작성일 : 2011.06.30
        기능 : 
            음반과 음원의 매핑정보를 음반을 기준으로 반환함. - 공통 조건절
    -->
    <sql id="getTrackMapForRecordWhere">
        <dynamic prepend="where">
            <isEqual property="listCountYn" removeFirstPrepend="true" prepend="and" compareValue="Y">
                rownum <![CDATA[ < ]]> #topCount# + 1
            </isEqual>      
            <isNotEmpty property="keyWord" removeFirstPrepend="true" prepend="and">
                <isEqual property="keyField" compareValue="artiName"> nvl(d.arti_name, a.arti_name) like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="rcrdCd"> a.rcrd_cd like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="rcrdName"> a.rcrd_name like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="trkName"> d.trk_name like '%'||#keyWord#||'%' </isEqual>
            </isNotEmpty>
            <isNotEmpty property="rcrdCd" removeFirstPrepend="true" prepend="and">
                a.rcrd_cd = #rcrdCd#
            </isNotEmpty>
            <isNotEmpty property="cateId" removeFirstPrepend="true" prepend="and">
                c.ctgr_id like #cateId#||'%'
            </isNotEmpty>
        </dynamic>
    </sql>



    <!--
        작성자 : 김기석
        작성일 : 2011.06.30
        기능 : 
            음반과 음원의 매핑정보를 음반을 기준으로 반환함.
            음반 - 음원 매핑기능에서 음반선택 팝업에서 사용할 목적임. 
    -->
    <select id="getTrackMapForRecord" parameterClass="trackMapCriteria" resultClass="trackMapExt">
        SELECT
            a.rcrd_cd as rcrdCd, 
            a.rcrd_name as rcrdName, 
            d.cd_no as cdNo, 
            d.trk_no as trkNo,
            nvl(d.arti_name, a.arti_name) as artiName,
            d.trk_name as trkName,  
            e.trk_id as trkId
        FROM tb_record a
        INNER JOIN tb_sell_product b ON a.sell_prdt_bcode = b.sell_prdt_bcode AND b.sell_prdt_gbn = 'R' 
        INNER JOIN tb_product_category c ON b.sell_prdt_bcode = c.sell_prdt_bcode AND c.std_ctgr_yn = 'Y'
        INNER JOIN tb_rec_track d ON a.rcrd_cd = d.rcrd_cd
        LEFT OUTER JOIN tb_track_map e ON d.rcrd_cd = e.rcrd_cd AND d.cd_no = e.cd_no AND d.trk_no = e.trk_no
        <include refid="getTrackMapForRecordWhere" />
        ORDER BY d.rcrd_cd, d.cd_no, d.trk_no
    </select>


    <!--
        작성자 : 김기석
        작성일 : 2011.06.30
        기능 : 
            음반과 음원의 매핑정보를 음반을 기준으로 반환하는 목록의 개수를 반환함. 
    -->
    <select id="getTrackMapForRecordListCount" parameterClass="trackMapCriteria" resultClass="int">
        SELECT
            count(*) as cnt
        FROM tb_record a
        INNER JOIN tb_sell_product b ON a.sell_prdt_bcode = b.sell_prdt_bcode AND b.sell_prdt_gbn = 'R' 
        INNER JOIN tb_product_category c ON b.sell_prdt_bcode = c.sell_prdt_bcode AND c.std_ctgr_yn = 'Y'
        INNER JOIN tb_rec_track d ON a.rcrd_cd = d.rcrd_cd
        LEFT OUTER JOIN tb_track_map e ON d.rcrd_cd = e.rcrd_cd AND d.cd_no = e.cd_no AND d.trk_no = e.trk_no
        <include refid="getTrackMapForRecordWhere" />
    </select>




    <!--
        작성자 : 김기석
        작성일 : 2011.07.01
        기능 : 
            음반과 음원의 매핑정보를 음원을 기준으로 반환함. - 공통 조건절
    -->
    <sql id="getTrackMapForMusicWhere">
        <dynamic prepend="where">
            <isEqual property="listCountYn" removeFirstPrepend="true" prepend="and" compareValue="Y">
                rownum <![CDATA[ < ]]> #topCount# + 1
            </isEqual>      
            <isNotEmpty property="keyWord" removeFirstPrepend="true" prepend="and">
                <isEqual property="keyField" compareValue="abmId"> a.abm_id like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="title"> a.title like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="trkName"> c.trk_name like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="trkId"> c.trk_id like '%'||#keyWord#||'%' </isEqual>
                <isEqual property="keyField" compareValue="artiName"> e.arti_name like '%'||#keyWord#||'%' </isEqual>
            </isNotEmpty>
            <isNotEmpty property="genreId" removeFirstPrepend="true" prepend="and">
                EXISTS(
                    SELECT
                        *
                    FROM tb_album_genre ag 
                    LEFT OUTER JOIN tb_genre g1 ON ag.gnr_id = g1.gnr_id
                    LEFT OUTER JOIN tb_genre g2 ON g1.parnt_gnr_id = g2.gnr_id
                    LEFT OUTER JOIN tb_genre g3 ON g2.parnt_gnr_id = g3.gnr_id
                    LEFT OUTER JOIN tb_genre g4 ON g3.parnt_gnr_id = g4.gnr_id
                    WHERE 
                        ag.abm_id = a.abm_id AND 
                        SUBSTR(g4.gnr_id || '.' || g3.gnr_id || '.' || g2.gnr_id || '.' || g1.gnr_id, INSTR(g4.gnr_id || '.' || g3.gnr_id || '.' || g2.gnr_id || '.' || g1.gnr_id, '1000')) like #genreId#||'%'
                )
            </isNotEmpty>
            <isGreaterThan property="abmId" compareValue="0" removeFirstPrepend="true" prepend="and">
                a.abm_id = #abmId#
            </isGreaterThan>
            <isGreaterThan property="trkId" compareValue="0" removeFirstPrepend="true" prepend="and">
                c.trk_id = #trkId#
            </isGreaterThan>
        </dynamic>
    </sql>



    <!--
        작성자 : 김기석
        작성일 : 2011.07.01
        기능 : 
            음반과 음원의 매핑정보를 음원을 기준으로 반환함.
            음반 - 음원 매핑기능에서 음원선택 팝업에서 사용할 목적임. 
    -->
    <select id="getTrackMapForMusic" parameterClass="trackMapCriteria" resultClass="trackMapExt">
        SELECT
            a.abm_id AS abmId, 
            b.dsc_id AS dscId, 
            c.trk_id AS trkId, 
            c.trk_no AS trkNo, 
            c.trk_name AS trkName, 
            e.arti_name AS artiName, 
            a.title AS abmTitle 
        FROM tb_album a 
        INNER JOIN tb_disc b ON a.abm_id = b.abm_id
        INNER JOIN tb_track c ON b.abm_id = c.abm_id AND b.dsc_id = c.dsc_id
        INNER JOIN tb_artist e ON e.arti_id = (SELECT SUBSTR(MAX(d.rp_yn || d.arti_id), 2) arti_id FROM tb_track_artist d WHERE d.trk_id = c.trk_id)
        <!-- 
        LEFT OUTER JOIN tb_track_artist d ON c.trk_id = d.trk_id AND d.rp_yn = 'Y' 
        INNER JOIN tb_artist e ON d.arti_id = e.arti_id
        -->
        <include refid="getTrackMapForMusicWhere" />
        ORDER BY c.abm_id, c.dsc_id, c.trk_no
    </select>


    <!--
        작성자 : 김기석
        작성일 : 2011.07.01
        기능 : 
            음반과 음원의 매핑정보를 음반을 기준으로 반환하는 목록의 개수를 반환함. 
    -->
    <select id="getTrackMapForMusicListCount" parameterClass="trackMapCriteria" resultClass="int">
        SELECT
            COUNT(*) AS cnt 
        FROM tb_album a 
        INNER JOIN tb_disc b ON a.abm_id = b.abm_id
        INNER JOIN tb_track c ON b.abm_id = c.abm_id AND b.dsc_id = c.dsc_id
        INNER JOIN tb_artist e ON e.arti_id = (SELECT SUBSTR(MAX(d.rp_yn || d.arti_id), 2) arti_id FROM tb_track_artist d WHERE d.trk_id = c.trk_id)
        <!-- 
        LEFT OUTER JOIN tb_track_artist d ON c.trk_id = d.trk_id AND d.rp_yn = 'Y' 
        INNER JOIN tb_artist e ON d.arti_id = e.arti_id
        -->
        <include refid="getTrackMapForMusicWhere" />
    </select>



    <!--
        작성자 : 김기석
        작성일 : 2011.07.05
        기능 : 
            음반과 음원의 매핑정보를 등록함. 
    -->
    <insert id="createTrackMap" parameterClass="trackMapParam">
        INSERT INTO tb_track_map(rcrd_cd, cd_no, trk_no, trk_id) 
        values(#rcrdCd#, #cdNo#, #trkNo#, #trkId#)
    </insert>
    
    
    <!--
        작성자 : 김기석
        작성일 : 2011.07.05
        기능 : 
            음반과 음원의 매핑정보를 갱신. 
    -->
    <update id="updateTrackMap" parameterClass="trackMapParam">
        UPDATE tb_track_map SET
            trk_id = #trkId#
        WHERE
            rcrd_cd = #rcrdCd# AND 
            cd_no = #cdNo# AND 
            trk_no = #trkNo# AND 
            trk_id = #trkIdRecord# 
    </update>    


    <!--
        작성자 : 김기석
        작성일 : 2011.07.05
        기능 : 
            음반과 음원의 매핑정보를 삭제. 
    -->
    <delete id="deleteTrackMap" parameterClass="trackMapParam">
        DELETE FROM tb_track_map 
        WHERE
            rcrd_cd = #rcrdCd# AND 
            cd_no = #cdNo# AND 
            trk_no = #trkNo# AND 
            trk_id = #trkIdRecord#
    </delete>    

<sql id="getRecordListForCondition">
    <isEqual property="listCountYn" removeFirstPrepend="true" prepend="and" compareValue="Y">
        rownum <![CDATA[ < ]]> #topCount# + 1
    </isEqual>      
    <isNotEmpty property="sellPrdtGbn" removeFirstPrepend="true" prepend="and">
        B.sell_prdt_gbn = #sellPrdtGbn#
    </isNotEmpty>
    <isEmpty property="sellPrdtGbn" removeFirstPrepend="true" prepend="and">
        B.sell_prdt_gbn in ('R', 'D')
    </isEmpty>
    <isNotEmpty property="sellPrdtBcode" removeFirstPrepend="true" prepend="and">
        B.sell_prdt_bcode = #sellPrdtBcode#
    </isNotEmpty>
    <isNotEmpty property="sellPrdtBcodes" removeFirstPrepend="true" prepend="and">
        B.sell_prdt_bcode
        <iterate property="sellPrdtBcodes" open="in (" close=")" conjunction=",">#sellPrdtBcodes[]#</iterate>
    </isNotEmpty>
        
    <isNotEmpty property="name" prepend="AND">
        UPPER(A.prdt_name) like '%' || UPPER(#prdtName#) || '%'
    </isNotEmpty>
    <isNotEmpty property="beginPrice" prepend="AND">
        B.prdt_sell_price <![CDATA[ > ]]> #beginPrice# - 1
    </isNotEmpty>
    <isNotEmpty property="endPrice" prepend="AND">
        B.prdt_sell_price <![CDATA[ < ]]> #endPrice# + 1
    </isNotEmpty>
    <isNotEmpty property="beginRate" prepend="AND">
        B.prdt_dscnt_rate <![CDATA[ >= ]]> #beginRate#
    </isNotEmpty>
    <isNotEmpty property="endRate" prepend="AND">
        B.prdt_dscnt_rate <![CDATA[ <= ]]> #endRate#
    </isNotEmpty>
    <isNotEmpty property="beginDiscountPrice" prepend="AND">
        B.prdt_dscnt_price <![CDATA[ > ]]> #beginDiscountPrice# - 1
    </isNotEmpty>
    <isNotEmpty property="endDiscountPrice" prepend="AND">
        B.prdt_dscnt_price <![CDATA[ < ]]> #endDiscountPrice# + 1
    </isNotEmpty>
    <isNotEmpty property="beginRegistDate" prepend="AND">
        B.regst_dtm <![CDATA[ > ]]> to_date(#beginRegistDate# || '000000', 'yyyymmddhh24miss')
    </isNotEmpty>
    <isNotEmpty property="endRegistDate" prepend="AND">
        B.regst_dtm <![CDATA[ < ]]> to_date(#endRegistDate# || '235959', 'yyyymmddhh24miss')
    </isNotEmpty>
    <isNotEmpty property="statusCode" prepend="AND">
        B.prdt_stat_code = #statusCode#
    </isNotEmpty>
    <isNotEmpty property="rcrdStat" prepend="AND">
        <isEqual property="rcrdStat" compareValue="C0861">B.rcrd_stat = '0'</isEqual>
        <isEqual property="rcrdStat" compareValue="C0862">B.rcrd_stat = '1'</isEqual>
        <isEqual property="rcrdStat" compareValue="C0863">B.rcrd_stat = '2'</isEqual>
        <isEqual property="rcrdStat" compareValue="C0864">B.rcrd_stat = '3'</isEqual>
        <isEqual property="rcrdStat" compareValue="C0865">B.rcrd_stat = '4'</isEqual>
        <isEqual property="rcrdStat" compareValue="C0866">B.rcrd_stat = '6'</isEqual>
        <isEqual property="rcrdStat" compareValue="C0867">B.rcrd_stat = '9'</isEqual>
    </isNotEmpty>
    <isNotEmpty property="mallId" prepend="AND">
       <isNotEqual property="mallId" compareValue="00">
           EXISTS (SELECT * FROM tb_mall_product WHERE sell_prdt_bcode = B.sell_prdt_bcode and mall_id = #mallId#)
       </isNotEqual>
       <isEqual property="mallId" compareValue="00">
           EXISTS (SELECT * FROM tb_mall_product WHERE sell_prdt_bcode = B.sell_prdt_bcode)
       </isEqual>
     </isNotEmpty>
     
</sql>
<!-- 
작성자: 남형주
작성일:2011.07.06
기능: 음반상품 검색
 -->
 <select id="getRecordProductSearchList" parameterClass="recordProductCriteria" resultClass="recordProductExt">
 WITH v_temp AS (
    SELECT 
        B.sell_prdt_bcode    AS sellPrdtBcode,
        A.rcrd_cd            AS rcrdCd,
        B.prdt_name          AS prdtName,
        B.sell_prdt_gbn      AS sellPrdtGbn, 
        C.rcrd_spplr_name    AS rcrdSpplrName,
        D.label_name         AS labelName,
        E.maker_name         AS makerName,
        to_char(to_date(A.rlse_dt,'YYYYMMDD'),'YYYY/MM/DD') AS releaseDate,
        B.prdt_sell_price    AS prdtSellPrice,
        B.prdt_buy_price     AS prdtBuyPrice,
        B.prdt_stat_code     AS prdtStatCode,
        DECODE(B.rcrd_stat,'0','C0861','1','C0862','2','C0863','3','C0864','4','C0865','6','C0866','9','C0867',B.rcrd_stat) AS rcrdStat,
        B.regst_dtm          AS regstDtm,
        F.ctgr_id            AS ctgrId
    FROM tb_record A
    INNER JOIN tb_sell_product B ON A.sell_prdt_bcode = B.sell_prdt_bcode and B.rcrd_cd is not null
    INNER JOIN tb_record_supplier C ON B.rcrd_spplr_id = C.rcrd_spplr_id
    INNER JOIN tb_rec_label D ON A.label_cd = D.label_cd
    INNER JOIN tb_rec_maker E ON A.maker_cd  = E.maker_cd
    INNER JOIN tb_product_category F ON B.sell_prdt_bcode = F.sell_prdt_bcode and F.std_ctgr_yn = 'Y'
    where 1=1
    <isNotEmpty property="rcrdCd" prepend="AND">
        A.rcrd_cd = #rcrdCd#
    </isNotEmpty>
    <isNotEqual property="cateId" compareValue="00">
        <isNotEmpty property="cateId" prepend="AND">
            F.ctgr_id like #cateId# || '%'
        </isNotEmpty>
    </isNotEqual>
    <isNotEmpty property="rcrdSpplrId" prepend="AND">
        B.rcrd_spplr_id = #rcrdSpplrId#
    </isNotEmpty>
    <isNotEmpty property="labelCd" prepend="AND">
        A.label_cd = #labelCd#
    </isNotEmpty>
    <isNotEmpty property="rcrdMdMemoYn" prepend="AND">
       <isEqual property="rcrdMdMemoYn" compareValue="true">
            B.rcrd_md_memo is not null
       </isEqual>
    </isNotEmpty>
    <isNotEmpty property="makerCd" prepend="AND">
        A.maker_cd = #makerCd#
    </isNotEmpty>
    <isNotEmpty property="artistName" prepend="AND">
        UPPER(A.artistName) like '%' || UPPER(#artistName#) || '%'
    </isNotEmpty>
    <dynamic prepend="AND">
        <include refid="getRecordListForCondition"/>
    </dynamic>
    <isNotEmpty property="listProductGbn">
        <isEqual property="listProductGbn" compareValue="R">
             ORDER BY B.regst_dtm DESC
        </isEqual>
        <isEqual property="listProductGbn" compareValue="N">
             ORDER BY B.prdt_name
        </isEqual>
    </isNotEmpty>
	)
    SELECT 
        sellPrdtBcode,
        rcrdCd,
        FC_get_product_image_url(sellPrdtBcode) prdtImageUrl,
        prdtName,
        rcrdSpplrName,
        labelName,
        makerName,
        releaseDate,
        prdtSellPrice,
        FC_GET_DC_PRICE(sellPrdtBcode,'02') AS dcSellPrice,
        prdtBuyPrice,     
        '' AS stockQty, 
        prdtStatCode,
        rcrdStat,
        regstDtm,
        ctgrId
    FROM v_temp
 </select>
 <!-- 
작성자: 남형주
작성일:2011.07.06
기능: 음반상품 검색결과 갯수
 -->
 <select id="getRecordProductSearchListCount" parameterClass="recordProductCriteria" resultClass="int">
 WITH v_temp AS (
    SELECT 
        B.sell_prdt_bcode    AS sellPrdtBcode,
        A.rcrd_cd            AS rcrdCd,
        B.prdt_name          AS prdtName,
        C.rcrd_spplr_name    AS rcrdSpplrName,
        D.label_name         AS labelName,
        E.maker_name         AS makerName,
        to_char(to_date(A.rlse_dt,'YYYYMMDD'),'YYYY/MM/DD') AS releaseDate,
        B.prdt_sell_price    AS prdtSellPrice,
        B.prdt_buy_price     AS prdtBuyPrice,
        B.prdt_stat_code     AS prdtStatCode,
        DECODE(B.rcrd_stat,'0','C0861','1','C0862','2','C0863','3','C0864','4','C0865','6','C0866','9','C0867',B.rcrd_stat) AS rcrdStat,
        B.regst_dtm          AS regstDtm,
        F.ctgr_id            AS ctgrId
    FROM tb_record A
    INNER JOIN tb_sell_product B ON A.sell_prdt_bcode = B.sell_prdt_bcode and B.rcrd_cd is not null
    INNER JOIN tb_record_supplier C ON B.rcrd_spplr_id = C.rcrd_spplr_id
    INNER JOIN tb_rec_label D ON A.label_cd = D.label_cd
    INNER JOIN tb_rec_maker E ON A.maker_cd  = E.maker_cd
    INNER JOIN tb_product_category F ON B.sell_prdt_bcode = F.sell_prdt_bcode and F.std_ctgr_yn = 'Y'
    where 1=1
    <isNotEmpty property="rcrdCd" prepend="AND">
        A.rcrd_cd = #rcrdCd#
    </isNotEmpty>
    <isNotEqual property="cateId" compareValue="00">
        <isNotEmpty property="cateId" prepend="AND">
            F.ctgr_id like #cateId# || '%'
        </isNotEmpty>
    </isNotEqual>
    <isNotEmpty property="rcrdSpplrId" prepend="AND">
        B.rcrd_spplr_id = #rcrdSpplrId#
    </isNotEmpty>
    <isNotEmpty property="labelCd" prepend="AND">
        A.label_cd = #labelCd#
    </isNotEmpty>
    <isNotEmpty property="rcrdMdMemoYn" prepend="AND">
       <isEqual property="rcrdMdMemoYn" compareValue="true">
            B.rcrd_md_memo is not null
       </isEqual>
    </isNotEmpty>
    <isNotEmpty property="makerCd" prepend="AND">
        A.maker_cd = #makerCd#
    </isNotEmpty>
    <isNotEmpty property="artistName" prepend="AND">
        UPPER(A.artistName) like '%' || UPPER(#artistName#) || '%'
    </isNotEmpty>
    <dynamic prepend="AND">
        <include refid="getRecordListForCondition"/>
    </dynamic>
    <isNotEmpty property="listProductGbn">
        <isEqual property="listProductGbn" compareValue="R">
             ORDER BY B.regst_dtm DESC
        </isEqual>
        <isEqual property="listProductGbn" compareValue="N">
             ORDER BY B.prdt_name
        </isEqual>
    </isNotEmpty>
    )
    SELECT 
        count(*) AS cnt
    FROM v_temp
    
 </select>

<!-- 
작성자: 남형주
작성일:2011.07.11
기능: 음반상품검색화면 팝업 공통 where
 -->
 
<sql id="getRecordProductPopupWhere">
    <dynamic prepend="where">
        <isEqual property="listCountYn" removeFirstPrepend="true" prepend="and" compareValue="Y">
            rownum <![CDATA[ < ]]> #topCount# + 1
        </isEqual>      
        <isEqual property="keyGubun" compareValue="supplier">
            <isNotEmpty property="keyWord" removeFirstPrepend="true" prepend="and">
                <isEqual property="keyField" compareValue="code"> rcrd_spplr_id like '%' || #keyWord# ||'%' </isEqual>
                <isEqual property="keyField" compareValue="name"> upper(rcrd_spplr_name) LIKE '%'||UPPER(#keyWord#)||'%' </isEqual>
            </isNotEmpty>
        </isEqual>
        <isEqual property="keyGubun" compareValue="maker">
            <isNotEmpty property="keyWord" removeFirstPrepend="true" prepend="and">
                <isEqual property="keyField" compareValue="code"> maker_cd = #keyWord# </isEqual>
                <isEqual property="keyField" compareValue="name"> upper(maker_name) LIKE '%'||UPPER(#keyWord#)||'%' </isEqual>
            </isNotEmpty>
        </isEqual>
    </dynamic>
</sql> 

<!-- 
작성자: 남형주
작성일:2011.07.11
기능: 매입처 팝업 검색결과
 -->
<select id="getRecordSupplierList" parameterClass="recordProductCriteria" resultClass="recordSupplier">
    SELECT
        rcrd_spplr_id as id, 
        rcrd_spplr_name as name
    FROM tb_record_supplier 
    <include refid="getRecordProductPopupWhere" />   
    ORDER BY rcrd_spplr_id 
</select>
<!-- 
작성자: 남형주
작성일:2011.07.11
기능: 매입처 팝업 검색결과 카운트
 -->
<select id="getRecordSupplierListCount" parameterClass="recordProductCriteria" resultClass="int">
    SELECT
        count(*) as cnt
    FROM tb_record_supplier 
    <include refid="getRecordProductPopupWhere" />   
</select>
<!-- 
작성자: 남형주
작성일:2011.07.11
기능: 제작사 팝업 검색결과
 -->
<select id="getRecordMakerList" parameterClass="recordProductCriteria" resultClass="recordMaker">
    SELECT
        maker_cd as makerCd, 
        maker_name as makerName
    FROM tb_rec_maker 
    <include refid="getRecordProductPopupWhere" />    
    ORDER BY maker_cd
</select>
<!-- 
작성자: 남형주
작성일:2011.07.11
기능: 제작사 팝업 검색결과카운트
 -->
<select id="getRecordMakerListCount" parameterClass="recordProductCriteria" resultClass="int">
    SELECT
        count(*) as cnt
    FROM tb_rec_maker 
    <include refid="getRecordProductPopupWhere" />   
</select>

<!-- 
작성자: 남형주
작성일:2011.07.11
기능: 음반상품 상세데이터 
 -->
<select id="getRecordProductDetail" parameterClass="sellProductKey" resultClass="recordProductExt">
    SELECT 
       a.arti_name as artistName,           
       a.drctr as director,                 
       a.actor,                 
       a.scr as screen,                   
       a.sound,                 
       a.lang as language,                  
       a.captn as caption,                 
       a.local_code as localCode,            
       a.media_cd as mediaCd,              
       a.scr_hour as screenHour,              
       a.rcrd_year as recordYear,            
       a.rcrd_stat as recordStatus,             
       a.imp_yn as impYn,                
       a.rtng_code as ratingCode, 
       j.rcrd_desc as description, 
       a.cd_count as cdCount, 
       to_char(to_date(a.rlse_dt,'YYYYMMDD'),'YYYY-MM-DD') as releaseDate,              
       a.regst_dtm as registDatetime,
       b.sell_prdt_bcode as sellPrdtBcode, 
       b.rcrd_cd as rcrdCd,              
       b.prdt_bcode as prdtBcode,            
       b.prdt_name as prdtName,  
       NVL(b.prdt_saved_rate,0) as prdtSavedRate,       
       NVL(b.prdt_buy_price,0) as prdtBuyPrice,       
       NVL(b.prdt_dscnt_rate,0) as prdtDscntRate,      
       NVL(b.prdt_sell_price,0) as prdtSellPrice, 
       FC_GET_DC_PRICE(b.sell_prdt_bcode, '02') as lastDiscountPrice,
       b.sell_prdt_gbn as sellPrdtGbn,                 
       b.prvd_title as prvdTitle,           
       b.rcrd_md_memo as rcrdMdMemo,         
       b.rcrd_md_memo_end_dt as rcrdMdMemoEndDt,   
       b.prdt_srch_word as prdtSrchWord,        
       b.prdt_stat_code as prdtStatCode,       
       b.rcrd_sale_stop_rsn as rcrdSaleStopRsn,   
       b.free_dlvy_yn as freeDlvyYn,         
       b.rcrd_rlse_info as rcrdRlseInfo,        
       substr(b.rcrd_lsale_start_dth,0,8) as rcrdLsaleStartDth,  
       substr(b.rcrd_lsale_start_dth,9,2) as rcrdLsaleStartHour,  
       substr(b.rcrd_lsale_end_dth,0,8) as rcrdLsaleEndDth,    
       substr(b.rcrd_lsale_end_dth,9,2) as rcrdLsaleEndHour,    
       NVL(b.max_order_alw_count,0) as maxOrderAlwCount,  
       NVL(b.limit_count,0) as limitCount,          
       NVL(b.lave_count,0) as laveCount,
       b.mod_dtm as modDtm,
       b.mod_admin_id as modAdminId,     
       (select label_name from tb_rec_label c where c.label_cd = a.label_cd) as labelName,            
       (select maker_name from tb_rec_maker d where d.maker_cd = a.maker_cd) as makerName,         
       (select rcrd_spplr_name from  tb_record_supplier e where e.rcrd_spplr_id = b.rcrd_spplr_id) as rcrdSpplrName,         
       (select media_name from tb_rec_media f where f.media_cd = a.media_cd) as mediaName,  
       i.mall_id as mallId,
       a.disp_yn as recDispYn,
       b.rcrd_sub_comments as rcrdSubComments,
       b.rcrd_hard_sale_yn as rcrdHardSaleYn,
       b.disp_yn as dispYn,
       nvl(k.event_dscnt_rate,0) eventDscntRate,
       k.event_start_dt eventStartDt,
       k.event_end_dt eventEndDt
    FROM 
       tb_record a
       INNER JOIN tb_sell_product b ON  b.sell_prdt_bcode = #barcode# and a.rcrd_cd = b.rcrd_cd
       LEFT JOIN tb_mall_product i ON  i.sell_prdt_bcode = #barcode# and i.mall_id = '02'
       LEFT OUTER JOIN tb_rec_desc j ON a.rcrd_cd = j.rcrd_cd
       LEFT OUTER JOIN 
       (
        select k.sell_prdt_bcode, k.event_dscnt_rate, l.event_start_dt, l.event_end_dt from tb_event_sell_product k 
        inner JOIN tb_event_master l on k.event_id = l.event_id and l.event_type_code = 'C0198'
        inner join tb_mall_event j on l.event_id = j.event_id and j.mall_id = '02'
       ) k on b.sell_prdt_bcode = k.sell_prdt_bcode
</select>

<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 이벤트
 -->
<select id="getRecordProductDetailEvnet" parameterClass="sellProductKey" resultClass="recordProductExt">
    SELECT
       b.event_id as eventId,  
       b.event_type_code as eventTypeCode,                  
       to_char(to_date(b.event_start_dt,'YYYYMMDD'),'YYYY-MM-DD') as eventStartDt,        
       to_char(to_date(b.event_end_dt,'YYYYMMDD'),'YYYY-MM-DD') as eventEndDt,      
       NVL(a.event_dscnt_rate,0) as eventDscntRate 
    FROM  tb_event_sell_product a, 
            tb_event_master b 
    WHERE a.sell_prdt_bcode = #barcode#
       AND a.event_id = b.event_id 
       AND b.event_type_code = 'C0198'
</select>

<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 수록곡
 -->
<select id="getRecordTrackListByBarcode" parameterClass="sellProductKey" resultClass="recordTrack">
    SELECT
        c.rcrd_cd as recordCode, 
        c.cd_no as cdNo, 
        c.trk_no as no, 
        c.trk_name as name, 
        e.arti_name as artistName
    FROM tb_record a
    INNER JOIN tb_sell_product b ON b.sell_prdt_bcode = #barcode# and a.rcrd_cd = b.rcrd_cd
    INNER JOIN tb_rec_track c ON a.rcrd_cd = c.rcrd_cd
    LEFT OUTER JOIN tb_rec_track_artist d ON c.rcrd_cd = d.rcrd_cd and c.cd_no = d.cd_no and c.trk_no = d.trk_no
    LEFT OUTER JOIN tb_rec_artist e ON d.rec_arti_cd = e.rec_arti_cd
</select>

<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 부가정보 저장.
 -->
<update id="updateRecordProductPrvdInfo" parameterClass="recordProductParam">
        UPDATE 
            tb_sell_product
        SET
            mod_dtm = sysdate,
            mod_admin_id = #modAdminId#,
            prdt_name = #prdtName#,
            prvd_title = #prvdTitle#,
            rcrd_sub_comments = #rcrdSubComments#, 
            free_dlvy_yn = #freeDlvyYn#,
            rcrd_hard_sale_yn = #rcrdHardSaleYn#,
            disp_yn = #dispYn#,
            rcrd_md_memo = #rcrdMdMemo#,
            rcrd_md_memo_end_dt = #rcrdMdMemoEndDt#,
            prdt_srch_word = #prdtSrchWord#,
            rcrd_rlse_info = #rcrdRlseInfo#,
            prdt_saved_rate = #prdtSavedRate#
        WHERE
            sell_prdt_bcode = #sellPrdtBcode#
</update>

<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 상품할인이벤트마스터 update
 -->
 
<update id="updateEventMaster" parameterClass="events">
       UPDATE tb_event_master
       SET  event_start_dt = #startDate# ,
            event_end_dt = #endDate#
       WHERE
            event_id = #id#
       AND  event_type_code = #typeCode#
</update>
    
<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 상품할인이벤트마스터 저장
 -->
<insert id="createEventMaster" parameterClass="events">
         INSERT INTO
            TB_EVENT_MASTER
        (
            EVENT_ID
            , EVENT_TITLE
            , MNGR_ADMIN_ID
            , PWNR_RLS_YN
            , EVENT_START_DT
            , EVENT_END_DT
            , DSN_REQ_CONT
            , EVENT_DTL_CONT
            , CTGR_ID
            , EVENT_CRI_CODE
            , EVENT_DISP_TYPE_CODE
            , EVENT_STAT_CODE
            , EVENT_TYPE_CODE
            , EVENT_CMNT_TITLE_USE_YN
            , EVENT_CMNT_ICON_URL
            , EVENT_DISP_SCRN_CODE
            , PWNR_RLS_SCDL_DT
            , USER_TMPL_USE_YN
            , USER_TMPL
            , STD_DSCNT_RATE
            , ICON_CLICK_COUNT
            , REGST_DTM
            , PRMT_CODE
            , ATCH_FILE_PATH
            , VNDR_ALL_YN
            , SELL_PRDT_BCODE
            , DISP_YN
            , CULT_ZONE_YN
            , ON_LINE_YN
            , OFF_LINE_YN
        )
        VALUES
        (
            #id#
            , #title#
            , #managerAdminId#
            , #announcingWinnerYn#
            , #startDate#
            , #endDate#
            , #designRequestContent#
            , #detailContent#
            , #categoryId#
            , #criticalCode#
            , #displayTypeCode#
            , #statusCode#
            , #typeCode#
            , #commentTitleUseYn#
            , #commentIconUrl#
            , #displayScreenCode#
            , #announcingWinnerDate#
            , #userTempletUseYn#
            , #userTemplet#
            , 0
            , #iconClickCount#
            , sysdate
            , #permitCode#
            , #attachFilePath#
            , #vendorAllYn#
            , #sellProductBarcode#
            , #displayYn#
            , ''
            , ''
            , ''
        )
</insert>

<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 몰이벤트 등록
 -->
<insert id="createMallEvent" parameterClass="events">
        INSERT INTO
            tb_mall_event
        (
            mall_id
            , event_id
        )
        values
        (
            #mallId#
            , #id#
        )
</insert>

<insert id="mergeMallEvent" parameterClass="events">
        MERGE INTO tb_mall_event a
        USING 
        (
        	SELECT #id# event_id, #mallId# mall_id FROM dual
        ) b on (a.event_id = b.event_id and a.mall_id = b.mall_id)
        WHEN NOT MATCHED THEN 
            INSERT (event_id, mall_id)
            values (#id#, #mallId#)
</insert>

<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 상품할인 이벤트 상품정보 update
 -->
<update id="updateProductEvent" parameterClass="eventSellProduct">
       UPDATE tb_event_sell_product
       SET  event_dscnt_rate = #eventDiscountRate# 
       WHERE
            event_id = #eventId#
       AND sell_prdt_bcode = #productBarcode#
</update>
<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 상품할인 이벤트 상품정보 등록
 -->
<insert id="createProductEvent" parameterClass="eventSellProduct">
        INSERT INTO
            TB_EVENT_SELL_PRODUCT
        (
            EVENT_ID
            , SELL_PRDT_BCODE
            , EVENT_DSCNT_RATE
            , PRDT_IMAGE_URL
            , EVENT_TYPE_INSEQ
            , MAIN_YN
            , CHGE_RATE
            , FREE_DLVY_YN
            , DISP_ORDER
            , prdt_qna_seq
        )
        VALUES
        (
            #eventId#
            , #productBarcode#
            , #eventDiscountRate#
            , #productImageUrl#
            , #eventTypeInseq#
            , #mainYn#
            , #eventChargeRate#
            , #eventFreeDeliveryYn#
            , #displayOrder#
            , #prdtQnaSeq#
        )
</insert>
<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 상품할인 이벤트  카운트조회
 -->
<select id="getProductEventData" parameterClass="recordProductParam" resultClass="string">
    SELECT a.event_id as id
    FROM tb_event_sell_product a
    INNER JOIN tb_event_master b ON a.event_id = b.event_id AND  b.event_type_code = 'C0198'
    WHERE a.sell_prdt_bcode = #sellPrdtBcode#
</select>



<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 상품할인 이벤트  카운트조회
 -->
<select id="getProductEventPriceData" parameterClass="recordProductParam" resultClass="events">
    SELECT
        a.event_id as id, 
        b.event_start_dt as startDate, 
        b.event_end_dt as endDate, 
        a.event_dscnt_rate as standardDiscountRate
    FROM tb_event_sell_product a
    INNER JOIN tb_event_master b ON a.event_id = b.event_id AND  b.event_type_code = 'C0198'
    WHERE a.sell_prdt_bcode = #sellPrdtBcode#
</select>




<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반상품 상세데이터  - 한정판매정보 저장.
 -->
<update id="saveRecordProductLsaleInfo" parameterClass="recordProductParam">
        UPDATE 
            tb_sell_product
        SET
            mod_dtm    = sysdate,
            mod_admin_id = #modAdminId#,
            limit_count = 
            <isEqual property="limitCount" compareValue="0">
            	<isEqual property="laveCount" compareValue="0">
            		0
            	</isEqual>
            	<isNotEqual property="laveCount" compareValue="0">
            		#laveCount# - lave_count + #limitCount#
            	</isNotEqual>
            </isEqual>
            <isNotEqual property="limitCount" compareValue="0">
            	<isEqual property="laveCount" compareValue="0">
            		#laveCount# - lave_count + #limitCount#
            	</isEqual>
            	<isNotEqual property="laveCount" compareValue="0">
            		#laveCount# - lave_count + #limitCount#
            	</isNotEqual>
            </isNotEqual>
            ,
            max_order_alw_count = #maxOrderAlwCount#,
            lave_count =  #laveCount#,
            rcrd_lsale_start_dth = #rcrdLsaleStartDth#,
            rcrd_lsale_end_dth = #rcrdLsaleEndDth#
        WHERE
            sell_prdt_bcode = #sellPrdtBcode#
</update>

<update id="saveRecordForceSaleInfo" parameterClass="recordProductParam">
    update TB_SELL_PRODUCT
       set RCRD_HARD_SALE_YN = #rcrdHardSaleYn#
         , mod_dtm    = sysdate
         , mod_admin_id = #modAdminId#
     where sell_prdt_bcode = #sellPrdtBcode#
</update>

<!-- 
작성자: 남형주
작성일:2011.07.25
기능: 음반  - 한정판매 일괄처리
 -->
<update id="saveRecordProductExcel" parameterClass="recordProductParam">
        UPDATE 
            tb_sell_product
        SET
            mod_dtm    = sysdate,
            mod_admin_id = #modAdminId#,
            limit_count = #limitCount#,
            rcrd_lsale_start_dth = #rcrdLsaleStartDth#,
            rcrd_lsale_end_dth = #rcrdLsaleEndDth#
            
        WHERE
            sell_prdt_bcode = #sellPrdtBcode#
</update>


    <sql id="selectPosterCaseListWhere">
        <dynamic prepend="where">
            <isNotEmpty property="useYn" removeFirstPrepend="true" prepend="and">
                a.use_yn = #useYn#
            </isNotEmpty>
            <isNotEmpty property="searchSd" removeFirstPrepend="true" prepend="and">
                (a.prsnt_start_day &gt;= #searchSd#
                or a.prsnt_end_day &gt;= #searchSd#)
            </isNotEmpty>
            <isNotEmpty property="searchEd" removeFirstPrepend="true" prepend="and">
                (a.prsnt_start_day &lt;= #searchEd#
                or a.prsnt_end_day &lt;= #searchEd#)
            </isNotEmpty>
            <isNotEmpty property="keyField" removeFirstPrepend="true" prepend="and">
                <isNotEmpty property="keyWord">
                    <isEqual property="keyField" removeFirstPrepend="true" prepend="and" compareValue="sellPrdtBcode">
                        a.sell_prdt_bcode like '%' || #keyWord# || '%'
                    </isEqual>
                    <isEqual property="keyField" removeFirstPrepend="true" prepend="and" compareValue="prdtName">
                        b.prdt_name like '%' || #keyWord# || '%'
                    </isEqual> 
                </isNotEmpty>
            </isNotEmpty>
            <isEmpty property="keyField" removeFirstPrepend="true" prepend="and">
                <isNotEmpty property="keyWord">
                (
                     a.sell_prdt_bcode like '%' || #keyWord# || '%' or
                     b.prdt_name like '%' || #keyWord# || '%'
                 )
                 </isNotEmpty>
            </isEmpty>
        </dynamic>
    </sql>

    <!-- 
        기능 : 포스터 케이스 리스트
        작업 일시 : 2011. 07. 27
     -->
    <select id="selectPosterCaseList" parameterClass="posterCaseCriteria" resultClass="posterCaseExt">
        select
            a.poster_case_seq as posterCaseSeq, 
            a.case_title as caseTitle, 
            a.prsnt_start_day as prsntStartDay, 
            a.prsnt_end_day as prsntEndDay, 
            a.regst_dtm as regstDtm, 
            a.admin_id as adminId, 
            a.sell_prdt_bcode as sellPrdtBcode, 
            a.use_yn as useYn,
            b.prdt_name as prdtName,
            c.arti_name as artiName,
            d.maker_name as makerName,
            e.admin_name as adminName
        from tb_poster_case a
        inner join tb_sell_product b on a.sell_prdt_bcode = b.sell_prdt_bcode
        inner join tb_record c on b.rcrd_cd = c.rcrd_cd
        inner join tb_rec_maker d on c.maker_cd = d.maker_cd
        inner join tb_admin e on a.admin_id = e.admin_id
        <include refid="selectPosterCaseListWhere" />
    </select>
    
    <!-- 
        기능 : 포스터 케이스 리스트 갯수
        작업 일시 : 2011. 07. 27
     -->
    <select id="selectPosterCaseListCount" parameterClass="posterCaseCriteria" resultClass="int">
    select
            count(a.poster_case_seq)
        from tb_poster_case a
        inner join tb_sell_product b on a.sell_prdt_bcode = b.sell_prdt_bcode
        inner join tb_record c on b.rcrd_cd = c.rcrd_cd
        inner join tb_rec_maker d on c.maker_cd = d.maker_cd
        <include refid="selectPosterCaseListWhere" />
    </select>    
    
      <!-- 
        기능 : 포스터 케이스 등록
        작업 일시 : 2011. 07. 27
     -->
    <insert id="createPosterCase" parameterClass="posterCase">
        <selectKey keyProperty="posterCaseSeq">
            select poster_case_seq.nextval from dual
        </selectKey>
        insert into tb_poster_case
            (
                poster_case_seq
                , prsnt_start_day
                , prsnt_end_day
                , regst_dtm
                , admin_id
                , sell_prdt_bcode
                , use_yn
            )
            values
            (
                #posterCaseSeq#
                , #prsntStartDay#
                , #prsntEndDay#
                , sysdate
                , #adminId#
                , #sellPrdtBcode#
                , 'Y'
            )
    </insert>
    
      <!-- 
        기능 : 포스터 케이스 수정
        작업 일시 : 2011. 07. 27
     -->
    <update id="updatePosterCase" parameterClass="posterCaseParam">
        update tb_poster_case set
             case_title = #caseTitle#
             , prsnt_start_day = #prsntStartDay#
             , prsnt_end_day   = #prsntEndDay#
             , sell_prdt_bcode = #sellPrdtBcode#
             , use_yn = #useYn#
             , admin_id = #adminId#
        where 
            poster_case_seq = #posterCaseSeq#
    </update>
    
    <!-- 
        기능 : 포스터,케이스 상세 반환
        작업 일시 : 2011. 07. 27
     -->
    <select id="selectPosterCase" parameterClass="int" resultClass="posterCaseExt">
        select
            a.poster_case_seq as posterCaseSeq, 
            a.case_title as caseTitle, 
            a.prsnt_start_day as prsntStartDay, 
            a.prsnt_end_day as prsntEndDay, 
            a.regst_dtm as regstDtm, 
            a.admin_id as adminId, 
            a.sell_prdt_bcode as sellPrdtBcode, 
            a.use_yn as useYn,
            b.prdt_name as prdtName,
            c.arti_name as artiName,
            d.maker_name as makerName,
            e.admin_name as adminName
        from tb_poster_case a
        inner join tb_sell_product b on a.sell_prdt_bcode = b.sell_prdt_bcode
        inner join tb_record c on b.rcrd_cd = c.rcrd_cd
        inner join tb_rec_maker d on c.maker_cd = d.maker_cd
        inner join tb_admin e on a.admin_id = e.admin_id
        where
            a.poster_case_seq = #posterCaseSeq#
    </select>

<!-- 
작성자: 남형주
작성일:2011.08.03
기능: 판매금지 일괄저장
 -->
<update id="updateSaleBanRecord" parameterClass="recordProductParam">
       UPDATE tb_sell_product
       SET  mod_dtm    = sysdate,
            mod_admin_id = #modAdminId#,
            prdt_stat_code = #prdtStatCode# ,
            rcrd_sale_stop_rsn = #rcrdSaleStopRsn#
       WHERE sell_prdt_bcode = #sellPrdtBcode#
</update>

    <!-- 
        기능 : 알림예약배너 리스트 - 공통조건절
        작업 일시 : 2011. 09. 06
     -->
    <sql id="selectAdNotiListWhere">
          <dynamic prepend="where">
              <isNotEmpty property="shopType" removeFirstPrepend="true" prepend="and">
                  a.shop_type = #shopType# 
              </isNotEmpty>
              <isNotEmpty property="useYn" removeFirstPrepend="true" prepend="and">
                  a.use_yn = #useYn# 
              </isNotEmpty>
              <isNotEmpty property="title" removeFirstPrepend="true" prepend="and">
                  a.title like '%' || #title# || '%'
              </isNotEmpty>
              <isNotEmpty property="notiMstSeq" removeFirstPrepend="true" prepend="and">
                  a.noti_mst_seq = #notiMstSeq#
              </isNotEmpty>              
          </dynamic>
    </sql>
    
    <!--  
            기능: 옵션삭제
           작업일시:2011.09.19
     -->
    <delete id="deleteOptionTemp" parameterClass="recordProductParam">
        DELETE FROM tb_temp_option
        WHERE sell_prdt_bcode = #sellPrdtBcode#
    </delete>
    <!--  
            기능 : 옵션저장
            작성일시 : 2011.09.19
    -->
    <insert id="saveOptionTemp" parameterClass="optionTemp">
        INSERT INTO tb_temp_option (
            sell_prdt_bcode,
            optn_seq,
            optn_name,
            optn_desc
        ) VALUES (
            #barcode#,
            optn_seq.nextval,
            #optionName#,
            #optionDescription#
        )
    </insert>
    
    <!-- 
    	음반 상품평 삭제
     -->
     <delete id="deleteRecordReview" parameterClass="String">
     	delete from tb_record_review
     	where
     		rcrd_review_seq = #seq#
     </delete>
     
     <!-- 
     	음반 상품평 상세
      -->
      <select id="selectRecordReview" parameterClass="String" resultClass="qnADomain">
      		SELECT
					a.rcrd_review_seq 			seq
					, 'C' 						division
					, a.user_num				userNum
					, a.review					title
					, to_clob('')				content
					, a.regst_dtm				registerDate
					, sysdate					answerRegisterDate
					, to_clob('')				answerContent
					, 'N'						answerYn
					, c.SELL_PRDT_BCODE 		barcode
					, c.VNDR_CNTRT_ID 			vid
					, 'Y'		 				displayYn
					, 'R'						procStatGbn
					, a.grade					grade
					, a.use_yn                  publicYn
					, d.USER_ID 				userId
					, c.PRDT_NAME 				productName
					, FC_GET_PRODUCT_IMAGE_URL(c.sell_prdt_bcode) 	productImageUrl
					, ''						imageUrl
					, c.sell_prdt_gbn 			sellPrdtGbn
					, c.rcrd_cd					rcrdCd
					, b.rtng_code 				rtngCode
					, 'M'						commentGbn
				FROM tb_record_review a
				INNER JOIN tb_record b on a.rcrd_cd = b.rcrd_cd
				INNER JOIN tb_sell_product c on b.sell_prdt_bcode = c.sell_prdt_bcode
				INNER JOIN tb_user d on d.user_num = a.user_num
				WHERE
					a.rcrd_review_seq = #seq#
      </select>
      
      <!-- 
      	예약 상품 코드 변경
       -->
      <update id="updatePreOrderProduct" parameterClass="map">
      	update tb_order_product
      	set sell_prdt_bcode = #newSellPrdtBcode#
      	where sell_prdt_bcode = #oldSellPrdtBcode#
      </update>
      
      <!-- 
      	예약 상품 변경 히스토리 저장
       -->
      <insert id="insertPsaleBcodeChngYN" parameterClass="PsaleBcodeChngHist">
      	<selectKey keyProperty="histSeq" resultClass="int">
      		select PSALE_CHNG_HIST_SEQ.nextval from dual
      	</selectKey>
		insert into tb_psale_bcode_chng_hist
		(
			hist_seq
			, ori_sell_prdt_bcode
			, chng_sell_prdt_bcode
			, admin_id
			, regst_dtm
			, success_yn
		)
		values
		(
			#histSeq#
			, #oriSellPrdtBcode#
			, #chngSellPrdtBcode#
			, #adminId#
			, sysdate
			, #successYn#
		)
      </insert>
      
    	<!-- 
    		예약 상품 장바구니 상품 코드 변경
    	 -->
      <update id="updatePreOrderCartProduct" parameterClass="map">
      	update tb_cart
      	set sell_prdt_bcode = #newSellPrdtBcode#
      	where sell_prdt_bcode = #oldSellPrdtBcode# 
      </update> 
      
      
      <!-- 
       	음악 상품권 정보 가져오기
       -->
       <select id="getMusicCardList" resultClass="recordProductExt">
       		select 
       			sell_prdt_bcode sellPrdtBcode
       			, prdt_name prdtName
       			, prdt_sell_price prdtSellPrice
       			, prdt_dscnt_price prdtDscntPrice
       		from tb_sell_product
       		where sell_prdt_gbn = 'C'
       </select>
       
       <!-- 
                        신규 음반 검색테이블에 등록
        -->
       <insert id="insertSearchTable" parameterClass="map">
        merge into tb_rec_search_add a
        using(
            select #rcrdCd# rcrd_cd from dual
        ) b
        on(a.rcrd_cd = b.rcrd_cd)
        when matched then
            update set regst_dtm = sysdate,
                          search_yn = 'N' 
        when not matched then
            insert (rcrd_cd, regst_dtm, search_yn)
            values(#rcrdCd# ,sysdate,'N')
        </insert>
        
        <!--
        	기존음반배치에서 상품업뎃하는 쿼리 바꿈.
        -->
        <update id="updateSellProductRecord" parameterClass="sellProduct">
        UPDATE  tb_sell_product
           SET
                prdt_name                  = #name#,
                prdt_sell_price            = #sellPrice#,
                prdt_buy_price             = #buyPrice#,
                prdt_dscnt_rate            = #discountRate#,
                prdt_dscnt_price           = #discountPrice#,
                rcrd_spplr_id              = #recordSupplierId#,
                mod_dtm                    = sysdate,
                mod_admin_id               = 'system'
         WHERE  sell_prdt_bcode = #barcode#
    </update>



    <!--
            작성자 : 김기석
            작성일 : 2011.12.22 
            기능 :
            - 음반상품의 할인가격 정보를 업데이트함.
    -->
    <update id="updateRecordProductDcPriceInfo" parameterClass="map">
        update tb_sell_product set 
            prdt_dscnt_price = #dcPrice#, 
            prdt_dscnt_rate = trunc((1 - #dcPrice# /  #sellPrice#) * 100, 1),
            prdt_saved_rate = #savedRate#,
            prdt_sell_price = #sellPrice#
        where
            sell_prdt_bcode = #barcode# and 
            sell_prdt_gbn in ('R', 'D')
    </update>

    <!--
            작성자 : 김기석
            작성일 : 2011.12.22 
            기능 :
            - 음반상품의 할인가격 정보를 배치 예외 정보를 등록함.
    -->
    <statement id="mergeSellPrdtRecExPrice" parameterClass="sellProduct">
		merge into tb_sell_prdt_rec_ex_price a
		using(
		    select 
		        b.sell_prdt_bcode 
		    from tb_sell_product a 
		    left outer join tb_sell_prdt_rec_ex_price b on a.sell_prdt_bcode = b.sell_prdt_bcode 
		    where a.sell_prdt_bcode = #barcode#
		) b
		on (a.sell_prdt_bcode = b.sell_prdt_bcode)
		when matched then
		    update set admin_id = #adminId#, regst_dtm = sysdate    
		when not matched then
		    insert (sell_prdt_bcode, admin_id, regst_dtm) values(#barcode#, #adminId#, sysdate)    
    </statement>

</sqlMap>