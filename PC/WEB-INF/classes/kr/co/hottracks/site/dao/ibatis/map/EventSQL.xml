<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="EventSQL">
    <!-- 
        작성자: 장진용
        작성일: 2015-07-22
        기능: 답글목록 수 반환
    -->
    <select id="countChildCommentsByCmntSeq" resultClass="int" parameterClass="kr.co.hottracks.site.model.common.event.EventCommentCriteria">
        /* EventSQL.countChildCommentsByCmntSeq */
        SELECT COUNT(*)  
          FROM TB_EVENT_COMMENT A
          JOIN TB_USER B ON A.USER_NUM = B.USER_NUM
          JOIN TB_EVENT_MASTER C ON A.EVENT_ID = C.EVENT_ID
         WHERE ROWNUM &lt; #topCount# + 1
           AND A.PARNT_CMNT_SEQ = #parntCmntSeq#
    </select>
    
    <!-- 
        기능: 해당 이벤트의 코멘트 수 반환
     -->
    <select id="countCommentsByEventId" resultClass="int" parameterClass="kr.co.hottracks.site.model.common.event.EventCommentCriteria">
        /* EventSQL.countCommentsByEventId */
        SELECT COUNT(A.EVENT_ID) 
          FROM TB_EVENT_COMMENT A
          JOIN TB_USER B ON A.USER_NUM = B.USER_NUM
          JOIN TB_EVENT_MASTER C ON A.EVENT_ID = C.EVENT_ID
         WHERE A.EVENT_ID = #eventId#
           AND A.PARNT_CMNT_SEQ IS NULL
           <isNotEmpty property="mallId">
               AND A.MALL_ID = #mallId#
           </isNotEmpty>
           <isNotEmpty property="entryYn">
               <isEqual property="entryYn" compareValue="true">
                   AND A.ENTRY_YN = 'Y'
               </isEqual>
           </isNotEmpty>
           <isNotEmpty property="userId">
               AND B.USER_ID = #userId#
           </isNotEmpty>
    </select>
    
    <!-- 
        기능: 코멘트D형의 코멘트 수를 반환
    -->
    <select id="countCommentsForCommentD" parameterClass="kr.co.hottracks.site.model.common.event.EventComment" resultClass="int">
        /* EventSQL.countCommentsForCommentD */
        SELECT COUNT(*) CNT
          FROM TB_ORDER O
          JOIN TB_ORDER_PRODUCT OP ON O.ORDER_NUM = OP.ORDER_NUM
          JOIN TB_EVENT_MASTER EM ON OP.SELL_PRDT_BCODE = EM.SELL_PRDT_BCODE AND EM.EVENT_TYPE_CODE = 'C019A' AND O.ORDER_DTM BETWEEN TO_DATE(EM.EVENT_START_DT || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(EM.EVENT_END_DT || '235959', 'YYYYMMDDHH24MISS') AND EM.EVENT_ID = #eventId#
         WHERE O.USER_NUM = #userNum#
    </select>
    
    <!--
        기능: 이벤트 당첨 목록 수를 반환 
    -->
    <select id="countEventPrizeList" parameterClass="kr.co.hottracks.site.model.common.event.EventCriteria" resultClass="int">
        /* EventSQL.countEventPrizeList */
        SELECT COUNT(*) AS CNT
          FROM TB_EVENT_MASTER EM
          JOIN TB_MALL_EVENT ME ON EM.EVENT_ID = ME.EVENT_ID AND ME.MALL_ID = #mallId#
          JOIN TB_EVENT_WIN W ON EM.EVENT_ID = W.EVENT_ID AND W.MALL_ID = ME.MALL_ID AND W.DISP_YN = 'Y'
         WHERE EM.PWNR_RLS_YN = 'Y'
           <isEqual property="listCountYn" compareValue="Y">
               AND ROWNUM <![CDATA[ < ]]> #topCount# + 1
           </isEqual>
           <isNotEmpty property="searchVal">
               <isEmpty property="searchKey">
                   AND (UPPER(EM.EVENT_TITLE) LIKE '%'||UPPER(#searchVal#)||'%' OR UPPER(W.CONT) LIKE '%'|| UPPER(#searchVal#) ||'%')
               </isEmpty>
               <isNotEmpty property="searchKey">
                   <isEqual property="searchKey" compareValue="T">
                       AND UPPER(EM.EVENT_TITLE) LIKE '%'||UPPER(#searchVal#)||'%'
                   </isEqual>
                   <isEqual property="searchKey" compareValue="C">
                       AND UPPER(W.CONT) LIKE '%'||UPPER(#searchVal#)||'%'
                   </isEqual>
               </isNotEmpty>
           </isNotEmpty>
    </select>
    
    <!-- 
        기능: 해당 코멘트를 삭제한다
    -->
    <delete id="deleteEventCommentByKey" parameterClass="kr.co.hottracks.site.model.common.event.EventComment">
        /* EventSQL.deleteEventCommentByKey */
        DELETE TB_EVENT_COMMENT
         WHERE EVENT_ID = #eventId#
           AND EVENT_CMNT_SEQ = #sequence# 
    </delete>
    
    <!-- 
        작성자: 장진용
        작성일: 2015-07-22
        기능: 답글목록 반환
    -->
    <select id="getChildCommentsByCmntSeq" resultClass="kr.co.hottracks.site.model.common.event.EventCommentListData" parameterClass="kr.co.hottracks.site.model.common.event.EventCommentCriteria">
        /* EventSQL.getChildCommentsByCmntSeq */
        SELECT /*+ FIRST_ROWS */
               A.EVENT_ID       eventId
             , A.EVENT_CMNT_SEQ sequence
             , A.USER_NUM       userNum
             , A.CMNT           eventComment
             , A.REGST_DTM      registDatetime
             , A.WRTOR_IP       writerIpAddress
             , A.DISP_YN        displayYn
             , A.ENTRY_YN       entryYn
             , B.user_id        userId
             , C.EVENT_CMNT_ICON_URL eventIconUrl
             , A.EMTC_ID        emtcId
             , (SELECT SA.IMG_URL FROM TM_BNR SA WHERE SA.BNR_SEQ = A.EMTC_ID)     emtcUrl 
          FROM TB_EVENT_COMMENT A
          JOIN TB_USER B ON A.USER_NUM = B.USER_NUM
          JOIN TB_EVENT_MASTER C ON A.EVENT_ID = C.EVENT_ID
         WHERE A.PARNT_CMNT_SEQ = #parntCmntSeq#
         ORDER BY A.REGST_DTM DESC
    </select>
    
    <!-- 
        기능: 해당 댓글 목록을 반환
    -->
    <select id="getCommentsByEventId" resultClass="kr.co.hottracks.site.model.common.event.EventCommentListData" parameterClass="kr.co.hottracks.site.model.common.event.EventCommentCriteria">
        /* EventSQL.getCommentsByEventId */
        SELECT /*+ FIRST_ROWS */
               A.EVENT_ID               eventId
             , A.EVENT_CMNT_SEQ         sequence
             , A.USER_NUM               userNum
             , A.CMNT                   eventComment
             , A.REGST_DTM              registDatetime
             , A.WRTOR_IP               writerIpAddress
             , A.DISP_YN                displayYn
             , A.ENTRY_YN               entryYn
             , B.USER_ID                userId
             , C.EVENT_CMNT_ICON_URL    eventIconUrl
             , A.EMTC_ID                emtcId
             , (SELECT SA.IMG_URL FROM TM_BNR SA WHERE SA.BNR_SEQ = CASE WHEN REGEXP_INSTR(A.EMTC_ID,'[^0-9]') = 0 THEN A.EMTC_ID ELSE '' END)  emtcUrl
             , (SELECT COUNT(*) FROM TB_EVENT_COMMENT_LIKE T WHERE T.EVENT_ID = A.EVENT_ID AND T.EVENT_CMNT_SEQ = A.EVENT_CMNT_SEQ)             likeCnt
             , (SELECT COUNT(*) FROM TB_EVENT_COMMENT T WHERE T.PARNT_CMNT_SEQ = A.EVENT_CMNT_SEQ)                                              childCnt
             , C.DISP_STAR_YN           dispStarYn
          FROM TB_EVENT_COMMENT A
          JOIN TB_USER B ON A.USER_NUM = B.USER_NUM
          JOIN TB_EVENT_MASTER C ON A.EVENT_ID = C.EVENT_ID
         WHERE A.EVENT_ID = #eventId#
           AND A.PARNT_CMNT_SEQ IS NULL
           <isNotEmpty property="mallId">
               AND A.MALL_ID = #mallId#
           </isNotEmpty>
           <isNotEmpty property="entryYn">
               <isEqual property="entryYn" compareValue="true">
                   AND A.ENTRY_YN = 'Y'
               </isEqual>
           </isNotEmpty>
           <isNotEmpty property="userId">
               AND B.USER_ID = #userId#
           </isNotEmpty>
         <isEmpty property="orderBy">  
            ORDER BY A.EVENT_ID, A.EVENT_CMNT_SEQ DESC
         </isEmpty>
         <isNotEmpty property="orderBy">
             <isEqual property="orderBy" compareValue="regDtmDesc">
                 ORDER BY A.REGST_DTM DESC
             </isEqual>
             <isEqual property="orderBy" compareValue="likeCntDesc">
                 ORDER BY likeCnt DESC, A.REGST_DTM DESC
             </isEqual>
             <isEqual property="orderBy" compareValue="commentsCountDesc">
                 ORDER BY (SELECT COUNT(*) FROM TB_EVENT_COMMENT WHERE A.EVENT_ID = EVENT_ID AND A.USER_NUM = USER_NUM) DESC
             </isEqual>
         </isNotEmpty>
    </select>
    
    <!-- 
        기능: 해당 댓글 목록 수를 반환
    -->
    <select id="getCommentsByEventIdCount" resultClass="int" parameterClass="kr.co.hottracks.site.model.common.event.EventCommentCriteria">
        /* EventSQL.getCommentsByEventIdCount */
        SELECT COUNT(A.EVENT_ID) 
          FROM TB_EVENT_COMMENT A
          JOIN TB_USER B ON A.USER_NUM = B.USER_NUM
          JOIN TB_EVENT_MASTER C ON A.EVENT_ID = C.EVENT_ID
         WHERE ROWNUM &lt; #topCount# + 1
           AND A.EVENT_ID = #eventId#
           AND A.PARNT_CMNT_SEQ IS NULL
           <isNotEmpty property="mallId">
               AND A.mall_id = #mallId#
           </isNotEmpty>
           <isNotEmpty property="entryYn">
               <isEqual property="entryYn" compareValue="true">
                   AND A.ENTRY_YN = 'Y'
               </isEqual>
           </isNotEmpty>
           <isNotEmpty property="userId">
               AND B.USER_ID = #userId#
           </isNotEmpty>
    </select>
    
    <!-- 
        기능: 해당 시퀀스의 이벤트 코멘트를 반환
    -->
    <select id="getEventCommentByKey" parameterClass="kr.co.hottracks.site.model.common.event.EventComment" resultClass="kr.co.hottracks.site.model.common.event.EventComment">
        /* EventSQL.getEventCommentByKey */
        SELECT EVENT_ID         eventId
             , EVENT_CMNT_SEQ   sequence
             , USER_NUM         userNum
             , CMNT             eventComment
             , REGST_DTM        registDatetime
             , WRTOR_IP         writerIpAddress
             , DISP_YN          displayYn
             , ENTRY_YN         entryYn
          FROM TB_EVENT_COMMENT 
         WHERE EVENT_ID = #eventId#
           AND EVENT_CMNT_SEQ = #sequence# 
    </select>
    
    <select id="getEventFreeGift" parameterClass="kr.co.hottracks.site.model.common.event.EventFreeGift" resultClass="kr.co.hottracks.site.model.common.event.EventFreeGift">
        /* EventSQL.getEventFreeGift */
        SELECT EVENT_ID          eventId
             , FREE_GIFT_COUNT   freeGiftCount
             , CNSM_COUNT        consumeCount
             , FREE_GIFT_ID      freeGiftId
          FROM TB_EVENT_FREE_GIFT A
         WHERE EVENT_ID = #eventId#
           AND free_gift_id = #freeGiftId#
    </select>
    
    <!-- 
        기능: 해당 상품의 진행죽인 이벤트 목록 반환
     -->
    <select id="getEventListByProduct" parameterClass="kr.co.hottracks.site.model.frontoffice.product.ProductParameter" resultClass="kr.co.hottracks.site.model.common.event.Event">
        /* EventSQL.getEventListByProduct */
        SELECT A.EVENT_ID           id
             , A.EVENT_TITLE        title
             , A.EVENT_TYPE_CODE    typeCode
          FROM TB_EVENT_MASTER A
          JOIN TB_MALL_EVENT B ON A.EVENT_ID = B.EVENT_ID AND B.MALL_ID = #mallId#
         WHERE TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.EVENT_START_DT AND A.EVENT_END_DT
           AND A.EVENT_STAT_CODE = 'C0181'
           AND A.EVENT_TYPE_CODE NOT IN ('C0196', 'C0198')
           AND A.PRMT_CODE = 'C0374'
           AND A.DISP_YN = 'Y'
           AND A.EVENT_ID IN (SELECT EVENT_ID FROM TB_EVENT_SELL_PRODUCT WHERE SELL_PRDT_BCODE = #barcode#)
         ORDER BY A.EVENT_START_DT DESC
    </select>
    
    <!-- 
        작성자: 장진용
        작성일: 2017-07-24
        기능: 랜덤(룰렛) 기획전 정보 반환
    -->
    <select id="getEventRandom" parameterClass="kr.co.hottracks.site.model.renewal.event.EventCriteria" resultClass="kr.co.hottracks.site.model.renewal.event.EventRandomExt">
		/* EventSQL.getEventRandom */
        SELECT ER.EVENT_ID          eventId
        	, ER.CHANNEL_GBN       channelGbn
            , ER.IMAGE_URL_TOP     imageUrlTop
            , ER.IMAGE_MAP_TOP     imageMapTop
            , ER.IMAGE_URL_BG      imageUrlBg
            , ER.IMAGE_URL_PIN     imageUrlPin
            , ER.IMAGE_URL_RLT     imageUrlRlt
            , ER.REGST_DTM         regstDtm
            , ER.REGST_ADMIN_ID    regstAdminId
            , FC_GET_EVENT_RANDOM_STAT(ER.EVENT_ID, #channelGbn#, #mallId#, #userNum#) targetGbn
            , NVL((SELECT SUM(NVL(REGEXP_REPLACE(CMNT, '[^0-9]'), 0)) FROM TB_EVENT_COMMENT EC WHERE ER.EVENT_ID = EC.EVENT_ID AND EC.EMTC_ID = 'P'), 0)   totPointAmt
            , NVL((SELECT SUM(NVL(REGEXP_REPLACE(CMNT, '[^0-9]'), 0)) FROM TB_EVENT_COMMENT EC WHERE ER.EVENT_ID = EC.EVENT_ID AND EC.EMTC_ID = 'C'), 0)   totCouponAmt
            , NVL((SELECT SUM(NVL(REGEXP_REPLACE(CMNT, '[^0-9]'), 0)) FROM TB_EVENT_COMMENT EC WHERE ER.EVENT_ID = EC.EVENT_ID AND EC.EMTC_ID = 'G'), 0)   totGiftAmt
            , EM.EVENT_TYPE eventType
            , NVL((SELECT COUNT(*) FROM TB_EVENT_COMMENT EC WHERE EC.EVENT_ID = ER.EVENT_ID AND EC.USER_NUM = #userNum# AND TO_CHAR(REGST_DTM,'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')), 0) joinCnt
            , CASE 
				WHEN EM.EVENT_TYPE = '01' 
				THEN(
	               	SELECT
		            	NVL(MAX(ERT.EVENT_CHANCE), 0)
					FROM TB_EVENT_RANDOM_TYPE ERT
		                JOIN (
		                    SELECT 
		                        B.USER_GRADE_ID
		                     FROM TB_USER A, TB_MALL_USER_DETAIL B
		                    WHERE A.USER_NUM = B.USER_NUM
		                      AND B.USER_GRADE_ID IS NOT NULL
		                      AND A.USER_NUM = #userNum#
		                      AND B.MALL_ID = #mallId#
		                ) C ON ERT.EVENT_GUBUN = C.USER_GRADE_ID
					WHERE ERT.EVENT_ID = ER.EVENT_ID
		            AND ERT.EVENT_TYPE = EM.EVENT_TYPE) 
				WHEN EM.EVENT_TYPE = '02' 
				THEN(
             		SELECT 
             			NVL(MAX(ERT.EVENT_CHANCE), 0)
					FROM TB_EVENT_RANDOM_TYPE ERT
					JOIN (
						SELECT 
					   		NVL(SUM(B.ORDER_PRDT_AMT), 0) AMT
						FROM TB_ORDER A
						JOIN TB_ORDER_PRODUCT B ON A.ORDER_NUM = B.ORDER_NUM
						WHERE USER_NUM = #userNum#
						AND TO_CHAR(A.ORDER_DTM,'YYYYMMDD') BETWEEN (SELECT EVENT_START_DT FROM TB_EVENT_MASTER WHERE EVENT_ID = #eventId#) 
							AND (SELECT EVENT_END_DT FROM TB_EVENT_MASTER WHERE EVENT_ID = #eventId#)
						) AA ON AA.AMT BETWEEN ERT.EVENT_GUBUN AND ERT.EVENT_GUBUN2
					WHERE EVENT_ID = ER.EVENT_ID
					AND EVENT_TYPE = EM.EVENT_TYPE)
					ELSE 0
             	END joinChance
          FROM TB_EVENT_RANDOM ER
          JOIN TB_EVENT_MASTER EM ON ER.EVENT_ID = EM.EVENT_ID
         WHERE ER.EVENT_ID = #eventId#
           AND ER.CHANNEL_GBN = #channelGbn#
    </select>
    
    <!-- 
        작성자: 장진용
        작성일: 2017-07-24
        기능: 랜덤(룰렛) 기획전 획득 정보 반환
    -->
    <select id="getEventRandomAttend" parameterClass="kr.co.hottracks.site.model.renewal.event.EventCriteria" resultClass="kr.co.hottracks.site.model.renewal.event.EventRandomAttendExt">
        /* EventSQL.getEventRandomAttend */
        SELECT ERA.EVENT_ID         eventId
             , ERA.GIFT_INSEQ       giftInseq
             , ERA.GIFT_TYPE        giftType
             , ERA.GIFT_AMT         giftAmt
             , ERA.GIFT_NAME        giftName
             , ERA.LIMIT_CNT        limitCnt
             , ERA.LEAVE_CNT        leaveCnt
             , ERA.CPN_ID           cpnId
             , case when SUM(LEAVE_CNT) OVER () > 0 then ERA.LEAVE_CNT/SUM(LEAVE_CNT) OVER () 
                    else 0
                end gainRate
             , ERA.REGST_DTM        regstDtm
             , ERA.REGST_ADMIN_ID   regstAdminId
          FROM TB_EVENT_RANDOM_ATTEND ERA
         WHERE ERA.EVENT_ID = #eventId#
         ORDER BY GIFT_INSEQ
    </select>
    
    <!-- 
        작성자: 장진용
        작성일: 2015-07-22
        기능: 코멘트 좋아요 등록
    -->
    <insert id="insertEventCommentLike" parameterClass="kr.co.hottracks.site.model.common.event.EventComment">
        /* EventSQL.insertEventCommentLike */
        INSERT INTO TB_EVENT_COMMENT_LIKE (EVENT_ID, EVENT_CMNT_SEQ, USER_NUM, REGST_DTM)
                                   VALUES (#eventId#, #sequence#, #userNum#,SYSDATE)
    </insert>
    
    <insert id="saveEventcomment" parameterClass="kr.co.hottracks.site.model.common.event.EventComment">
        /* EventSQL.saveEventcomment */
        INSERT INTO TB_EVENT_COMMENT (EVENT_ID, EVENT_CMNT_SEQ, USER_NUM, CMNT, REGST_DTM, WRTOR_IP, DISP_YN, ENTRY_YN, MALL_ID, PARNT_CMNT_SEQ, EMTC_ID, STEP)
                              VALUES (#eventId#, event_cmnt_seq.nextval, #userNum#, #eventComment#, SYSDATE, #writerIpAddress#, 'Y', #entryYn#, #mallId#, #parntCmntSeq#, #emtcId#, #step#)
    </insert>
    
    <select id="selectMyEnterEventList" parameterClass="kr.co.hottracks.site.model.common.event.EventEnterCriteria" resultClass="kr.co.hottracks.site.model.common.event.EventEnterListData">
        /* EventSQL.selectMyEnterEventList */
        SELECT * 
          FROM (SELECT  A.event_id              eventId
                      , A.event_title           eventTitle
                      , MAX(B.ask_regst_dtm)    regstDtm
                      , A.pwnr_rls_scdl_dt      announcingWinnerDate
                      , C.user_num              userNum
                      , CASE 
                          WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN MAX(A.event_start_dt) AND MAX(A.event_end_dt) THEN 'progress'
                          WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') >= MAX(A.event_end_dt) AND MAX(C.user_num) IS NOT NULL THEN 'win'
                          ELSE 'nextChance' 
                        END eventStatus
                      , MAX(DECODE((SELECT event_id FROM tb_event_win WHERE event_id = A.event_id AND mall_id = #mallId# AND disp_yn = 'Y' AND pwnr_rls_yn = 'Y' AND TO_DATE(pwnr_rls_scdl_dt, 'YYYYMMDD') <![CDATA[<= ]]> sysdate), NULL, 'N', 'Y')) announcementYn
                  FROM  tb_event_master A
                  LEFT JOIN tb_product_qna B ON A.sell_prdt_bcode = B.sell_prdt_bcode AND B.prdt_artcl_gbn = 'C'
                  LEFT OUTER JOIN tb_event_pwnr C ON B.ask_regst_user_num = C.user_num AND A.event_id = C.event_id AND C.mall_id = #mallId#
                      , tb_mall_event D
                 WHERE  A.event_id = D.event_id
                   AND  D.mall_id = #mallId#
                   AND  A.pwnr_rls_yn = 'Y'
                   AND  B.ask_regst_user_num = #userNum#
                   AND  TO_CHAR(B.ask_regst_dtm, 'YYYYMMDD') BETWEEN A.event_start_dt AND A.event_end_dt
                 GROUP  BY A.event_id, A.event_title, A.pwnr_rls_scdl_dt , C.user_num
                 UNION  ALL
                SELECT  A.event_id              eventId
                      , A.event_title           eventTitle
                      , MAX(B.regst_dtm)        regstDtm
                      , A.pwnr_rls_scdl_dt      announcingWinnerDate
                      , C.user_num              userNum
                      , CASE 
                          WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN MAX(A.event_start_dt) AND MAX(A.event_end_dt) THEN 'progress'
                          WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > MAX(A.event_end_dt) AND MAX(C.user_num) IS NOT NULL THEN 'win'
                          ELSE 'nextChance' 
                        END eventStatus
                      , MAX(DECODE((SELECT event_id FROM tb_event_win WHERE event_id = A.event_id AND mall_id = #mallId# AND disp_yn = 'Y' AND pwnr_rls_yn = 'Y' AND TO_DATE(pwnr_rls_scdl_dt, 'YYYYMMDD') <![CDATA[<= ]]> sysdate), NULL, 'N', 'Y')) announcementYn
                 FROM  tb_event_master A
                 LEFT JOIN tb_event_comment B ON A.event_id = B.event_id AND B.mall_id = #mallId#
                 LEFT OUTER JOIN tb_event_pwnr C ON A.event_id = C.event_id AND B.user_num = C.user_num AND C.mall_id = #mallId#
                     , tb_mall_event D
                WHERE  A.event_id = D.event_id
                  AND  D.mall_id = #mallId#
                  AND  A.pwnr_rls_yn = 'Y'
                  AND  B.entry_yn in('Y','P')
                  AND  B.user_num = #userNum#
                GROUP  BY A.event_id, A.event_title, A.pwnr_rls_scdl_dt, C.user_num
               )
         ORDER BY regstDtm DESC
    </select>
    
    <select id="selectMyEnterEventListCount" parameterClass="kr.co.hottracks.site.model.common.event.EventEnterCriteria" resultClass="int">
        /* EventSQL.selectMyEnterEventListCount */
        SELECT COUNT(*)
          FROM (SELECT  A.event_id eventId
                  FROM  tb_event_master A
                  LEFT JOIN tb_product_qna B ON A.sell_prdt_bcode = B.sell_prdt_bcode AND B.prdt_artcl_gbn = 'C'
                  LEFT OUTER JOIN tb_event_pwnr C ON B.ask_regst_user_num = C.user_num AND A.event_id = C.event_id AND C.mall_id = #mallId#
                      , tb_mall_event D
                 WHERE  A.event_id = D.event_id
                   AND  D.mall_id = #mallId#
                   AND  A.pwnr_rls_yn = 'Y'
                   AND  B.ask_regst_user_num = #userNum#
                   AND  TO_CHAR(B.ask_regst_dtm, 'YYYYMMDD') BETWEEN A.event_start_dt AND A.event_end_dt
                   <isEqual property="status" compareValue="progress" prepend="AND">
                        TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.event_start_dt AND A.event_end_dt
                   </isEqual>
                 GROUP  BY A.event_id
                 UNION ALL
                SELECT  A.event_id eventId
                  FROM  tb_event_master A
                  LEFT JOIN tb_event_comment B ON A.event_id = B.event_id AND B.mall_id = #mallId#
                  LEFT OUTER JOIN tb_event_pwnr C ON A.event_id = C.event_id AND B.user_num = C.user_num AND C.mall_id = #mallId#
                      , tb_mall_event D
                 WHERE  A.event_id = D.event_id
                   AND  D.mall_id = #mallId#
                   AND  A.pwnr_rls_yn = 'Y'
                   AND  B.entry_yn in('Y','P')
                   AND  B.user_num = #userNum#
                   <isEqual property="status" compareValue="progress" prepend="AND">
                        TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.event_start_dt AND A.event_end_dt
                   </isEqual>
                 GROUP  BY A.event_id
               )
    </select>
    
    <update id="updateEventFreeGift" parameterClass="kr.co.hottracks.site.model.common.event.EventFreeGift">
        /* EventSQL.updateEventFreeGift */
        UPDATE TB_EVENT_FREE_GIFT
           SET CNSM_COUNT = #consumeCount#,
               FREE_GIFT_COUNT = #freeGiftCount#
         WHERE EVENT_ID = #eventId#
           AND FREE_GIFT_ID = #freeGiftId#
    </update>
    
    <!-- 
        작성자: 장진용
        작성일: 2017-07-24
        기능: 랜덤(룰렛) 기획전 획득 수량 갱신
    -->
    <update id="updateEventRandomAttendCnt" parameterClass="kr.co.hottracks.site.model.renewal.event.EventRandomAttend">
        /* EventSQL.updateEventRandomAttendCnt */
        UPDATE TB_EVENT_RANDOM_ATTEND
           SET LEAVE_CNT = LEAVE_CNT - 1
         WHERE EVENT_ID = #eventId#
           AND GIFT_INSEQ = #giftInseq#
    </update>
    
    <!-- 
        작성자: 장진용
        작성일: 2018-05-09
        기능: 참여형 이벤트 참여 프로시저
     -->
    <parameterMap class="java.util.HashMap" id="mapEventApply">
        <parameter property="mallId" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="eventId" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="userNum" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="wrtorIp" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="resCode" mode="OUT" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="resCont" mode="OUT" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </parameterMap>
    
    <procedure id="updateEventApply" parameterMap="mapEventApply">
        /* EventSQL.updateEventApply */
        { CALL PR_EVENT_APPLY_CHECK(?, ?, ?, ?, ?, ?) }
    </procedure>

    <!-- 단계이벤트 저장전 오늘 참여했는지 저장 -->
    <insert id="insertEventCommentImsi" parameterClass="kr.co.hottracks.site.model.renewal.event.EventCriteria">
        /* EventSQL.insertEventCommentImsi */
        INSERT INTO TB_EVENT_COMMENT_IMSI(EVENT_ID, USER_NUM, REGST_DT)
        VALUES(#eventId#,#userNum#,TO_CHAR(SYSDATE, 'YYYYMMDD'))
    </insert>
    
    <parameterMap class="java.util.HashMap" id="eventCouponDownMap">
        <parameter property="VI_VAR1" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="VI_VAR2" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="VI_VAR3" mode="IN" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="VO_VAR1" mode="OUT" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <parameter property="VO_VAR2" mode="OUT" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </parameterMap>
    
    <procedure id="eventCouponDown" parameterMap="eventCouponDownMap">
        /* EventSQL.updateEventApply */
        { CALL PR_EVENTCOUPON_DOWN(?, ?, ?, ?, ?) }
    </procedure>
    
</sqlMap>