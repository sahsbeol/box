<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="CustomerCenterSQL">
    <typeAlias alias="returnExchangeCriteria" type="kr.co.hottracks.site.model.backoffice.order.ReturnExchangeCriteria"/>
    <typeAlias alias="returnExchangeParam" type="kr.co.hottracks.site.model.backoffice.order.ReturnExchangeParam"/>
    <typeAlias alias="counselGreeting" type="kr.co.hottracks.site.model.backoffice.customerCenter.CounselGreeting"/>
    <typeAlias alias="returnExchangeProductParam" type="kr.co.hottracks.site.model.backoffice.order.ReturnExchangeProductParam"/>
    <typeAlias alias="counselHistory" type="kr.co.hottracks.site.model.backoffice.customerCenter.CounselHistory"/>
    <typeAlias alias="returnExchangeProductParam" type="kr.co.hottracks.site.model.backoffice.order.ReturnExchangeProductParam"/>
    <typeAlias alias="orderDestinationParam" type="kr.co.hottracks.site.model.backoffice.order.OrderDestinationParam"/>
    <typeAlias alias="standardAnswer" type="kr.co.hottracks.site.model.backoffice.customerCenter.StandardAnswer"/>
    <typeAlias alias="standardAnswerCriteria" type="kr.co.hottracks.site.model.backoffice.customerCenter.StandardAnswerCriteria"/>
    <typeAlias alias="orderDetail" type="kr.co.hottracks.site.model.backoffice.distribution.OrderDetail"/>
    <typeAlias alias="returnExchangeCriteria" type="kr.co.hottracks.site.model.backoffice.order.ReturnExchangeCriteria"/>
    <typeAlias alias="returnExchangeParam" type="kr.co.hottracks.site.model.backoffice.order.ReturnExchangeParam"/>
    <typeAlias alias="eventEnterListData" type="kr.co.hottracks.site.model.common.event.EventEnterListData"/>
    <typeAlias alias="orderCriteria" type="kr.co.hottracks.site.model.backoffice.order.OrderCriteria"/>
    <typeAlias alias="orderSimpleInfo" type="kr.co.hottracks.site.model.frontoffice.order.OrderSimpleInfo"/>
    <typeAlias alias="store" type="kr.co.hottracks.site.model.common.help.Store"/>
    <typeAlias alias="userCriteria" type="kr.co.hottracks.site.model.common.UserCriteria"/>
    <typeAlias alias="refundInfo" type="kr.co.hottracks.site.model.backoffice.customerCenter.RefundInfo"/>
    <typeAlias alias="taxBillRequestCriteria" type="kr.co.hottracks.site.model.common.TaxBillRequestCriteria"/>
    <typeAlias alias="taxBillRequestParam" type="kr.co.hottracks.site.model.common.TaxBillRequestParam"/>
    <typeAlias alias="taxBillRequestAmountInfo" type="kr.co.hottracks.site.model.common.TaxBillRequestAmountInfo"/>
    <typeAlias alias="saleEBill" type="kr.co.hottracks.site.model.common.SaleEBill"/>
    <typeAlias alias="itemList" type="kr.co.hottracks.site.model.common.ItemList"/>
    <typeAlias alias="coustomerSmsSendCriteria" type="kr.co.hottracks.site.model.common.CoustomerSmsSendCriteria"/>
    <typeAlias alias="coustomerSmsSendParam" type="kr.co.hottracks.site.model.common.CoustomerSmsSendParam"/>
    <typeAlias alias="smsHistoryParam" type="kr.co.hottracks.site.model.common.SmsHistoryParam"/>
    <typeAlias alias="mailQueueParam" type="kr.co.hottracks.site.model.common.MailQueueParam"/>
    <typeAlias alias="mailQueueCriteria" type="kr.co.hottracks.site.model.common.MailQueueCriteria"/>
    <typeAlias alias="eventCriteria" type="kr.co.hottracks.site.model.common.event.EventCriteria"/>
    <typeAlias alias="smsCriteria" type="kr.co.hottracks.site.model.common.SmsCriteria"/>
    <typeAlias alias="returnExchangeSendMail" type="kr.co.hottracks.site.model.common.ReturnExchangeSendMail"/>
	<typeAlias alias="csGroupWareParam" type="kr.co.hottracks.site.model.backoffice.order.CsGroupWareParam"/>
	<typeAlias alias="payment" type="kr.co.hottracks.site.model.frontoffice.order.Payment"/>
	<typeAlias alias="orderProduct" type="kr.co.hottracks.site.model.backoffice.order.OrderProduct"/>
	<typeAlias alias="orderProductInfo" type="kr.co.hottracks.site.model.backoffice.order.OrderProductInfo"/>
	<typeAlias alias="orderDeliveryRequest" type="kr.co.hottracks.site.model.backoffice.order.OrderDeliveryRequest"/>
	<typeAlias alias="backSearchParam" type="kr.co.hottracks.site.model.backoffice.BackSearchParam"/>

    <sql id="fromListCounsel">
        FROM
            tb_return_exchange_master A
        left outer join
            tb_order B ON (B.order_num = A.order_num)
        left outer join
            tb_return_exchange_product c on (c.rtn_seq = a.rtn_seq)
        left outer join
            tb_order_product d on (d.order_num = c.order_num and d.order_prdt_inseq = c.order_prdt_inseq)
        left outer join
            tb_sell_product e on (e.sell_prdt_bcode = d.sell_prdt_bcode)
        left outer join
            tb_delivery g on (g.order_num = b.order_num)
        left outer join
            tb_delivery h on (h.rtn_seq = a.rtn_seq)
        WHERE
            1=1
        AND
            a.rtn_seq not in (select rtn_seq
                              from tb_return_exchange_master
                              where sos_cnsl_code in ('C066B', 'C066C', 'C066D', 'C066E', 'C066F')
                              and rtn_req_gbn = 'W') <!-- 웹/매장 상담은 포함하지 않는다 -->
        <isEqual property="dateToSearch" compareValue="1">
            <isNotEmpty prepend="AND" property="startDate">
                A.regst_dtm >= TO_DATE(#startDate#, 'yyyymmdd')
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="endDate">
                A.regst_dtm <![CDATA[<]]> TO_DATE(#endDate#, 'yyyymmdd') + 1
            </isNotEmpty>
        </isEqual>
        <isEqual property="dateToSearch" compareValue="2">
            <isNotEmpty prepend="AND" property="startDate">
                A.trsfr_dtm >= TO_DATE(#startDate#, 'yyyymmdd')
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="endDate">
                A.trsfr_dtm <![CDATA[<]]> TO_DATE(#endDate#, 'yyyymmdd') + 1
            </isNotEmpty>
        </isEqual>
        <isEqual property="dateToSearch" compareValue="3">
            <isNotEmpty prepend="AND" property="startDate">
                A.last_mod_dtm >= TO_DATE(#startDate#, 'yyyymmdd') and a.SOS_PROC_GBN = 'E'
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="endDate">
                A.last_mod_dtm <![CDATA[<]]> TO_DATE(#endDate#, 'yyyymmdd') + 1 and a.SOS_PROC_GBN = 'E'
            </isNotEmpty>
        </isEqual>
        <isNotEmpty prepend="AND" property="orderNum">
            A.order_num = #orderNum#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="buyerName">
            upper(B.buyer_name) like '%'||upper(#buyerName#)||'%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="userId">
            a.user_num = (select user_num from tb_user where upper(user_id) like '%'||upper(#userId#)||'%')
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="userNum">
            a.user_num = #userNum#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="managerAdminId">
            a.mngr_admin_id = #managerAdminId#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="productBarcode">
            d.sell_prdt_bcode = #productBarcode#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="sendNo">
            g.send_no = #sendNo#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="phoneNo">
            (REPLACE(a.RCVR_TELNUM, '-', '') = REPLACE(#phoneNo#, '-', '') OR REPLACE(a.RCVR_HDPHN_TELNUM, '-', '') = REPLACE(#phoneNo#, '-', ''))   
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="returnRequestGubun">
            a.rtn_req_gbn = #returnRequestGubun#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="mallId">
            b.mall_id = #mallId#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="sosCounselCode">
            a.sos_cnsl_code = #sosCounselCode#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="sosProcessGubun">
            a.sos_proc_gbn = #sosProcessGubun#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="offerer">
            A.rcvr_name LIKE '%'||#offerer#||'%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="sosCounselType">
            <isEqual property="sosCounselType" compareValue="O">
                A.sos_cnsl_code in ('C0661','C0662','C0663','C0664','C0665','C0666', 'C066G')
            </isEqual>
            <isEqual property="sosCounselType" compareValue="N">
                A.sos_cnsl_code in ('C0667','C0668','C0669','C066A')
            </isEqual>
            <isEqual property="sosCounselType" compareValue="S">
                A.sos_cnsl_code in ('C066B','C066C','C066D','C066E','C066F')
            </isEqual>
        </isNotEmpty>
    </sql>

    <select id="getListCounsel" parameterClass="returnExchangeCriteria" resultClass="returnExchangeParam">
        /*CustomerCenterSQL.getListCounsel*/
        SELECT
            A.regst_dtm                             registDtm
            , A.rtn_seq                             returnSeq
            , A.rcvr_name                           offerer
            , A.order_num                           orderNum
            , A.sos_cnsl_code                       sosCounselCode
            , A.sos_proc_gbn                        sosProcessGubun
            , A.last_mod_dtm                        lastModifyDtm
            , A.mngr_admin_id                       managerAdminId
            , (SELECT admin_name
               FROM tb_admin
               WHERE admin_id = A.mngr_admin_id)    managerAdminName
            , A.rtn_req_gbn                         returnRequestGubun
            , a.cnsl_title                          counselTitle
            , (select user_warn_code
               from tb_mall_user_detail
               where user_num = a.user_num
               and mall_id = a.mall_id)             userWarnCode
            , A.REPLY_ID                            replyId
            , (SELECT ADMIN_NAME
                 FROM TB_ADMIN
                WHERE ADMIN_ID = A.REPLY_ID)        replyName
        <include refid="fromListCounsel"/>
        group by
            A.regst_dtm
            , A.rtn_seq
            , A.rcvr_name
            , A.order_num
            , A.sos_cnsl_code
            , A.sos_proc_gbn
            , A.last_mod_dtm
            , A.mngr_admin_id
            , A.rtn_req_gbn
            , a.cnsl_title
            , a.user_num
            , a.mall_id
            , a.reply_Id
        ORDER BY
            A.rtn_seq DESC
    </select>
    
    <select id="getCountOfListCounsel" parameterClass="returnExchangeCriteria" resultClass="int">
        /*CustomerCenterSQL.getCountOfListCounsel*/
        select count(*)
        from (SELECT
                  A.regst_dtm                           registDtm
                , A.rtn_seq                             returnSeq
                , A.rcvr_name                           offerer
                , A.order_num                           orderNum
                , A.sos_cnsl_code                       sosCounselCode
                , A.sos_proc_gbn                        sosProcessGubun
                , A.last_mod_dtm                        lastModifyDtm
                , A.mngr_admin_id                       managerAdminId
                , (SELECT admin_name
                   FROM tb_admin
                   WHERE admin_id = A.mngr_admin_id)    managerAdminName
                , A.rtn_req_gbn                         returnRequestGubun
                , a.cnsl_title                          counselTitle
              <include refid="fromListCounsel"/>
              group by
                A.regst_dtm
                , A.rtn_seq
                , A.rcvr_name
                , A.order_num
                , A.sos_cnsl_code
                , A.sos_proc_gbn
                , A.last_mod_dtm
                , A.mngr_admin_id
                , A.rtn_req_gbn
                , a.cnsl_title)
        WHERE
            ROWNUM <![CDATA[ < ]]> #topCount# + 1
    </select>
    
    <sql id="fromListCounselFront">
        FROM
            tb_return_exchange_master A
        left outer join
            tb_order B ON (B.order_num = A.order_num)
        left outer join
            tb_return_exchange_product c on (c.rtn_seq = a.rtn_seq)
        left outer join
            tb_order_product d on (d.order_num = c.order_num and d.order_prdt_inseq = c.order_prdt_inseq)
        left outer join
            tb_sell_product e on (e.sell_prdt_bcode = d.sell_prdt_bcode)
        left outer join
            tb_delivery g on (g.order_num = b.order_num)
        left outer join
            tb_delivery h on (h.rtn_seq = a.rtn_seq)
        WHERE
            1=1
        <isEqual property="dateToSearch" compareValue="1">
            <isNotEmpty prepend="AND" property="startDate">
                A.regst_dtm >= TO_DATE(#startDate#, 'yyyymmdd')
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="endDate">
                A.regst_dtm <![CDATA[<]]> TO_DATE(#endDate#, 'yyyymmdd') + 1
            </isNotEmpty>
        </isEqual>
        <isEqual property="dateToSearch" compareValue="2">
            <isNotEmpty prepend="AND" property="startDate">
                A.trsfr_dtm >= TO_DATE(#startDate#, 'yyyymmdd')
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="endDate">
                A.trsfr_dtm <![CDATA[<]]> TO_DATE(#endDate#, 'yyyymmdd') + 1
            </isNotEmpty>
        </isEqual>
        <isEqual property="dateToSearch" compareValue="3">
            <isNotEmpty prepend="AND" property="startDate">
                A.last_mod_dtm >= TO_DATE(#startDate#, 'yyyymmdd') and a.SOS_PROC_GBN = 'E'
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="endDate">
                A.last_mod_dtm <![CDATA[<]]> TO_DATE(#endDate#, 'yyyymmdd') + 1 and a.SOS_PROC_GBN = 'E'
            </isNotEmpty>
        </isEqual>
        <isNotEmpty prepend="AND" property="orderNum">
            A.order_num = #orderNum#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="buyerName">
            upper(B.buyer_name) like '%'||upper(#buyerName#)||'%'
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="userId">
            a.user_num = (select user_num from tb_user where upper(user_id) like '%'||upper(#userId#)||'%')
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="userNum">
            a.user_num = #userNum#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="managerAdminId">
            a.mngr_admin_id = #managerAdminId#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="productBarcode">
            d.sell_prdt_bcode = #productBarcode#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="sendNo">
            g.send_no = #sendNo#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="phoneNo">
            (REPLACE(a.RCVR_TELNUM, '-', '') = REPLACE(#phoneNo#, '-', '') OR REPLACE(a.RCVR_HDPHN_TELNUM, '-', '') = REPLACE(#phoneNo#, '-', ''))   
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="returnRequestGubun">
            a.rtn_req_gbn = #returnRequestGubun#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="mallId">
            b.mall_id = #mallId#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="sosCounselCode">
            a.sos_cnsl_code = #sosCounselCode#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="sosProcessGubun">
            a.sos_proc_gbn = #sosProcessGubun#
        </isNotEmpty>
    </sql>

    <select id="getListCounselFront" parameterClass="returnExchangeCriteria" resultClass="returnExchangeParam">
        /*CustomerCenterSQL.getListCounselFront*/
        SELECT
            A.regst_dtm                             registDtm
            , A.rtn_seq                             returnSeq
            , A.rcvr_name                           offerer
            , A.order_num                           orderNum
            , A.sos_cnsl_code                       sosCounselCode
            , A.sos_proc_gbn                        sosProcessGubun
            , A.last_mod_dtm                        lastModifyDtm
            , A.mngr_admin_id                       managerAdminId
            , (SELECT admin_name
               FROM tb_admin
               WHERE admin_id = A.mngr_admin_id)    managerAdminName
            , A.rtn_req_gbn                         returnRequestGubun
            , a.cnsl_title                          counselTitle
            , (select user_warn_code
               from tb_mall_user_detail
               where user_num = a.user_num
               and mall_id = a.mall_id)             userWarnCode
        <include refid="fromListCounselFront"/>
        group by
            A.regst_dtm
            , A.rtn_seq
            , A.rcvr_name
            , A.order_num
            , A.sos_cnsl_code
            , A.sos_proc_gbn
            , A.last_mod_dtm
            , A.mngr_admin_id
            , A.rtn_req_gbn
            , a.cnsl_title
            , a.user_num
            , a.mall_id
        ORDER BY
            A.rtn_seq DESC
    </select>
    
    <select id="getCountOfListCounselFront" parameterClass="returnExchangeCriteria" resultClass="int">
        /*CustomerCenterSQL.getCountOfListCounselFront*/
        select count(*)
        from (SELECT
                  A.regst_dtm                           registDtm
                , A.rtn_seq                             returnSeq
                , A.rcvr_name                           offerer
                , A.order_num                           orderNum
                , A.sos_cnsl_code                       sosCounselCode
                , A.sos_proc_gbn                        sosProcessGubun
                , A.last_mod_dtm                        lastModifyDtm
                , A.mngr_admin_id                       managerAdminId
                , (SELECT admin_name
                   FROM tb_admin
                   WHERE admin_id = A.mngr_admin_id)    managerAdminName
                , A.rtn_req_gbn                         returnRequestGubun
                , a.cnsl_title                          counselTitle
              <include refid="fromListCounsel"/>
              group by
                A.regst_dtm
                , A.rtn_seq
                , A.rcvr_name
                , A.order_num
                , A.sos_cnsl_code
                , A.sos_proc_gbn
                , A.last_mod_dtm
                , A.mngr_admin_id
                , A.rtn_req_gbn
                , a.cnsl_title)
        WHERE
            ROWNUM <![CDATA[ < ]]> #topCount# + 1
    </select>
    
     <select id="getCounselGreeting" parameterClass="counselGreeting" resultClass="counselGreeting">
        /*CustomerCenterSQL.getCounselGreeting*/
        SELECT id      id
             , intrd   introduction
             , ftr     footer
          FROM tb_counsel_greeting
         where REGID = #regId#
    </select>
    
    <delete id="deleteCounselGreeting" parameterClass="counselGreeting">
        /*CustomerCenterSQL.deleteCounselGreeting*/
        DELETE FROM tb_counsel_greeting
              where REGID = #regId#
    </delete>
    
    <insert id="createCounselGreeting" parameterClass="counselGreeting">
        /*CustomerCenterSQL.createCounselGreeting*/
        INSERT INTO tb_counsel_greeting
        (
              id
            , intrd
            , ftr
            , REGID
            , REGDT
        )
        VALUES
        (
            #id#
            , #introduction#
            , #footer#
            , #regId#
            , sysdate
        )
    </insert>
    
    <insert id="createCounsel" parameterClass="returnExchangeParam">
        <selectKey keyProperty="returnSeq" resultClass="int" type="pre">
            SELECT rtn_seq.NEXTVAL FROM DUAL
        </selectKey>
        /*CustomerCenterSQL.createCounsel*/
        INSERT INTO
            tb_return_exchange_master
        (
            RTN_SEQ                                                                                                                                                                                        
            , RTN_REQ_GBN                                                                                                                                                                                   
            , ORDER_NUM                                                                                                                                                                                  
            , CNSL_GBN_CODE                                                                                                                                                                                   
            , RTN_STATUS_CODE                                                                                                                                                                                   
            , REGST_DTM                                                                                                                                                                                          
            , RCVR_NAME                                                                                                                                                                                  
            , RCVR_TELNUM
            , rcvr_hdphn_telnum
            , rtn_exchg_rns_code
            , note
            , cnsl_admin_id
            , user_num
            , mall_id
            , sos_cnsl_code
            , cnsl_title
            , cnsl_cont
            , recv_email_addr
            , email_recv_yn
            , image_url
            , rpmnt_acnt_num
            , sos_proc_gbn
            , mngr_admin_id
            , last_mod_dtm
            , bank_code
            , acnt_hldr_name
            , sos_cnsl_gbn
            , store_id
            , wabb_yn
        )
        VALUES
        (
            #returnSeq#
            , #returnRequestGubun#
            , #orderNum#
            , #counselGubunCode#
            , #returnStatusCode#
            , SYSDATE
            , #offerer#
            , #offerTelNumber#
            , #offerHandphoneNumber#
            , #returnExchangeResonCode#
            , #note#
            , #counselAdminId#
            , #userNum#
            , #mallId#
            , #sosCounselCode#
            , #counselTitle#
            , #counselContent#
            , #offerEmailAddress#
            , #emailReceiveYn#
            , #imageUrl#
            , #repaymentAccountNum#
            , #sosProcessGubun#
            , #managerAdminId#
            , SYSDATE
            , #bankCode#
            , #accountHolderName#
            , #sosCounselGubun#
            , #storeId#
            , #wabbYn#
        )
    </insert>
    
    <insert id="createCounselProduct" parameterClass="returnExchangeProductParam">
        <selectKey keyProperty="returnInseq" resultClass="string" type="pre">
            SELECT
                LPAD(NVL(MAX(RTN_INSEQ) + 1, 1), 2, '0')
            FROM
                tb_return_exchange_product
            WHERE
                rtn_seq = #returnSeq#
        </selectKey>
        /*CustomerCenterSQL.createCounselProduct*/
        INSERT INTO
            tb_return_exchange_product
        (
            RTN_SEQ                                                                                                                                                                                        
            , RTN_INSEQ                                                                                                                                                                                   
            , ORDER_NUM                                                                                                                                                                                  
            , ORDER_PRDT_INSEQ                                                                                                                                                                                   
            , RTN_COUNT
        )
        VALUES
        (
            #returnSeq#
            , #returnInseq#
            , #orderNum#
            , #orderProductInseq#
            , #returnCount#
        )
    </insert>
    
    <insert id="createReturnExchangeHistory" parameterClass="returnExchangeParam">
        <selectKey keyProperty="returnHistorySeq" resultClass="int" type="pre">
            SELECT NVL(MAX(RTN_HIST_SEQ), '0') + 1 FROM tb_return_exchange_history
        </selectKey>
        /*CustomerCenterSQL.createReturnExchangeHistory*/
        INSERT INTO
            tb_return_exchange_history
        (
            RTN_HIST_SEQ                                                                                                                                                                                        
            , RTN_REQ_GBN                                                                                                                                                                                   
            , ORDER_NUM                                                                                                                                                                                  
            , CNSL_GBN_CODE                                                                                                                                                                                   
            , RTN_STATUS_CODE                                                                                                                                                                                   
            , REGST_DTM                                                                                                                                                                                          
            , RCVR_NAME                                                                                                                                                                                  
            , RCVR_TELNUM
            , RCVR_HDPHN_TELNUM                                                                                                                                                                                  
            , RTN_SEQ                                                                                                                                                                                        
            , MOD_DTM                                                                                                                                                                                          
            , MOD_ADMIN_ID                                                                                                                                                                                  
            , NOTE                                                                                                                                                                                
            , CNSL_ADMIN_ID                                                                                                                                                                                  
            , RTN_EXCHG_RNS_CODE
            , USER_NUM
            , MALL_ID
            , SOS_CNSL_CODE
            , CNSL_TITLE
            , CNSL_CONT
            , RECV_EMAIL_ADDR
            , EMAIL_RECV_YN
            , IMAGE_URL
            , RPMNT_ACNT_NUM
            , SOS_PROC_GBN
            , MNGR_ADMIN_ID
            , LAST_MOD_DTM
            , BANK_CODE
            , ACNT_HLDR_NAME
        )
        VALUES
        (
         #returnHistorySeq#
         , #returnRequestGubun#
         , #orderNum#
         , #counselGubunCode#
         , #returnStatusCode#
         , SYSDATE
         , #offerer#
         , #offerTelNumber#
         , #offerHandphoneNumber#
         , #returnSeq#
         , SYSDATE
         , #modifyAdminId#
         , #note#
         , #counselAdminId#
         , #returnExchangeResonCode#
         , #userNum#
         , #mallId#
         , #sosCounselCode#
         , #counselTitle#
         , #counselContent#
         , #offerEmailAddress#
         , #emailReceiveYn#
         , #imageUrl#
         , #repaymentAccountNum#
         , #sosProcessGubun#
         , #managerAdminId#
         , #lastModifyDtm#
         , #bankCode#
         , #accountHolderName#
        )
    </insert>
    
    <insert id="createCounselHistory" parameterClass="counselHistory">
        <selectKey keyProperty="counselHistorySeq" resultClass="int" type="pre">
            SELECT NVL(MAX(CNSL_HIST_SEQ), '0') + 1 FROM tb_counsel_history
        </selectKey>
        /*CustomerCenterSQL.createCounselHistory*/
        INSERT INTO
            tb_counsel_history
        (
            rtn_seq
            , cnsl_hist_seq
            , cont
            , regst_dtm
            , write_admin_id
        )
        VALUES
        (
            #returnSeq#
            , #counselHistorySeq#
            , #content#
            , SYSDATE
            , #writeAdminId#
        )
    </insert>
    
    <select id="getCounselByReturnSeq" parameterClass="string" resultClass="returnExchangeParam">
        /*CustomerCenterSQL.getCounselByReturnSeq*/
        SELECT
            A.rtn_seq                   returnSeq
            , A.rtn_req_gbn             returnRequestGubun
            , A.order_num               orderNum
            , A.cnsl_gbn_code           counselGubunCode
            , A.rtn_status_code         returnStatusCode
            , A.regst_dtm               registDtm
            , A.rcvr_name               offerer
            , A.rcvr_telnum             offerTelNumber
            , A.rcvr_hdphn_telnum       offerHandphoneNumber
            , A.rtn_exchg_rns_code      returnExchangeResonCode
            , A.note                    note
            , A.cnsl_admin_id           counselAdminId
            , (SELECT admin_name
               FROM tb_admin
               WHERE admin_id = A.cnsl_admin_id) counselAdminName
            , A.user_num                userNum
            , A.mall_id                 mallId
            , A.sos_cnsl_code           sosCounselCode
            , A.cnsl_title              counselTitle
            , A.cnsl_cont               counselContent
            , A.recv_email_addr         offerEmailAddress
            , A.email_recv_yn           emailReceiveYn
            , A.image_url               imageUrl
            , A.rpmnt_acnt_num          repaymentAccountNum
            , A.sos_proc_gbn            sosProcessGubun
            , A.mngr_admin_id           managerAdminId
            , A.last_mod_dtm            lastModifyDtm
            , A.bank_code               bankCode
            , A.acnt_hldr_name          accountHolderName
            , A.reply_cont              replyContent
            , B.buyer_name              buyerName
            , B.buyer_tel_num           buyerTelNum
            , B.buyer_hdphn_num         buyerHandPhoneNum
            , b.mall_id                 orderMallId
            , c.dlvy_id                 deliveryId
            , c.dlvy_status_code        deliveryStatusCode
            , c.tcb_id                  tacbaeId
            , c.send_no                 sendNo
            , (select user_id
               from tb_user
               where user_num = a.user_num) userId
           , (select user_warn_code
               from tb_mall_user_detail
               where user_num = a.user_num
               and mall_id = a.mall_id) userWarnCode
        FROM
            tb_return_exchange_master A
        left outer JOIN
            tb_order B ON (B.order_num = A.order_num)
        left outer join
            tb_delivery c on (c.rtn_seq = a.rtn_seq)
        WHERE
            A.rtn_seq = #returnSeq#
    </select>
    
    <select id="getCounselReturnProductAmtByReturnSeq" parameterClass="string" resultClass="orderProduct">
        WITH v_temp AS (
            SELECT  E.order_num orderNum
                  , E.order_prdt_inseq productInnerSequence
                  , (E.order_count - FC_GET_ORDER_PRDT_CANC_COUNT(E.order_num, E.order_prdt_inseq))  orderCount
                  , C.dlvy_count cancelCount
                  , CASE
                      WHEN E.count_cpn_yn = 'Y' THEN E.cpn_dscnt_amt * C.dlvy_count
                      ELSE DECODE((E.order_count - FC_GET_ORDER_PRDT_CANC_COUNT(E.order_num, E.order_prdt_inseq) - C.dlvy_count), 0, E.cpn_dscnt_amt, 0)
                    END couponPrice
                  , E.sngl_prdt_sell_price sellPrice
              FROM  tb_return_exchange_master A
                  , tb_delivery B
                  , tb_order_delivery_product C
                  , tb_order_product E
             WHERE  A.rtn_seq = B.rtn_seq
               AND  A.order_num = B.order_num
               AND  B.dlvy_id = C.dlvy_id
               AND  C.order_num = E.order_num
               AND  C.order_prdt_inseq = E.order_prdt_inseq
               AND  A.rtn_seq = #returnSeq#
               AND  B.dlvy_gbn_code != 'C0131'
               AND  C.order_dlvy_prdt_stat_code='C0234'
        )
        SELECT  NVL(SUM(A.cancelCount * A.sellPrice), 0) sellProductPriceSum
              , NVL(SUM(A.couponPrice),0) couponPrice
          FROM  v_temp A
    </select>
    
    <select id="getListCounselProductByReturnSeq" parameterClass="string" resultClass="returnExchangeProductParam">
        /*CustomerCenterSQL.getListCounselProductByReturnSeq*/
        SELECT
            A.RTN_SEQ               returnSeq
            , A.RTN_INSEQ           returnInseq
            , A.ORDER_NUM           orderNum
            , A.ORDER_PRDT_INSEQ    orderProductInseq
            , A.RTN_COUNT           returnCount
            , B.sell_prdt_bcode     productBarcode
            , b.order_count         orderCount
            , b.canc_count          cancelCount
            , C.prdt_name           productName
            , (SELECT vndr_name
               FROM tb_vendor vd
               JOIN tb_vendor_contract con ON (con.vndr_id = vd.vndr_id)
               WHERE con.vndr_cntrt_id = B.vndr_cntrt_id) vendorName
            , (SELECT vndr_name
               FROM tb_vendor WHERE vndr_id = B.dlvy_vndr_id) deliveryVendorName
            , nvl(fc_get_sel_opt_in_single_line(b.order_num, b.order_prdt_inseq), ' ') optionString
            , E.dlvy_count          deliveryCount
            , (select code_name from tb_code where code = b.order_prdt_stat_code) orderProductStatusCodeName
            , e.order_dlvy_prdt_stat_code   deliveryProductStatusCode
            , (select code_name from tb_code where code = e.order_dlvy_prdt_stat_code) deliveryProductStatusCodeName
            , e.order_dlvy_prdt_ship_stat_code  shippingStatusCode
            , (select code_name from tb_code where code = e.order_dlvy_prdt_ship_stat_code) shippingStatusCodeName
            , f.dlvy_vndr_id        deliveryVendorId
            , f.dlvy_id             deliveryId
        FROM
            tb_return_exchange_product A
        JOIN
            tb_order_product B ON (B.order_num = A.order_num AND B.order_prdt_inseq = A.order_prdt_inseq)
        JOIN
            tb_sell_product C ON (C.sell_prdt_bcode = B.sell_prdt_bcode)
        JOIN
            tb_order D ON (D.order_num = B.order_num)
        JOIN
            tb_order_delivery_product E ON (E.order_num = B.order_num AND E.order_prdt_inseq = B.order_prdt_inseq)
        JOIN
            tb_delivery F ON (F.dlvy_id = E.dlvy_id AND F.dlvy_vndr_id = B.dlvy_vndr_id and f.dlvy_gbn_code = 'C0131')
        WHERE
            A.rtn_seq = #returnSeq#
    </select>
    
    <select id="getListOrderDestinationHistoryByOrderNum" parameterClass="string" resultClass="orderDestinationParam">
        /*CustomerCenterSQL.getListOrderDestinationHistoryByOrderNum*/
        SELECT
            order_num               orderNum
            , order_dest_inseq      innerSequence
            , order_dest_hist_seq   ordDestHistorySeq
            , rcvr_name             receiverName
            , rcvr_hdphn_num        receiverHandPhone
            , rcvr_tel_num          receiverTelePhone
            , rcvr_post_num         receiverPostNum
            , rcvr_addr             receiverAddress
            , rcvr_dtl_addr         receiverDetailAddress
            , wish_dlvy_dt          wishDeliveryDate
            , rcvr_email_addr       receiverEmail
            , dlvy_msg              deliveryMessage
            , gift_msg              giftMessage
            , order_msg             orderMessage
            , gift_msg_print_yn     giftMessagePrintYn
            , mod_dtm               modifyDatetime
            , to_char(mod_dtm, 'yyyy.mm.dd.hh24.mi.ss') modifyDate
            , mod_admin_id          modifyAdminId
            , (SELECT admin_name FROM tb_admin WHERE admin_id = A.mod_admin_id) modifyAdminName
        FROM
            tb_order_destination_history A
        WHERE
            order_num = #orderNum#
        ORDER BY
            mod_dtm DESC
    </select>
    
    <select id="getListReturnExchangeHistoryByReturnSeq" parameterClass="int" resultClass="returnExchangeParam">
        /*CustomerCenterSQL.getListReturnExchangeHistoryByReturnSeq*/
        SELECT
            RTN_HIST_SEQ            returnHistorySeq
            , RTN_REQ_GBN           returnRequestGubun
            , ORDER_NUM             orderNum
            , CNSL_GBN_CODE         counselGubunCode
            , RTN_STATUS_CODE       returnStatusCode
            , REGST_DTM             registDtm
            , RCVR_NAME             receiverName
            , RCVR_TELNUM           receiverTelNum
            , RCVR_HDPHN_TELNUM     receiverHandPhoneTelNum
            , RTN_SEQ               returnSeq
            , MOD_DTM               modifyDtm
            , MOD_ADMIN_ID          modifyAdminId
            , NOTE                  note
            , CNSL_ADMIN_ID         counselAdminId
            , RTN_EXCHG_RNS_CODE    returnExchangeResonCode
            , (SELECT admin_name
               FROM tb_admin
               WHERE admin_id = A.mod_admin_id) modifyAdminName

        FROM
            tb_return_exchange_history A
        WHERE
            rtn_seq = #returnSeq#
        ORDER BY
            mod_dtm DESC
    </select>
    
    <select id="getListCounselHistoryByReturnSeq" parameterClass="string" resultClass="counselHistory">
        /*CustomerCenterSQL.getListCounselHistoryByReturnSeq*/
        SELECT
            rtn_seq             returnSeq
            , cnsl_hist_seq     counselHistorySeq
            , cont              content
            , regst_dtm         registDtm
            , write_admin_id    writeAdminId
            , (SELECT admin_name
               FROM tb_admin
               WHERE admin_id = A.write_admin_id) writeAdminName
        FROM
            tb_counsel_history A
        WHERE
            rtn_seq = #returnSeq#
        ORDER BY
            regst_dtm
    </select>
    
    <sql id="whereListStandardAnswer">
        <isNotEmpty prepend="AND" property="sosCounselCode">
            sos_cnsl_code = #sosCounselCode#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="title" removeFirstPrepend="true">
            upper(title) like '%'||upper(#title#)||'%'
        </isNotEmpty>
    </sql>
    
    <select id="getListStandardAnswer" parameterClass="standardAnswerCriteria" resultClass="standardAnswer">
        /*CustomerCenterSQL.getListStandardAnswer*/
        SELECT
            std_aswr_seq        standardAnswerSeq
            , title             title
            , cont              content
            , regst_dtm         registDtm
            , regst_admin_id    registAdminId
            , sos_cnsl_code     sosCounselCode
        FROM
            tb_standard_answer
        WHERE
            1=1
        <include refid="whereListStandardAnswer"/>
        ORDER BY
            std_aswr_seq DESC
    </select>
    
    <select id="getCountOfListStandardAnswer" parameterClass="standardAnswerCriteria" resultClass="int">
        /*CustomerCenterSQL.getCountOfListStandardAnswer*/
        SELECT
            COUNT(*)
        FROM
            tb_standard_answer
        WHERE
            1=1
        <include refid="whereListStandardAnswer"/>
        AND
            ROWNUM <![CDATA[ < ]]> #topCount# + 1
    </select>
    
    <insert id="createStandardAnswer" parameterClass="standardAnswer">
        <selectKey keyProperty="standardAnswerSeq" resultClass="int" type="pre">
            SELECT NVL(MAX(STD_ASWR_SEQ), '0') + 1 FROM tb_standard_answer
        </selectKey>
        /*CustomerCenterSQL.createStandardAnswer*/
        INSERT INTO
            tb_standard_answer
        (
            STD_ASWR_SEQ
            , TITLE
            , CONT
            , REGST_DTM
            , REGST_ADMIN_ID
            , SOS_CNSL_CODE
        )
        VALUES
        (
            #standardAnswerSeq#
            , #title#
            , #content#
            , SYSDATE
            , #registAdminId#
            , #sosCounselCode#
        )
    </insert>
    
    <update id="updateStandardAnswer" parameterClass="standardAnswer">
        UPDATE
            tb_standard_answer
        SET
            TITLE       =       #title#         
            , CONT      =       #content#       
            , REGST_ADMIN_ID =  #registAdminId# 
            , SOS_CNSL_CODE  =  #sosCounselCode#
        WHERE
            STD_ASWR_SEQ = #standardAnswerSeq# 
    </update>
    
    <select id="getStandardAnswerBySeq" parameterClass="int" resultClass="standardAnswer">
        /*CustomerCenterSQL.getStandardAnswer*/
        SELECT
            STD_ASWR_SEQ        standardAnswerSeq
            , TITLE             title         
            , CONT              content       
            , REGST_DTM         registDtm     
            , REGST_ADMIN_ID    registAdminId
            , SOS_CNSL_CODE     sosCounselCode
        FROM
            tb_standard_answer
        WHERE
            STD_ASWR_SEQ = #standardAnswerSeq#
    </select>
    
    <select id="getListOrderByUserNum" parameterClass="string" resultClass="orderDetail">
        /*CustomerCenterSQL.getListOrderByUserNum*/
        SELECT
            a.user_num          userNum
            , a.order_dtm       orderDate
            , a.order_num       orderNum
            , a.buyer_name      buyerName
            , a.buyer_tel_num   buyerTelNumber
            , a.buyer_hdphn_num buyerHandphoneNumber
            , b.rcvr_name       receiverName
            , b.rcvr_addr       receiverAddress
            , b.rcvr_dtl_addr   receiverDetailAddress
        FROM
            tb_order a
        JOIN
            tb_order_destination b on (b.order_num = a.order_num)
        WHERE
            a.user_num = #userNum#
        ORDER BY
            a.order_dtm DESC
    </select>
    
    <select id="getListCounselByUserNum" parameterClass="returnExchangeCriteria" resultClass="returnExchangeParam">
        /*CustomerCenterSQL.getListCounselByUserNum*/
        SELECT
            user_num            userNum
            , regst_dtm         registDtm
            , rtn_seq           returnSeq
            , order_num         orderNum
            , rcvr_name         offerer
            , sos_cnsl_code     sosCounselCode
            , sos_cnsl_gbn      sosCounselGubun
            , rtn_status_code   returnStatusCode
            , last_mod_dtm      lastModifyDtm
        FROM
            tb_return_exchange_master
        WHERE
            user_num = #userNum#
        AND
            rtn_req_gbn = #returnRequestGubun#
    </select>
    
    <select id="getListReturnExchangeByUserNum" parameterClass="string" resultClass="returnExchangeParam">
        /*CustomerCenterSQL.getListReturnExchangeByUserNum*/
        SELECT
            user_num            userNum
            , regst_dtm         registDtm
            , rtn_seq           returnSeq
            , order_num         orderNum
            , rcvr_name         offerer
            , cnsl_gbn_code     counselGubunCode
            , rtn_status_code   returnStatusCode
            , note
            , last_mod_dtm      lastModifyDtm
        FROM
            tb_return_exchange_master
        WHERE
            user_num = #userNum#
        AND
            CNSL_GBN_CODE in ('C0265', 'C0266')
        ORDER BY
            regst_dtm desc
    </select>
    
    
    <select id="getListOrderByUser" parameterClass="orderCriteria" resultClass="orderSimpleInfo">
        /* CustomerCenterSQL.getListOrderByUser */
        SELECT A.ORDER_DTM          orderDatetime
             , A.ORDER_NUM          orderNum
             , B.DLVY_ID            deliveryId
             , (SELECT V.VNDR_NAME FROM TB_VENDOR V WHERE V.VNDR_ID = B.DLVY_VNDR_ID)                       dlvyVndrName
             , (SELECT SP.PRDT_NAME FROM TB_SELL_PRODUCT SP WHERE SP.SELL_PRDT_BCODE = op.sell_prdt_bcode)  prdtName
             , (SELECT SP.SPEC_NAME FROM TB_SELL_PRODUCT SP WHERE SP.SELL_PRDT_BCODE = op.sell_prdt_bcode)  specName
             , (SELECT COUNT(*)
                  FROM TB_ORDER_DELIVERY_PRODUCT ODP
                 WHERE ODP.DLVY_ID = B.DLVY_ID)                                                             prdtClassCount
             , B.DLVY_STATUS_CODE   dlvyStatusCode
             , (SELECT SUM (CASE WHEN OP.COUNT_CPN_YN = 'Y'
                                 THEN SUM((OP.SNGL_PRDT_SELL_PRICE - OP.CPN_DSCNT_AMT) * (OP.ORDER_COUNT - OP.CANC_COUNT) + OP.OPTN_PRICE_SUM)
                                 ELSE SUM(OP.SNGL_PRDT_SELL_PRICE * (OP.ORDER_COUNT - OP.CANC_COUNT) + OP.OPTN_PRICE_SUM - OP.CPN_DSCNT_AMT)
                             END)
                  FROM TB_DELIVERY DL
                  JOIN TB_ORDER_DELIVERY_PRODUCT ODP ON (ODP.DLVY_ID = DL.DLVY_ID)
                  JOIN TB_ORDER_PRODUCT OP ON (OP.ORDER_NUM = ODP.ORDER_NUM AND OP.ORDER_PRDT_INSEQ = ODP.ORDER_PRDT_INSEQ AND OP.DLVY_VNDR_ID = DL.DLVY_VNDR_ID)
                 WHERE DL.DLVY_ID = B.DLVY_ID
                 GROUP BY OP.COUNT_CPN_YN, OP.SNGL_PRDT_SELL_PRICE, OP.CPN_DSCNT_AMT, OP.ORDER_COUNT, OP.CANC_COUNT, OP.OPTN_PRICE_SUM)     orderAmt
            , (SELECT ORDER_DLVY_AMT
                 FROM TB_ORDER_DELIVERY_REQUEST
                WHERE ORDER_NUM = B.ORDER_NUM
                  AND ORDER_DEST_INSEQ = B.ORDER_DEST_INSEQ
                  AND DLVY_VNDR_ID = B.DLVY_VNDR_ID)                                                        deliveryAmt
        FROM TB_ORDER A
        JOIN TB_ORDER_PRODUCT OP ON OP.ORDER_NUM = A.ORDER_NUM
        JOIN TB_ORDER_DELIVERY_PRODUCT ODP ON OP.ORDER_NUM = ODP.ORDER_NUM AND OP.ORDER_PRDT_INSEQ = ODP.ORDER_PRDT_INSEQ
        JOIN TB_DELIVERY B ON ODP.DLVY_ID = B.DLVY_ID AND OP.DLVY_VNDR_ID = B.DLVY_VNDR_ID AND B.DLVY_GBN_CODE = 'C0131'
       WHERE 1 = 1
         AND A.ORDER_DTM > ADD_MONTHS(SYSDATE, -6)
        <isNotEmpty property="userNum">
            AND A.USER_NUM = #userNum#
        </isNotEmpty>
        <isEmpty property="userNum">
            AND A.ORDER_NUM = #orderNo# AND A.PASSWD = #password#
        </isEmpty>
        ORDER BY ORDER_DTM DESC
    </select>
    
    <select id="getCountListOrderByUser" parameterClass="orderCriteria" resultClass="int">
        /*CustomerCenterSQL.getCountListOrderByUser*/
        SELECT COUNT(*) 
        FROM TB_ORDER A
        JOIN TB_ORDER_PRODUCT OP ON OP.ORDER_NUM = A.ORDER_NUM
        JOIN TB_ORDER_DELIVERY_PRODUCT ODP ON OP.ORDER_NUM = ODP.ORDER_NUM AND OP.ORDER_PRDT_INSEQ = ODP.ORDER_PRDT_INSEQ
        JOIN TB_DELIVERY B ON ODP.DLVY_ID = B.DLVY_ID AND OP.DLVY_VNDR_ID = B.DLVY_VNDR_ID AND B.DLVY_GBN_CODE = 'C0131'
       WHERE 1 = 1
         AND A.ORDER_DTM > ADD_MONTHS(SYSDATE, -6)
         AND ROWNUM <![CDATA[ < ]]> #topCount# + 1
         <isNotEmpty property="userNum">
             AND A.USER_NUM = #userNum#
         </isNotEmpty>
         <isEmpty property="userNum">
             AND A.ORDER_NUM = #orderNo# AND A.PASSWD = #password#
         </isEmpty>
    </select>
    
    <select id="getListStore" resultClass="store">
        /*CustomerCenterSQL.getListStore*/
        SELECT
            store_id        storeId
            , store_name    storeName
            , regst_dtm     registDtm
            , use_yn        useYn
        FROM
            tb_store
        where
            use_yn = 'Y'
    </select>
    
    <delete id="deleteListCounselProductByReturnSeq" parameterClass="string">
        /*CustomerCenterSQL.deleteListCounselProductByReturnSeq*/
        DELETE FROM
            tb_return_exchange_product
        WHERE
            rtn_seq = #returnSeq#
    </delete>
    
    <delete id="deleteCounselByReturnSeq" parameterClass="string">
        /*CustomerCenterSQL.deleteCounselByReturnSeq*/
        DELETE FROM
            tb_return_exchange_master
        WHERE
            rtn_seq = #returnSeq#
    </delete>
    
    <update id="updateUserWarnCode" parameterClass="userCriteria">
        /*CustomerCenterSQL.updateUserWarnCode*/
        UPDATE
            tb_mall_user_detail
        SET
            user_warn_code = #userWarnCode#
        WHERE
            user_num = #userNum#
        and
            mall_id = #mallId#
    </update>
    
    <select id="getListRefundInfo" parameterClass="returnExchangeParam" resultClass="refundInfo">
        /*CustomerCenter.SQL.getListRefundInfo*/
        SELECT b.order_num              orderNum
             , b.order_prdt_inseq     orderProductInseq
             , b.sngl_prdt_sell_price singleProductSellPrice
             , b.optn_price_sum       optionPriceSum
             , b.cpn_dscnt_amt        couponDiscountAmount
             , b.count_cpn_yn         countCouponYn
             , b.order_count          orderCount
             ,(select nvl(sum(canc_count), 0)
                 from tb_order_cancel_product
                where order_num = b.order_num and order_prdt_inseq = b.order_prdt_inseq) cancelCount
             , (select order_dlvy_amt + order_dlvy_chng_amt - CPN_DSCNT_AMT
                  from tb_order_delivery_request
                 where order_num = a.order_num
                   and dlvy_vndr_id = b.dlvy_vndr_id) deliveryAmount
             , (select nvl(sum(C.order_count),0) from tb_order_product C where B.order_num = C.ORDER_NUM and B.DLVY_VNDR_ID = C.DLVY_VNDR_ID) totcnt
             , (select nvl(sum(D.CANC_COUNT),0)
		          from tb_order_product C
		             , tb_order_cancel_product D
		         where C.order_num = B.order_num
		           and C.DLVY_VNDR_ID = B.DLVY_VNDR_ID
		           and C.ORDER_NUM = D.ORDER_NUM
		           and C.ORDER_PRDT_INSEQ = D.ORDER_PRDT_INSEQ) totCancleCnt
          FROM tb_order a
          JOIN tb_order_product b ON (b.order_num = a.order_num)
         WHERE b.order_num = #orderNum#
           AND b.order_prdt_inseq in ($orderProductInseq$)
    </select>
    
    <update id="updateCounselReply" parameterClass="returnExchangeParam">
        /*CustomerCenterSQL.updateCounselReply*/
        UPDATE
            tb_return_exchange_master
        SET
            sos_proc_gbn = #sosProcessGubun#
            , reply_cont = #replyContent#
            , REPLY_ID = #replyId#
        WHERE
            rtn_seq = #returnSeq#
    </update>
    
    <select id="selectTxinRequestList" parameterClass="taxBillRequestCriteria" resultClass="taxBillRequestParam">
        WITH v_temp AS (
            SELECT  A.tax_bill_seq
                  , MAX(B.order_user_id) userId
              FROM  tb_tax_bill_request_order A
                  , tb_order B
             WHERE  A.order_num = B.order_num
               <isNotEmpty prepend="AND" property="orderNum">
                    A.order_num = #orderNum#
               </isNotEmpty>
               <isNotEmpty prepend="AND" property="userId">
                    B.order_user_id = #userId#
               </isNotEmpty> 
             GROUP BY A.tax_bill_seq
        )
        SELECT  B.tax_bill_seq taxBillSeq
              , B.biz_reg_num bizRegNum
              , B.vndr_name vndrName
              , B.biz_type_info bizTypeInfo
              , B.vndr_addr vndrAddr
              , B.mngr_name mngrName
              , B.email_addr emailAddr
              , B.regst_dtm regstDtm
              , B.biz_kind_info bizKindInfo
              , B.sscbr_name sscbrName
              , B.sscbr_tel_num sscbrTelNum
              , B.req_dtm reqDtm
              , B.issue_dtm issuedtm
              , B.issue_yn issueYn
              , B.issue_mngr_admin_id issueMngrAdminId
              , A.userId
              , C.admin_name adminName
          FROM  v_temp A
              , tb_tax_bill_request B
              , tb_admin C
         WHERE  A.tax_bill_seq = B.tax_bill_seq
           AND  B.issue_mngr_admin_id = C.admin_id(+)
           <isNotEmpty prepend="AND" property="reqDtmStartDate" >
                B.req_dtm >= TO_DATE(#reqDtmStartDate#||'000000', 'yyyymmddhh24miss')
           </isNotEmpty>
           <isNotEmpty prepend="AND" property="reqDtmEndDate">
                B.req_dtm <![CDATA[<=]]> TO_DATE(#reqDtmEndDate#||'235959', 'yyyymmddhh24miss')
           </isNotEmpty>
           <isNotEmpty prepend="AND" property="sscbrName">
                B.sscbr_name = #sscbrName#
           </isNotEmpty>
           <isNotEmpty prepend="AND" property="issueYn">
                B.issue_yn  = #issueYn#
           </isNotEmpty>
    </select>
    
    <select id="selectTxinRequestListCount" parameterClass="taxBillRequestCriteria" resultClass="Integer">
        WITH v_temp AS (
            SELECT  A.tax_bill_seq
                  , MAX(B.order_user_id) userId
              FROM  tb_tax_bill_request_order A
                  , tb_order B
             WHERE  A.order_num = B.order_num
               <isNotEmpty prepend="AND" property="orderNum">
                    A.order_num = #orderNum#
               </isNotEmpty>
               <isNotEmpty prepend="AND" property="userId">
                    B.order_user_id = #userId#
               </isNotEmpty> 
             GROUP BY A.tax_bill_seq
        )
        SELECT  COUNT(*)
          FROM  v_temp A
              , tb_tax_bill_request B
              , tb_admin C
         WHERE  A.tax_bill_seq = B.tax_bill_seq
           AND  B.issue_mngr_admin_id = C.admin_id(+)
           <isNotEmpty prepend="AND" property="reqDtmStartDate" >
                B.req_dtm >= TO_DATE(#reqDtmStartDate#||'000000', 'yyyymmddhh24miss')
           </isNotEmpty>
           <isNotEmpty prepend="AND" property="reqDtmEndDate">
                B.req_dtm <![CDATA[<=]]> TO_DATE(#reqDtmEndDate#||'235959', 'yyyymmddhh24miss')
           </isNotEmpty>
           <isNotEmpty prepend="AND" property="sscbrName">
                B.sscbr_name = #sscbrName#
           </isNotEmpty>
           <isNotEmpty prepend="AND" property="issueYn">
                B.issue_yn  = #issueYn#
           </isNotEmpty>
    </select>
    
    <select id="selectTxinRequestPaymentAmountInfo" parameterClass="taxBillRequestCriteria" resultClass="taxBillRequestAmountInfo">
        WITH v_temp AS (
            SELECT  SUM(A.pymnt_amt + A.canc_rtn_amt) pymntAmt
                  , FC_GET_PYMNT_AMT_BY_MEANS_CODE(A.order_num, 'C0112') + FC_GET_PYMNT_AMT_BY_MEANS_CODE(A.order_num, 'C0116') taxBillAmt
              FROM  tb_payment A
                  , tb_tax_bill_request_order B
             WHERE  A.order_num = B.order_num
               AND  B.tax_bill_seq = #taxBillSeq#
             GROUP  BY A.order_num
        )
        SELECT  SUM(X.pymntAmt) pymntAmt
              , SUM(X.taxBillAmt) taxBillAmt
              , SUM(X.sellPrice) sellPrice
              , SUM(X.taxFreeSellPrice) taxFreeSellPrice
          FROM (SELECT  NVL(SUM(A.pymntAmt), 0) pymntAmt
                      , NVL(SUM(A.taxBillAmt), 0) taxBillAmt
                      , 0 sellPrice
                      , 0 taxFreeSellPrice
                  from  v_temp A
                  
                UNION ALL
                
                SELECT  0 pymntAmt
                      , 0 taxBillAmt
                      , NVL(SUM(DECODE(I.vat_tax_yn,'Y', DECODE(E.dlvy_gbn_code, 'C0131', 1,'C0132', -1) * F.dlvy_count * G.sngl_prdt_sell_price,0)),0) sellPrice
                      , NVL(SUM(DECODE(I.vat_tax_yn,'N', DECODE(E.dlvy_gbn_code, 'C0131', 1,'C0132', -1) * F.dlvy_count * G.sngl_prdt_sell_price,0)),0) taxFreeSellPrice
                  FROM  tb_tax_bill_request_order A
                      , tb_order B
                      , tb_order_destination C
                      , tb_order_delivery_request D
                      , tb_delivery E
                      , tb_order_delivery_product F
                      , tb_order_product G
                      , tb_sell_product H
                      , tb_vendor_contract I
                 WHERE  A.order_num = B.order_num
                   AND  B.order_num = C.order_num
                   AND  C.order_num = D.order_num
                   AND  C.order_dest_inseq = D.order_dest_inseq
                   AND  D.order_num = E.order_num
                   AND  D.order_dest_inseq = E.order_dest_inseq
                   AND  D.dlvy_vndr_id = E.dlvy_vndr_id
                   AND  E.dlvy_id = F.dlvy_id
                   AND  F.order_num = G.order_num
                   AND  F.order_prdt_inseq = G.order_prdt_inseq
                   AND  G.sell_prdt_bcode = H.sell_prdt_bcode
                   AND  H.vndr_cntrt_id = I.vndr_cntrt_id
                   AND  C.order_dest_inseq = '01'
                   AND  A.tax_bill_seq = #taxBillSeq#
                ) X
    </select>
    
    <insert id="insertSaleEBill" parameterClass="saleEBill">
        INSERT INTO saleEBill@center(
            ResSeq
          , DocCode
          , EBillKind
          , Customs
          , TaxSNum
          , DocAttr
          , PubDate
          , SystemCode
          , PubType
          , PubForm
          , MemID
          , MemName
          , Email
          , Tel
          , CoRegNo
          , CoName
          , CoCeo
          , CoAddr
          , CoBizType
          , CoBizSub
          , RecMemName
          , RecEMail
          , RecTel
          , RecCoRegNoType
          , RecCoRegNo
          , RecCoName
          , RecCoCeo
          , RecCoAddr
          , RecCoBizType
          , RecCoBizSub
          , SupPrice
          , Tax
          , Cash
          , PubKind
        )
        VALUES
        (
            #resSeq#
          , #docCode#
          , #eBillKind#
          , #customs#
          , #taxSNum#
          , #docAttr#
          , #pubDate#
          , #systemCode#
          , #pubType#
          , #pubForm#
          , #memID#
          , #memName#
          , #email#
          , #tel#
          , #coRegNo#
          , #coName#
          , #coCeo#
          , #coAddr#
          , #coBizType#
          , #coBizSub#
          , #recMemName#
          , #recEMail#
          , #recTel#
          , #recCoRegNoType#
          , #recCoRegNo#
          , #recCoName#
          , #recCoCeo#
          , #recCoAddr#
          , #recCoBizType#
          , #recCoBizSub#
          , #supPrice#
          , #tax#
          , #cash#
          , #pubKind#
        )
    </insert>
    
    <insert id="insertItemList" parameterClass="itemList">
        INSERT INTO ItemList@center(
            SeqID
          , DetailSeqID
          , ItemDate
          , ItemName
          , ItemSupprice
          , ItemTax
        )
        VALUES
        (
            #seqID#
          , #detailSeqID#
          , #itemDate#
          , #itemName#
          , #itemSupprice#
          , #itemTax#
        )
    </insert>
    
    <update id="updateTxinRequestComplete" parameterClass="taxBillRequestCriteria">
        UPDATE  tb_tax_bill_request
           SET  issue_dtm = SYSDATE
              , issue_yn = #issueYn#
              , issue_mngr_admin_id = #adminId#
         WHERE  tax_bill_seq = #taxBillSeq#
    </update>
    
    <select id="selectTxinRequest" parameterClass="taxBillRequestCriteria" resultClass="taxBillRequestParam">
        SELECT  A.SSCBR_NAME sscbrName
              , A.SSCBR_TEL_NUM sscbrTelNum
              , A.REQ_DTM reqDtm
              , A.ISSUE_DTM issuedtm
              , A.BIZ_REG_NUM bizRegNum
              , A.VNDR_NAME vndrName
              , A.PRIME_NAME primeName
              , A.BIZ_TYPE_INFO bizTypeInfo
              , A.BIZ_KIND_INFO bizKindInfo
              , A.VNDR_ADDR vndrAddr
              , A.MNGR_NAME mngrName
              , A.EMAIL_ADDR emailAddr
              , A.ISSUE_YN issueYn
              , A.ISSUE_MNGR_ADMIN_ID issueMngrAdminId
          FROM  tb_tax_bill_request A
         WHERE  A.tax_bill_seq = #taxBillSeq#
    </select>
    
    <select id="selectTxinRequestOrderByTaxBillSeq" parameterClass="taxBillRequestCriteria" resultClass="string">
        SELECT  A.order_num orderNum
          FROM  tb_tax_bill_request_order A
         WHERE  A.tax_bill_seq = #taxBillSeq#
    </select>
    
    <select id="selectMaxPaymentDtm" parameterClass="taxBillRequestCriteria" resultClass="string">
        SELECT  TO_CHAR(MAX(B.pymnt_dtm),'yyyyMMdd') pymntDtm
          FROM  tb_tax_bill_request_order A
              , tb_payment B
         WHERE  A.order_num = B.order_num
           AND  B.pymnt_stat_code = 'C0102'
           AND  A.tax_bill_seq = #taxBillSeq#
    </select>
    
    <select id="selectUserNumByOrderNum" parameterClass="coustomerSmsSendCriteria" resultClass="coustomerSmsSendParam">
		SELECT
		       a.user_num 			userNum,
		       a.buyer_name 		buyerName,
		       a.buyer_hdphn_num 	buyerHdphnNum,
		       b.rcvr_hdphn_num     rcvrHdphnNum,
		       b.rcvr_name			rcvrName
		  FROM
		       tb_order a,
		       tb_order_destination b
		 WHERE
		 	   a.order_num = b.order_num
		   AND a.order_num = #orderNum#
		   AND a.mall_id   = #mallId#
    </select>
    
    
    <select id="selectSmsHistoryBySmsSeq" parameterClass="String" resultClass="smsHistoryParam">
    	SELECT
			   a.sms_seq smsSeq,
			   a.user_num userNum,
			   a.mall_id mallId,
			   a.user_yn userYn,
			   a.sndr_tel_num sndrTelNum,
			   a.rcvr_tel_num rcvrTelNum,
			   a.send_msg sendMsg,
			   a.regst_dtm regstDtm,
			   a.order_num orderNum
		  FROM
		       tb_sms_history a
		 WHERE
		       sms_seq = #smsSeq#
    </select>
    
    <select id="selectLayerListSms" parameterClass="String" resultClass="smsHistoryParam">
		SELECT
			   a.sms_seq 		smsSeq,
			   a.user_num 		userNum,
			   a.mall_id 		mallId,
			   a.user_yn 		userYn,
			   a.sndr_tel_num 	sndrTelNum,
			   a.rcvr_tel_num 	rcvrTelNum,
			   a.send_msg 		sendMsg,
			   a.regst_dtm 		regstDtm,
			   a.order_num 		orderNum
		FROM
			  tb_sms_history a
		WHERE
		  	  a.user_num = #userNum#
	 ORDER BY a.sms_seq DESC
    </select>
    
    <select id="selectLayerListEmail" parameterClass="String" resultClass="mailQueueParam">
		SELECT
			   a.email_queue_seq 	queueSeq,
			   a.email_title 		title,
			   a.sndr_email_addr 	senderEmail,
			   a.email_cont 		content,
			   a.regst_dtm 			registDateTime,
			   a.send_yn 			sendYn,
			   a.send_dtm 			sendDateTime,
			   a.sndr_name 			sndrName,
			   a.user_num 			userNum,
			   a.mall_id 			mallId,
			   a.order_num 			orderNum,
			   b.rcvr_email_addr    rcvrEmailAddr	
		  FROM
		  	   tb_email_queue a,
		  	   tb_email_receiver b
		 WHERE
		       a.user_num = #userNum#
		   AND a.email_queue_seq = b.email_queue_seq
	  ORDER BY a.email_queue_seq DESC
    </select>
    
    <select id="selectLayerListEmailByQueueSeq" parameterClass="String" resultClass="mailQueueParam">
	    SELECT
			   a.email_queue_seq 	queueSeq,
			   a.email_title 		title,
			   a.sndr_email_addr 	senderEmail,
			   a.email_cont 		content,
			   a.regst_dtm 			registDateTime,
			   a.send_yn 			sendYn,
			   a.send_dtm 			sendDateTime,
			   a.sndr_name 			sndrName,
			   a.user_num 			userNum,
			   a.mall_id 			mallId,
			   a.order_num 			orderNum,
			   b.rcvr_email_addr 	rcvrEmailAddr,
			   b.rcvr_name 			rcvrName
		 FROM
			   tb_email_queue a,
			   tb_email_receiver b
		 WHERE
		  	   a.email_queue_seq = b.email_queue_seq
		   AND a.email_queue_seq = #queueSeq#
    </select>
    
    <select id="getListOrder" parameterClass="orderCriteria" resultClass="orderDetail">
        /*CustomerCenterSQL.getListOrder*/
        SELECT
            a.user_num          userNum
            , a.order_dtm       orderDate
            , a.order_num       orderNum
            , a.buyer_name      buyerName
            , a.buyer_tel_num   buyerTelNumber
            , a.buyer_hdphn_num buyerHandphoneNumber
            , b.rcvr_name       receiverName
            , b.rcvr_addr       receiverAddress
            , b.rcvr_dtl_addr   receiverDetailAddress
        FROM
            tb_order a
        JOIN
            tb_order_destination b on (b.order_num = a.order_num)
        WHERE
            a.user_num = #userNum#
        AND
            a.mall_id = '02'
        ORDER BY
            a.order_dtm DESC
    </select>
    
    <select id="getListCountOrder" parameterClass="orderCriteria" resultClass="int">
        /*CustomerCenterSQL.getListCountOrder*/
        SELECT
            COUNT(*)
        FROM
            tb_order a
        JOIN
            tb_order_destination b on (b.order_num = a.order_num)
        WHERE
            a.user_num = #userNum#
        AND
            a.mall_id = '02'
        AND
            ROWNUM <![CDATA[ < ]]> #topCount# + 1
    </select>
    
    <select id="getListReturnExchange" parameterClass="returnExchangeCriteria" resultClass="returnExchangeParam">
        /*CustomerCenterSQL.getListReturnExchange*/
        SELECT
            user_num            userNum
            , regst_dtm         registDtm
            , rtn_seq           returnSeq
            , order_num         orderNum
            , rcvr_name         offerer
            , cnsl_gbn_code     counselGubunCode
            , rtn_status_code   returnStatusCode
            , note
            , last_mod_dtm      lastModifyDtm
        FROM
            tb_return_exchange_master
        WHERE
            user_num = #userNum#
        AND
            CNSL_GBN_CODE in ('C0265', 'C0266')
        ORDER BY
            regst_dtm desc
    </select>
    
    <select id="getListCountReturnExchange" parameterClass="returnExchangeCriteria" resultClass="int">
        /*CustomerCenterSQL.getListCountReturnExchange*/
        SELECT
            COUNT(*)
        FROM
            tb_return_exchange_master
        WHERE
            user_num = #userNum#
        AND
            CNSL_GBN_CODE in ('C0265', 'C0266')
        AND
            ROWNUM <![CDATA[ < ]]> #topCount# + 1
    </select>
    
    <select id="getListSms" parameterClass="smsCriteria" resultClass="smsHistoryParam">
        /*CustomerCenterSQL.getListSms*/
        SELECT
            a.sms_seq        smsSeq,
            a.user_num       userNum,
            a.mall_id        mallId,
            a.user_yn        userYn,
            a.sndr_tel_num   sndrTelNum,
            a.rcvr_tel_num   rcvrTelNum,
            a.send_msg       sendMsg,
            a.regst_dtm      regstDtm,
            a.order_num      orderNum
        FROM
            tb_sms_history a
        WHERE
            a.user_num = #userNum#
        ORDER BY
            a.sms_seq DESC
    </select>
    
    <select id="getListCountSms" parameterClass="smsCriteria" resultClass="int">
        /*CustomerCenterSQL.getListCountSms*/
        SELECT
            COUNT(*)
        FROM
            tb_sms_history a
        WHERE
            a.user_num = #userNum#
        AND
            ROWNUM <![CDATA[ < ]]> #topCount# + 1
    </select>
    
    <select id="getListEmail" parameterClass="mailQueueCriteria" resultClass="mailQueueParam">
        /*CustomerCenterSQL.getListEmail*/
        SELECT
               a.email_queue_seq    queueSeq,
               a.email_title        title,
               a.sndr_email_addr    senderEmail,
               a.email_cont         content,
               a.regst_dtm          registDateTime,
               a.send_yn            sendYn,
               a.send_dtm           sendDateTime,
               a.sndr_name          sndrName,
               a.user_num           userNum,
               a.mall_id            mallId,
               a.order_num          orderNum,
               b.rcvr_email_addr    rcvrEmailAddr   
          FROM
               tb_email_queue a,
               tb_email_receiver b
         WHERE
               a.user_num = #userNum#
           AND a.email_queue_seq = b.email_queue_seq
      ORDER BY a.email_queue_seq DESC
    </select>
    
    <select id="getListCountEmail" parameterClass="mailQueueCriteria" resultClass="int">
        /*CustomerCenterSQL.getListCountEmail*/
        SELECT
               COUNT(*)   
          FROM
               tb_email_queue a,
               tb_email_receiver b
         WHERE
               a.user_num = #userNum#
           AND a.email_queue_seq = b.email_queue_seq
           AND ROWNUM <![CDATA[ < ]]> #topCount# + 1
    </select>
    
    <select id="getReturnExchangeSendMail" resultClass="returnExchangeSendMail" parameterClass="int">
    	SELECT
			   d.sell_prdt_bcode 							sellPrdtBcode ,
			   FC_get_product_image_url(d.sell_prdt_bcode) 	productImageUrl,
			   d.prdt_name 									prdtName ,
			   c.sngl_prdt_sell_price 						snglPrdtSellPrice,
			   b.rtn_count 									rtnCount ,
			   d.spec_name 									specName,
			   d.sell_prdt_gbn								sellPrdtGbn,
			   f.rcrd_cd									rcrdCd
		 FROM
			   tb_return_exchange_master a ,
			   tb_return_exchange_product b ,
			   tb_order_product c ,
			   tb_sell_product d ,
			   tb_order e,
			   tb_record f
		 WHERE
		  	   a.RTN_SEQ          = b.RTN_SEQ
		   AND b.ORDER_NUM        = c.ORDER_NUM
		   AND b.ORDER_PRDT_INSEQ = c.ORDER_PRDT_INSEQ
		   AND c.SELL_PRDT_BCODE  = d.SELL_PRDT_BCODE
		   AND e.order_num        = a.order_num
		   AND a.rtn_seq		  = #rtnSeq#
		   AND d.rcrd_cd 		  = f.rcrd_cd(+)
    </select>
    
    <select id="returnExchangeSendMailInfo" resultClass="returnExchangeSendMail" parameterClass="int">
	    SELECT
			  a.order_num 			orderNum,
			  a.user_num 			userNum,
			  a.regst_dtm 			registDtm,
			  a.rcvr_name			rcvrName,
			  a.sos_cnsl_code 		sosCounselCode,
			  b.buyer_email_addr 	buyerEmailAddr
		FROM
		  	  tb_return_exchange_master a,
		  	  tb_order b
		WHERE
		  	  a.order_num = b.order_num
		  AND a.rtn_seq = #rtnSeq#
    </select>
	
	<insert id="createGroupWareHistory" parameterClass="returnExchangeParam">
		<selectKey keyProperty="histSeq" resultClass="int" type="pre">
            SELECT SOS_GROUP_WARE_SEQ.NEXTVAL FROM DUAL
        </selectKey>
		INSERT INTO TB_SOS_GROUP_WARE_HISTORY (HIST_SEQ, STORE_ID, SOS_CNSL_CODE, TITLE, RCVR_NAME, RCVR_HDHPN_TELNUM, RCVR_EMAIL_ADDR, CNSL_CONT, REGST_DTM, SEND_YN, SEND_DTM, RTN_SEQ)
		VALUES(#histSeq#, #storeId#, #sosCounselCode#, #counselTitle#, #offerer#, #offerHandphoneNumber#, #offerEmailAddress#, #counselContent#, SYSDATE, #sendYn#, NULL, #sendNo#)
		
	</insert>
	
	<select id="selectGroupWareHistoryList" resultClass="returnExchangeParam">
		SELECT HIST_SEQ histSeq,
		  STORE_ID storeId,
		  SOS_CNSL_CODE sosCounselCode,
		  TITLE counselTitle,
		  RCVR_NAME offerer,
		  RCVR_HDHPN_TELNUM offerHandphoneNumber,
		  RCVR_EMAIL_ADDR offerEmailAddress,
		  replace(CNSL_CONT,CHR(10),'<![CDATA[<]]>br <![CDATA[/>]]>') counselContent
		FROM TB_SOS_GROUP_WARE_HISTORY
		WHERE SEND_YN = 'N'
	</select>
	
	<update id="updateGroupWareHistory" parameterClass="returnExchangeParam">
		UPDATE TB_SOS_GROUP_WARE_HISTORY
		SET SEND_YN    = #sendYn#,
		  SEND_DTM     = SYSDATE
		WHERE HIST_SEQ = #histSeq#
    </update>
	
    <select id="selectReceiptNo" resultClass="String">
		SELECT DECODE(MAX(RECEIPT_NO), NULL, 'AK'||TO_CHAR(SYSDATE,'YYMMDD')||'001'
		, SUBSTR(MAX(RECEIPT_NO),1,8)||TRIM(TO_CHAR(TO_NUMBER(SUBSTR(MAX(RECEIPT_NO),9,3)+1), '000')) 
		) NEXT 
		FROM AF.CS_REQ@CENTER
		WHERE RECEIPT_NO LIKE 'AK'||TO_CHAR(SYSDATE,'YYMMDD')||'%'
	</select>	
	
	<insert id="saveCsReq" parameterClass="csGroupWareParam">
        <selectKey keyProperty="reqSeq" resultClass="int" type="pre">
            SELECT MAX(REQ_SEQ) +1 FROM AF.CS_REQ@CENTER
        </selectKey>
        INSERT INTO AF.CS_REQ@CENTER(
          REQ_SEQ, DEPT_SYS_ID, COMPANY_SYS_ID, RECEIPT_NO, DISP_STAT_CD, REQ_SEP_CD1, REQ_TITLE, REQ_USER_NAME, REQ_TEL_NO,
		  REQ_EMAIL, REQ_DESC, REQ_FILE_CD, REP_SEP_CD1, REP_SEP_CD2, RGSR_DATE, RGSR_TIME, APPR_DEPT_SYS_ID
        ) VALUES (
          #reqSeq#, #deptSysId#, 'A001_1', #receiptNo#, 'U06901', #reqSepCd1#, #reqTitle#, #reqUserName#, #reqTelNo#,
		  #reqEmail#, #reqDesc#, '00000', #reqSepCd1#, #repSepCd2#, TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS'), 'B00000D001'
        )
    </insert>
	
	<select id="selectDeptSysId" parameterClass="String" resultClass="String">
		SELECT CASE WHEN DAYS = '금요일' AND TIMES <![CDATA[>=]]> 18 THEN ID
		            WHEN HOLIDAY = '공휴일' THEN ID
		            ELSE '10471' END AS ID
		FROM
		(            
		   SELECT ID
		        ,(SELECT DAYS FROM MBJ.BANKING_CALENDAR@center WHERE SOLARDAY = TO_CHAR(SYSDATE,'YYYYMMDD')) AS DAYS
		        ,(SELECT NVL(VACANCE,'일반') FROM MBJ.BANKING_CALENDAR@center WHERE SOLARDAY = TO_CHAR(SYSDATE,'YYYYMMDD')) AS HOLIDAY
		        ,TO_NUMBER(SUBSTR(TO_CHAR(SYSDATE,'HH24MISS'),1,2)) AS TIMES
		   FROM HP_EMPLOYEE
		   WHERE CS_DEPT_CODE = #deptSysId#
		     AND DUTY_CODE = DECODE(#deptSysId#,'B00000D001','018024','018014')
		     AND DECODE(#deptSysId#,'B00000D001',ID,1) = DECODE(#deptSysId#,'B00000D001','10871',1)
		)
	</select>
	
	<insert id="saveCsReply" parameterClass="csGroupWareParam">
        INSERT INTO AF.CS_REPLY@CENTER
		 (REQ_SEQ, DISP_SEQ, CUR_COMPANY_SYS_ID, CUR_DEPT_SYS_ID, CUR_USER_SYS_ID, CUR_DISP_STAT_CD, DISP_DATE, DISP_TIME)
		VALUES(#reqSeq#, 1, 'A001_1', #deptSysId#, #curUserSysId#, 'U06901', TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS'))
    </insert>
    
    <update id="updateCounsel" parameterClass="returnExchangeParam">
        /*CustomerCenterSQL.updateCounsel*/
        UPDATE
            tb_return_exchange_master
        SET
            RTN_REQ_GBN             = #returnRequestGubun#
            , ORDER_NUM             = #orderNum#
            , CNSL_GBN_CODE         = #counselGubunCode#
            , RTN_STATUS_CODE       = #returnStatusCode#
            , RCVR_NAME             = #offerer#
            , RCVR_TELNUM           = #offerTelNumber#
            , rcvr_hdphn_telnum     = #offerHandphoneNumber#
            , rtn_exchg_rns_code    = #returnExchangeResonCode#
            , note                  = #note#
            , cnsl_admin_id         = #counselAdminId#
            , sos_cnsl_code         = #sosCounselCode#
            , cnsl_title            = #counselTitle#
            , cnsl_cont             = #counselContent#
            , recv_email_addr       = #offerEmailAddress#
            , email_recv_yn         = #emailReceiveYn#
            , image_url             = #imageUrl#
            , rpmnt_acnt_num        = #repaymentAccountNum#
            , sos_proc_gbn          = #sosProcessGubun#
            , mngr_admin_id         = #managerAdminId#
            , last_mod_dtm          = SYSDATE
            , bank_code             = #bankCode#
            , acnt_hldr_name        = #accountHolderName#
            , sos_cnsl_gbn          = #sosCounselGubun#
            , store_id              = #storeId#
            , wabb_yn               = #wabbYn#
        WHERE
            rtn_seq = #returnSeq#
    </update>
    
    <delete id="deleteStandardAnswer" parameterClass="standardAnswer">
        /*CustomerCenterSQL.deleteStandardAnswer*/
        DELETE FROM
            tb_standard_answer
        WHERE
            std_aswr_seq = #standardAnswerSeq#
    </delete>
    
    <select id="getReturnExchangeFlagWithHanjin" parameterClass="string" resultClass="string">
        /*CustomerCenterSQL.getReturnExchangeFlagWithHanjin*/
        SELECT
            flag
        FROM
            TB_CST_ORD_MTR_KYOBOHT
        WHERE
            ord_num = #ordNum#
    </select>
    
    <delete id="deleteReturnExchangeFlagWithHanjin" parameterClass="string">
        /*CustomerCenterSQL.deleteReturnExchangeFlagWithHanjin*/
        DELETE FROM
            TB_CST_ORD_MTR_KYOBOHT
        WHERE
            ord_num = #ordNum#
    </delete>
    
    <select id="selectPaymentInfoListByOrderNum" parameterClass="string" resultClass="payment">
        WITH v_temp AS (
            SELECT  NVL(SUM(A.pymnt_amt),0) pymnt_amt
                  , 0 canc_rtn_amt
                  , A.pymnt_means_code
              FROM  tb_payment A
             WHERE  A.order_num = #value#
               AND  A.pymnt_stat_code = 'C0102'
             GROUP BY A.pymnt_means_code
            
            UNION
            
            SELECT  0 pymnt_amt
                  , SUM(A.canc_rtn_amt) canc_rtn_amt
                  , B.pymnt_means_code
              FROM  tb_payment A
                  , tb_payment B
             WHERE  A.order_num = B.order_num
               AND  A.org_pymnt_inseq = B.pymnt_inseq
               AND  A.order_num = #value#
               AND  A.pymnt_stat_code IN ('C0103', 'C0104')
             GROUP BY B.pymnt_means_code
        )
        SELECT  NVL(SUM(A.pymnt_amt + A.canc_rtn_amt),0) pymntAmt
              , A.pymnt_means_code pymntMeansCode
          FROM  v_temp A
         GROUP BY A.pymnt_means_code
    </select>
    
    <select id="selectCouponAmountByOrderNum" parameterClass="string" resultClass="int">
        WITH v_temp AS (
            SELECT  NVL(SUM(DECODE(B.count_cpn_yn, 'Y', B.order_count, 1) * B.cpn_dscnt_amt), 0) prdtCpnAmt
                  , 0 cancelCouponAmt
                  , 0 dlvyCpnAmt
                  , 0 orderCpnAmt
              FROM  tb_order A
                  , tb_order_product B
             WHERE  A.order_num = B.order_num
               AND  A.order_num = #value#
            
            UNION
           
            SELECT  0 prdtCpnAmt
                  , NVL(SUM(A.cpn_dscnt_amt),0) cancelCouponAmt
                  , 0 dlvyCpnAmt
                  , 0 orderCpnAmt
              FROM  tb_order_cancel_product A
             WHERE  A.order_num = #value#
            
            UNION
            
            SELECT  0 prdtCpnAmt
                  , 0 cancelCouponAmt
                  , NVL(SUM(A.cpn_dscnt_amt),0) dlvyCpnAmt
                  , 0 orderCpnAmt
              FROM  tb_order_delivery_request A
                  , tb_delivery B
             WHERE  A.order_num = B.order_num
               AND  A.order_dest_inseq = B.order_dest_inseq
               AND  A.dlvy_vndr_id = B.dlvy_vndr_id
               AND  A.order_num = #value#
               AND  B.dlvy_gbn_code = 'C0131'
               AND  B.dlvy_status_code != 'C0125'
               
            UNION
            
            SELECT  0 prdtCpnAmt
                  , 0 cancelCouponAmt
                  , 0 dlvyCpnAmt
                  , NVL(SUM(A.cpn_amt),0) orderCpnAmt
              FROM  tb_cart_coupon_history A
             WHERE  A.order_num = #value#
        )
        SELECT  SUM((prdtCpnAmt - cancelCouponAmt) + dlvyCpnAmt + orderCpnAmt) cpnDscntAmt
          FROM  v_temp
    </select>
    
    <select id="selectOrderProductByDlvyVndrId" parameterClass="orderProductInfo" resultClass="orderProduct">
        SELECT  A.order_num orderNum
              , A.order_prdt_inseq productInnerSequence
              , A.sell_prdt_bcode barcode
              , A.vndr_cntrt_id vendorCntractId
              , A.order_count orderCount
              , A.order_prdt_amt sellProductPriceSum
              , A.canc_count cancelCount
              , A.cpn_dscnt_amt couponPrice
              , A.order_prdt_stat_code statusCode
              , A.optn_price_sum optionPrice
              , A.sngl_prdt_buy_price buyPrice
              , A.sngl_prdt_sell_price sellProductPrice
              , A.sngl_prdt_chge_price chargePrice
              , A.sngl_prdt_kyobo_chge_price kyoboChargePrice
              , A.kyobo_ccl_yn kyoboCalculateYn
              , A.order_dest_inseq destinationInnerSequence
              , A.optn_name optionName
              , A.ctgr_id categoryId
              , A.sngl_prdt_dscnt_rate discountRate
              , A.sngl_prdt_org_sell_price orgSellPrice
              , A.last_mod_dtm lastModifyDatetime
              , FC_GET_FREE_DLVY_YN(A.sell_prdt_bcode,#mallId#) freeDeliveryYn
              , A.count_cpn_yn countCouponYn
              , A.kyobo_cpn_id kyoboCouponId
          FROM  tb_order_product A
         WHERE  A.order_num = #orderNum#
           AND  A.order_dest_inseq = #destinationInnerSequence#
           AND  A.dlvy_vndr_id = #deliveryVendorId#
    </select>
    
    <select id="selectOrderDeliveryRequestByOrderNum" parameterClass="orderProduct" resultClass="orderDeliveryRequest">
        SELECT  A.order_num orderNum
              , A.order_dest_inseq destinationSequence
              , A.dlvy_vndr_id deliveryVendorId
              , A.order_dlvy_amt deliveryAmount
              , A.order_dlvy_chng_amt deliveryChangeAmount
              , A.order_dlvy_amt_chng_rsn_code deliveryAmountChangeReasonCode
              , A.at_dlvy_amt atDeliveryAmount
              , A.at_dlvy_std_amt atDeliveryStandardAmount
              , A.kyobo_cpn_id couponId
              , A.cpn_dscnt_amt couponPrice
          FROM  tb_order_delivery_request A
              ,(SELECT  order_num
                      , order_dest_inseq
                      , dlvy_vndr_id
                  FROM  tb_delivery
                 WHERE  order_num = #orderNum#
                   AND  dlvy_gbn_code = 'C0131'
                   AND  dlvy_status_code != 'C0125') B
         WHERE  A.order_num = B.order_num
           AND  A.order_dest_inseq = B.order_dest_inseq
           AND  A.dlvy_vndr_id = B.dlvy_vndr_id
           AND  A.order_num = #orderNum#
           AND  A.order_dest_inseq = #destinationInnerSequence#
    </select>
    
     <insert id="returnDeliveryAmt" parameterClass="returnExchangeParam">
        insert into TB_RETURN_DELIVERY_AMT ( RTN_SEQ
                                           , ORDER_NUM
                                           , DLVY_VNDR_ID
                                           , RETURN_DELI_AMT
                                           , REG_ID
                                           , REG_DT
                                           , CONF_DT
                                           , CONF_YN 
                                           , CHADELIAMT
                                           , METH
                                           , CHADELIAMTCONFYN
                                           , PYMNT_INSEQ)
                                    values ( #rtnSeq#
                                           , #orderNum#
                                           , #deliveryVendorId#
                                           , #returnDeliveryAmt#
                                           , #counselAdminId#
                                           , sysdate
                                           , '' 
                                           , 'N' 
                                           , #chaDeliAmt#
                                           , #meth#
                                           , 'N'
                                           , #pymntInseq#)
    </insert>
    
    <select id="getOrderProductBarcode" parameterClass="returnExchangeProductParam" resultClass="string">
		select (case when B.SELL_PRDT_GBN in ('R','D','C') then A.SELL_PRDT_BCODE
		            else '0000' end) barcode
		  from TB_ORDER_PRODUCT A
		     , TB_SELL_PRODUCT B
		 where A.ORDER_NUM = #orderNum#
		   and A.ORDER_PRDT_INSEQ = #orderProductInseq#
		   and A.SELL_PRDT_BCODE = B.SELL_PRDT_BCODE
    </select>
    
    <insert id="setOffSavePoint" parameterClass="backSearchParam">
		insert into TB_OFFLINE_SAVEPOINT (SEQ, USER_NUM, REPNO, AMT, SUCCYN, MSG, REG_DT)
		values ( (select nvl(max(SEQ),0) + 1 from TB_OFFLINE_SAVEPOINT)
		       , #stVar1#
		       , #stVar2#
		       , #stVar3#
		       , #stVar4#
		       , #stVar5#
		       , sysdate 
		       )
    </insert>
    
</sqlMap>